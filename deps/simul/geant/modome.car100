+TITLE.
C MODOME  1.16/25  991125  9.00         WA97 PRIVATE MODIFICATIONS OF THE GEANT PAMS
+PATCH, HEADER.
*...MODOME WA97 PRIVATE MODIFICATIONS OF THE GEANT PAMS                 05/10/92
*.
*.
*.               ----------------------------------------------
*.               I                                            I
*.               I                                            I
*.               I                  W A 9 7                   I
*.               I                                            I
*.               I                                            I
*.               I                M O D O M E                 I
*.               I                -----------                 I
*.               I                                            I
*.               I                                            I
*.               ----------------------------------------------
*.
*.
*.        PAM CONTAINING THE PRIVATE MODIFICATIONS OF THE GEANT PAMS
*.
*.        SUCCESSIVE EDITIONS
*.        -------------------
*.
*.        1.00      05/10/92       INITIAL RELEASE
*.        1.01      21/12/92
*.        1.02      08/09/93
*.        1.03      16/11/93
*.        1.04      25/05/94       GEANT 3.21 ADAPTATION
*.        1.05      04/10/94
*.        1.06      13/03/95
*.        1.07      15/05/95
*.        1.08      02/01/96
*.        1.09      29/04/96
*.        1.10      15/01/97       96A VERSION
*.        1.11      01/09/97       97A VERSION
*.        1.12      11/05/98
*.        1.13      18/05/98
*.        1.14      04/02/99       98  VERSION
*.        1.15      05/02/99
*.        1.16      25/11/99     2000  VERSION
*.
*.
*.        AVAILABLE +USE OPTIONS:
*.        -----------------------
*.
*.        LARGE     TO COVER THE COMPLETE SURFACE OF A RECTANGULAR SCREEN
*.
*.
*.------------------------------------------------------------------------------
*.
*.        CONTENTS
*.
*.        THIS PAM CONTAINS THE FOLLOWING PATCHES =
*.
*.        - HEADER   HEADER OF MODOME PAM
*.        - *GMOD    PILOT PATCH FOR THE GEANT MODIFICATIONS
*.        - GMOD     PATCH OF MODIFICATIONS
*.        - MIL      MIL STANDART ROUTINES MISSING WITH F2C
*.        - ASA      ASA STANDART ROUTINES MISSING WITH F2C
*.        - PAMEND   TERMINATION PATCH
*.
*.------------------------------------------------------------------------------
*.
*.        CONTEXT
*.
*.        THIS PAM REQUIRES PATCHES FROM FOLLOWING PAMS =
*.
*.        - GEANC   GEANT CRADLE OF CORRECTIONS
*.        - GEANT   GEANT PAM
*.        - GEANG   GEANT PAM
*.        - GEANX   GEANT PAM
*.        - GEANH   GEANT PAM
*.        - GEANE   GEANT PAM
*.        - GEANF   GEANT PAM
*.        - GEANM   GEANT PAM
*.
*.------------------------------------------------------------------------------
+DECK, VERSIONS.                        DESCRIPTION OF SUCCESSIVE EDITIONS
*-
*-
*-        SUCCESSIVE EDITIONS
*-        -------------------
*-
*- -----------------------------------------------------------------------------
*-
*-        VERSION   DECK      MODIFICATIONS                                  AUT
*-
*-
*-        1.16      ALL       GEANT321/13 R2000 CARD COUNT CVSTOCAR VERSION  MIQ
*-
*-        1.15      NONE      IDENTICAL TO 1.14                              MIQ
*-
*-        1.14      ALL       GEANT321/11 R98  CARD COUNT CVSTOCAR VERSION   MIQ
*-                  ERTRCH    REPLACE #IF DEFINED(DEBUG) BY +SELF, IF=DEBUG. MIQ
*-
*-        1.13      *GMOD     INHIBIT THE PARALLEL PROCESSING ROUTINES       MIQ
*-
*-        1.12      GGCLOS    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  GDRMAT    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  GHETUN    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  HIGCLU    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  NUCRIV    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  FLKDT2    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  GMXSEC    MOVE A DATA STATEMENT FOR F2C COMPILER         MIQ
*-                  GCNMEC    DIVIDED FOR F2C COMPILER                       MIQ
*-
*-        1.11      ALL       GEANT321/07 R97A CARD COUNT CVSTOCAR VERSION   MIQ
*-
*-        1.10      ALL       GEANT321/05 R96A CARD COUNT CVSTOCAR VERSION   MIQ
*-                  GMOD      ADD DECS CORRECTION FOR P=GBASE, D=GETVER      MIQ
*-                  UMLOG     DUMMY DECK ADDED                               MIQ
*-
*-        1.09      GXGEOM    CORRECTION FOR A BUG: WAIT RAVNDAL ANSWER      MIQ
*-                  GPAIRG    CORRECTION FOR A BUG IN +DECK LINE             MIQ
*-                  PREPRE    CORRECTION FOR A BUG IN +DECK LINE             MIQ
*-
*-        1.08      NONE      IDENTICAL TO 1.07                              MIQ
*-
*-        1.07      GXGEOM    REMOVE CORRECTION (IMPLEMENTED ON PAM)         MIQ
*-                  ALL       GEANT321 R95A CARD COUNT CHANGE                MIQ
*-
*-        1.06      ALL       GEANT321 R94B CARD COUNT CHANGE                MIQ
*-                  GXGCON    FORCE CLEAR WORKSTATION FOR THE 'NEXT' CMD     MIQ
*-                            BUT KEEP THE HPLOT CALL (FOR GEANT++)
*-                  GXGEOM    CORRECTION FOR A BUG: WAIT NEW CORR. CRADLE    MIQ
*-
*-        1.05      GXGCON    FORCE CLEAR WORKSTATION FOR THE 'NEXT' CMD     MIQ
*-
*-        1.04      GPHYSI    REMOVE THE USER MODIFICATION, NOW USELESS      MIQ
*-                  GDPART    REMOVE THE USER MODIFICATION, IBMMVS ONLY      MIQ
*-                  GDXYZ     REMOVE THE USER MODIFICATION, NOW USELESS      MIQ
*-                  GKDRAW    REMOVE THE USER MOD, NOW ON THE PAM            MIQ
*-                  GXFZ      REMOVE THE VAX  MOD, NOW ON THE PAM            MIQ
*-                  ERPINI    REMOVE THE USER MODIFICATION, NOW USELESS      MIQ
*-                  GDSPEC    USE HIGZ ROUTINE IGQWK INSTEAD MGKS GQMDS      MIQ
*-                  GDINIT    USE HIGZ ROUTINE IGQWK INSTEAD MGKS GQMDS      MIQ
*-                  GXGCON    MOD FOR 'NEXT' COMMAND IF=LARGE                MIQ
*-
*-        1.03      GTRIG     REMOVE THE USER MODIFICATION, NOW USELESS      MIQ
*-                  GZINIT    REMOVE THE USER MODIFICATION, NOW IN GOINIT    MIQ
*-                  GINIT     REMOVE THE USER MODIFICATION, NOW IN GOINIT    MIQ
*-                  GXINT     GDRAW/PSI ALLOWS 0 - 360                       MIQ
*-
*-        1.02      GXINT     ADD SOME CORRECTIONS FOR VAX                  FINI
*-
*-        1.01      GINIT     DECREASE MAXNST FROM 10000 TO 5000             MIQ
*-                  GDPLST    ADD OPTION 'T' TO TERMINE                      MIQ
*-                  GDTREE    REMOVE ADDED MATERIAL FOR INTERACTIVE, NOW IN  MIQ
*-                            GDPLST
*-                  ALL       REMOVE THE +USE, LINES                         MIQ
*-                  GDSPEC    ADD CALL ICLRWK TO GET THE CORRECT WINDOW      MIQ
*-
*-        1.00      PAM       INITIAL RELEASE                            MEV+MIQ
*-
*- -----------------------------------------------------------------------------
+PATCH, *GMOD.
+KEEP, HDGMODP, P=*GMOD.
*...P=*GMOD PILOT PATCH FOR THE WA97 GEANT MODIFICATIONS                05/10/92
*.
*.  AUTHORS :
*.        ALAIN MICHALON
*.        MARIE-EVE MICHALON-MENTZER
*.
+SEQ, FINCOM, T=PASS.
+USE, *GEANT321.
+USE, GMOD, T=EXEC.
+USE, GCORR.
+USE, CG.
+USE, GXINT.
+USE, GXINT, D=GXINT, T=INHIBIT.
+USE, GPARAL, T=INHIBIT, IF=-PARA.
+SELF.
+USE, UNIX, IF=HPUX,DECS,IBMRT,SUN,LINUX.
+USE, MIL,  T=EXEC, IF=F2C.
+USE, ASA,  T=EXEC, IF=F2C.
+USE, GEANT321, IF=GCDES.               NEW NAME SINCE REL 96A
+USE, MATX55, ERPREMC, ERDECKS.         MISSING IN PILOT
+USE, KUIP95A.
+PATCH, GMOD.
+KEEP, HDGMOD, P=GMOD.
*...P=GMOD WA97 PRIVATE MODIFICATIONS OF THE GEANT PAMS                 05/10/92
*.
*.  AUTHORS :
*.        ALAIN MICHALON
*.        MARIE-EVE MICHALON-MENTZER
*.
+SEQ, FINCOM, T=PASS.
+SELF. ============================================================
+SELF. =                 GEANT CORRECTIONS                        =
+SELF. ============================================================
+REP, GEANT321, , 2353, IF=F2C.         GCNMEC IS DIVIDED IN TWO PARTS
-KEEP, GCNMEC1, IF=-INCLUDE.
+ADD, GEANT321, , 2358, IF=F2C.         WHICH CAN BE USED SEPARTLY WITH F2C
-KEEP, GCNMEC2, IF=-INCLUDE.
+ADD, GEANT321, , 2376, IF=F2C.         WHEN NEEDED (DATA STMT POSITION PB)
-KEEP, GCNMEC, IF=-INCLUDE.
-CDE, GCNMEC1.
-CDE, GCNMEC2.
+SELF. ----------------- GBASE    GETVER --------------------------
+REP, GBASE, GETVER, 56, IF=DECS.       BUG XXH FIELD FOR DECS
     + 40H GEANT   3.21/13  15111999                                    DECS
+SELF. ----------------- GBASE    GGCLOS --------------------------
+DEL, GBASE, GGCLOS, 49-50, IF=F2C. SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+ADD, GBASE, GGCLOS, 52,    IF=F2C. SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
      DATA           JFIRST / 0 /
      SAVE           JFIRST
+SELF. ============================================================
+SELF. =                 GEANG CORRECTIONS                        =
+SELF. ============================================================
+SELF. ----------------- GDRAW    GD3D3D --------------------------
+REP, GDRAW, GD3D3D, 70-75.   CHANGE DEFAULTS WHEN ROTATION IS NOT DEFINED
   20 CONTINUE
      VL(1)  =  1.
      VL(2)  =  0.
      VL(3)  =  0.
      VM(1)  =  0.
      VM(2)  =  0.
      VM(3)  =  1.
+SELF. ----------------- GDRAW    GDCGVW --------------------------
+REP, GDRAW, GDCGVW, 100-105. CHANGE DEFAULTS WHEN ROTATION IS NOT DEFINED
      VL(1)  =  1.
      VL(2)  =  0.
      VL(3)  =  0.
      VM(1)  =  0.
      VM(2)  =  0.
      VM(3)  =  1.
+SELF. ----------------- GDRAW    GDFR3D --------------------------
+REP, GDRAW, GDFR3D, 110-115. CHANGE DEFAULTS WHEN ROTATION IS NOT DEFINED
   20 CONTINUE
      VL(1)  =  1.
      VL(2)  =  0.
      VL(3)  =  0.
      VM(1)  =  0.
      VM(2)  =  0.
      VM(3)  =  1.
+SELF. ----------------- GDRAW    GDFSPC --------------------------
+SELF.   WAIT OPERATOR ANSWER TO IRQLC TO GO TO NEXT PICTURE
+REP, GDRAW, GDFSPC, 110-115, IF=STRASB.
         CALL IRQLC ( 1, 1, ICHKE, IDUM1, DUM1, DUM2 )
         CHKEY = CHAR ( ICHKE )
         IF ( CHKEY .EQ. 'S' )          GO TO 990
+ADD, GDRAW, GDFSPC, 122, IF=STRASB.
  990 CONTINUE
+SELF. ----------------- GDRAW    GDHEAD --------------------------
+REP, GDRAW, GDHEAD, 48-50, IF=LARGE.  TO AVOID CLIPPING OUTSIDE HEADER
      DATA           UH1  /  0.,  0., 20., 20.,  0. /
      DATA           VH1  / 20.,  0.,  0., 20., 20. /
      DATA           UHH1 /  0., 20. /
+REP, GDRAW, GDHEAD, 102.     ERROR IN GSCHH IF CHRSIZ = 0 (FROM GDSPEC)
      IF ( ISEL0 .NE. 0 .AND. CHRSIZ .NE. 0. )    THEN
+SELF. ----------------- GDRAW    GDINIT --------------------------
+ADD, GDRAW, GDINIT, 23, IF=LARGE.
      DIMENSION      RVAL(2)
+REP, GDRAW, GDINIT, 167-168, IF=LARGE.
      CALL IGQWK  ( 1, 'MXDS', RVAL(1) )
      XMAX  = RVAL(1)
      YMAX  = RVAL(2)
      XYMAX = YMAX/XMAX
      CALL ISWKVP ( 1, 0.,   XMAX, 0.,   YMAX )
      CALL ISWKWN ( 1, 0.,     1., 0.,  XYMAX )
      CALL ISWN   ( 1, 0., PLTRNX, 0., PLTRNY )
      CALL ISVP   ( 1, 0.,     1., 0.,  XYMAX )
      CALL ISELNT ( 1 )
+DEL, GDRAW, GDINIT, 170, IF=LARGE.
+SELF. ----------------- GDRAW    GDPLST --------------------------
+ADD, GDRAW, GDPLST, 94.     ADD OPTION 'S' OR 'T' = TERMINATION
      IF ( GCHAR .EQ. 'S' )             GO TO 110
      IF ( GCHAR .EQ. 'T' )             GO TO 110
+SELF. ----------------- GDRAW    GDRAWP --------------------------
+REP, GDRAW, GDRAWP, 184.
         ELSE IF ( LINSTY.GT.1.AND.LINSTY.LE.5) THEN
+SELF. ----------------- GDRAW    GDSPEC --------------------------
+ADD, GDRAW, GDSPEC, 23, IF=LARGE.
      DIMENSION      RVAL(2)
+REP, GDRAW, GDSPEC, 76, IF=LARGE.
      CALL IGQWK  ( 1, 'MXDS', RVAL(1) )
      XMAX = RVAL(1)
      YMAX = RVAL(2)
      XMIN =        (XMAX-YMAX)/2.
      XMAX = XMAX - (XMAX-YMAX)/2.
      CALL ISWKVP ( 1, XMIN,   XMAX, 0.,   YMAX )
      CALL ISWKWN ( 1,   0.,     1., 0.,     1. )
      CALL ISWN   ( 1,   0., PLTRNX, 0., PLTRNY )
      CALL ISVP   ( 1,   0.,     1., 0.,     1. )
      CALL ISELNT ( 1 )
      CALL ICLRWK ( 0, 0 )
+ADD, GDRAW, GDSPEC, 395, IF=LARGE.
      XMAX  = RVAL(1)
      YMAX  = RVAL(2)
      XYMAX = YMAX/XMAX
      CALL ISWKVP ( 1, 0.,   XMAX, 0.,   YMAX )
      CALL ISWKWN ( 1, 0.,     1., 0.,  XYMAX )
      CALL ISWN   ( 1, 0., PLTRNX, 0., PLTRNY )
      CALL ISVP   ( 1, 0.,     1., 0.,  XYMAX )
+SELF. ----------------- GDRAW    GDTREE --------------------------
+REP, GDRAW, GDTREE, 154, IF=LARGE.
      CALL ISWN   ( 1, 0., PLTRNX, 0., PLTRNY )
+ADD, GDRAW, GDTREE, 412, IF=LARGE.
      CALL ISWN   ( 1, 0., PLTRNX, 0., PLTRNY )
+SELF. ============================================================
+SELF. =                 GEANX CORRECTIONS                        =
+SELF. ============================================================
+SELF. ----------------- GXINT    GDRMAT --------------------------
+REP, GXINT, GDRMAT, 43, IF=F2C.    SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+CDE, GCNMEC1.
+ADD, GXINT, GDRMAT, 44, IF=F2C.    SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+CDE, GCNMEC2.
+SELF. ----------------- GXINT    GXGCON --------------------------
+ADD, GXINT, GXGCON, 28, IF=LARGE.
      DIMENSION      RRVAL(2)
+REP, GXINT, GXGCON, 124-125, IF=LARGE. SCREEN WAS NOT ERASED
         CALL IGQWK  ( 1, 'MXDS', RRVAL(1) )
         XMAX  = RRVAL(1)
         YMAX  = RRVAL(2)
         XYMAX = YMAX/XMAX
         CALL ISWKVP ( 1, 0.,   XMAX, 0.,   YMAX )
         CALL ISWKWN ( 1, 0.,     1., 0.,  XYMAX )
         CALL ISWN   ( 1, 0., PLTRNX, 0., PLTRNY )
         CALL ISVP   ( 1, 0.,     1., 0.,  XYMAX )
         CALL ISELNT ( 1 )
         CALL ICLRWK ( 0, 0 )
+SELF. ============================================================
+SELF. =                 GEANE CORRECTIONS                        =
+SELF. ============================================================
+EXEC, ERDECKS, ERPREMC, MATX55.
+SELF. ----------------- ERPRCDES BLANKDEK ------------------------
+KEEP, MXPRED.
      PARAMETER      ( MXPRED=50 )
+REP, GEANT321, , 1247.          INCREASE NUMBER OF PREDICTIONS
+SEQ, MXPRED.
+REP, GEANT321, , 1274.          INCREASE NUMBER OF PREDICTIONS
+SEQ, MXPRED.
+SELF. ----------------- ERDECKS  ERSTOR --------------------------
+DEL, ERDECKS, ERSTOR, 65-70.    STORE MATRIX IN SC SYSTEM
+REP, ERDECKS, ERSTOR, 85.       STORE PX, PY, PY
         ERPOUT(I,ILPRED) = VECT(I+3)*VECT(7)
+SELF. ----------------- ERDECKS  ERTRCH --------------------------
+REP, ERDECKS, ERTRCH, 153.             UNSUPPORTED PRECOMPILER OPTION
-SELF, IF=DEBUG.
+REP, ERDECKS, ERTRCH, 161.             UNSUPPORTED PRECOMPILER OPTION
-SELF.
+SELF. ============================================================
+SELF. =                 GEANH CORRECTIONS                        =
+SELF. ============================================================
+SELF. ----------------- GHROUT   GHETUN --------------------------
+ADD, GHROUT, GHETUN, 63,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
-SELF, IF=-SINGLE.
      DOUBLE PRECISION AHMF, BHMF
-SELF.
+DEL, GHROUT, GHETUN, 73-75, IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+SELF. ----------------- GHROUT   HIGCLU --------------------------
+ADD, GHROUT, HIGCLU, 25,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
      DIMENSION      PSUP(6)
+DEL, GHROUT, HIGCLU, 29,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+SELF. ----------------- GIFACE   GHEISH --------------------------
+REP, GIFACE, GHEISH, 107.      REMOVE UNEXPECTED DEBUG PRINTS DUE TO SWITCH USE
      NPRT(JJ) = .FALSE.
+SELF. ============================================================
+SELF. =                 GEANF CORRECTIONS                        =
+SELF. ============================================================
+SELF. ----------------- FLUKA    NUCRIV --------------------------
+DEL, FLUKA, NUCRIV, 67-70,   IF=F2C.  SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+DEL, FLUKA, NUCRIV, 90,      IF=F2C.  SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+DEL, FLUKA, NUCRIV, 108-112, IF=F2C.  SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+DEL, FLUKA, NUCRIV, 114,     IF=F2C.  SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+ADD, FLUKA, NUCRIV, 116,     IF=F2C.  SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
      SAVE THRESR,ITPRF,IAMC,JAMC,INS,IXPI,JNUC
      DATA THRESR/1.9D0, 0.D0, 5*9.D0, 1.9D0, 0.D0, 3*9.D0, 1.08D0,
     * 1.08D0, 1.44D0, 1.08D0, 6*9.D0, 1.08D0,
     * 1.44D0, 1.08D0, 5*9.D0/
 
      DATA IXPI/1,-1,5*2,1,-1,3*2,1,0,1,0,4,4,2,3*4,1,1,1,5*2/
 
      DATA IAMC/1,2,8,9,12,15,16,17,18,19,20,21,22,24,25/
      DATA JAMC/2*1,5*0,2*1,2*0,1,2*0,16*0/
      DATA INS/13,13,5*32,14,14,3*32,10,10
     *,12,11,7*32,15,15,5*32/
      DATA JNUC/0/
 
      DATA ITPRF/-1,-1,5*1,-1,-1,1,1,1,-1,-1,-1,-1,6*1,-1,-1,-1,85*1/
 
+SELF. ----------------- BLOCK    FLKDT2 --------------------------
+DEL, BLOCK, FLKDT2,  18,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+DEL, BLOCK, FLKDT2,  20,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+DEL, BLOCK, FLKDT2,  22,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+ADD, BLOCK, FLKDT2,  24,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
      DATA           CDDT1 / .3D0 /
      DATA           RUNT1 / 2*100.D0 /
      DATA           IDGB1, IGB1 / 0, 0 /
+SELF. ============================================================
+SELF. =                 GEANM CORRECTIONS                        =
+SELF. ============================================================
+SELF. ----------------- MIFACE   GMXSEC --------------------------
+REP, MIFACE, GMXSEC, 9,     IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+CDE, GCNMEC1.
+ADD, MIFACE, GMXSEC, 25,    IF=F2C.   SYNTAX ERROR WITH F2C: MOVE THE DATA STMT
+CDE, GCNMEC2.
+SELF.
+SELF.
+SELF.
+DECK, UMLOG.
      SUBROUTINE UMLOG ( CHDUMM, DUMMY )
 
      CHARACTER*(*)  CHDUMM
C     PRINT *, ' DUMMY UMLOG ROUTINE REACHED'
      RETURN
      END
+PATCH, MIL, IF=F2C.
+SELF.    MATERIAL EXTRACTED FROM KERNGEN VERSION 97A
+KEEP, Q_ANDOR.
* Revision 1.1.1.1  1996/02/15 17:49:19  mclareni
* Kernlib
*    IAND / IOR / IEOR / NOT  standard?
* q_andor.inc
      IAND (IZV,IZW) = AND (IZV, IZW)
      IOR  (IZV,IZW) =  OR (IZV, IZW)
      IEOR (IZV,IZW) = XOR (IZV, IZW)
+KEEP, IALL1S.
C    set a word of all ones
      PARAMETER   (IALL11 = -1)
+KEEP, WORDSIZE.
* Revision 1.1.1.1  1996/02/15 17:49:18  mclareni
* Kernlib
* wordsize.inc
*    # of bits/word
*    # of characters/word
      PARAMETER   (NBITPW=32)
      PARAMETER   (NCHAPW=4)
+DECK,  IBITS, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:49:44  mclareni
* Kernlib
 
      FUNCTION IBITS(I,N,L)
C
C CERN PROGLIB# M441    IBITS           .VERSION KERNFOR  4.16  870601
C ORIG. 01/03/85  M.METCALF
C
C      FORTRAN VERSION OF MIL-STD-1753 FUNCTION IBITS
C      N IS THE RIGHTMOST BIT OF THE REQUIRED FIELD
C      L IS THE LENGTH OF THE REQUIRED FIELD
C
+CDE, WORDSIZE.
C
      IBITS = ISHFT(ISHFT(I, NBITPW-L-N), L-NBITPW)
      END
+DECK,  ISHFTC, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:49:48  mclareni
* Kernlib
 
      FUNCTION ISHFTC(I,K,L)
C
C CERN PROGLIB# M441    ISHFTC          .VERSION KERNFOR  4.16  870601
C ORIG. 01/10/85  T.LINDELOF
C
C      FORTRAN VERSION OF MIL-STD-1753 ISHFTC FUNCTION
C      K IS THE SHIFT COUNT - NEGATIVE TO THE RIGHT
C                             POSITIVE TO THE LEFT
C      L IS THE NUMBER OF THE RIGHTMOST BITS TO BE SHIFTED, ALL
C         OTHER BITS ARE LEFT UNCHANGED
C
+CDE, WORDSIZE.
+CDE, IALL1S.
 
+CDE, Q_ANDOR.
* Ignoring t=pass
C
      IF (K.GT.0) THEN
         ISHFTC = IOR(IAND(ISHFT(IALL11, L), I),
     +    IOR(ISHFT(ISHFT(I, NBITPW-L), K-NBITPW),
     +        ISHFT(ISHFT(I, NBITPW-L+K), L-NBITPW)))
      ELSEIF (K.LT.0) THEN
         ISHFTC = IOR(IAND(ISHFT(IALL11, L), I),
     +        IOR(ISHFT(ISHFT(I, NBITPW-L), L+K-NBITPW),
     +        ISHFT(ISHFT(I, NBITPW+K), L-NBITPW) ))
      ELSE
         ISHFTC = I
      ENDIF
      END
+DECK,  MVBITS, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:49:49  mclareni
* Kernlib
 
      SUBROUTINE MVBITS(I,N,L,J,M)
C
C CERN PROGLIB# M441    MVBITS          .VERSION KERNFOR  4.16  870601
C ORIG. 01/10/85  T.LINDELOF
C
C      FORTRAN VERSION OF MIL-STD-1753 SUBROUTINE MVBITS
C      N IS THE POSITION IN I FROM WHICH BITS ARE EXTRACTED
C      L IS THE NUMBER OF BITS TO BE EXTRACTED
C      M IS THE POSITION IN J INTO WHICH BITS ARE TO BE PLACED
C
+CDE, WORDSIZE.
+CDE, IALL1S.
 
+CDE, Q_ANDOR.
* Ignoring t=pass
C
      J = IOR(IAND(ISHFT(IALL11, L+M), J),
     +       IOR(IAND(NOT(ISHFT(IALL11, M)), J),
     +       ISHFT(ISHFT(ISHFT(I, NBITPW-L-N), L-NBITPW), M) ))
      END
+PATCH, ASA, IF=F2C.
+DECK,  BTEST, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      LOGICAL FUNCTION BTEST(IZW,IZP)
      BTEST = AND (IZW,LSHIFT(1,IZP)) .NE. 0
      RETURN
      END
+DECK,  IAND, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      FUNCTION IAND(IZV,IZW)
*
      IAND = AND(IZV,IZW)
*
      RETURN
      END
+DECK,  IBCLR, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      FUNCTION IBCLR(IZW,IZP)
      IBCLR = AND (IZW,NOT(LSHIFT(1,IZP)))
      RETURN
      END
+DECK,  IBSET, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      FUNCTION IBSET(IZW,IZP)
      IBSET =  OR (IZW,LSHIFT(1,IZP))
      RETURN
      END
+DECK,  IEOR, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      FUNCTION IEOR(IZV,IZW)
*
      IEOR = XOR(IZV,IZW)
*
      RETURN
      END
+DECK,  IOR, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
      FUNCTION IOR(IZV,IZW)
*
      IOR = OR(IZV,IZW)
*
      RETURN
      END
+DECK,  IRNDM, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
        FUNCTION IRNDM(ISEEK)
        COMMON /MCGN/ MCGN
 
C--       Integer random number
      MCGN  = MCGN * 69069
      IRNDM = ISHFT (MCGN,-1)
      RETURN
        END
+DECK,  ISHFT, T=CC.
/*
 * $Id: modome.car100,v 1.1.1.1 2003/04/24 14:25:09 tretiak Exp $
 *
 * $Log: modome.car100,v $
 * Revision 1.1.1.1  2003/04/24 14:25:09  tretiak
 * Imported sources
 *
 * Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
 * Kernlib
 *
 */
 
/*>    ROUTINE ISHFT
  CERN PROGLIB#         ISHFT           .VERSION KERNLNX  1.00  930507
 
  Provides the value of the argument ARG with the bits shifted.
  Bits shifted out to the left or right are lost, and zeros are shifted
  in from the opposite end.      CNL 210
*/
unsigned int ishft_(arg,len)
unsigned int *arg;
int *len;
{
     return((*len > 0)? *arg << *len: *arg >> (-*len));
}
/*> END <----------------------------------------------------------*/
+DECK,  ISHFTR, T=CC.
/*
 * $Id: modome.car100,v 1.1.1.1 2003/04/24 14:25:09 tretiak Exp $
 *
 * $Log: modome.car100,v $
 * Revision 1.1.1.1  2003/04/24 14:25:09  tretiak
 * Imported sources
 *
 * Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
 * Kernlib
 *
 */
 
/*>    ROUTINE ISHFT
  CERN PROGLIB#         ISHFTR          .VERSION KERNLNX  1.02  940511
 
  Logical right shift by *len (+ve) places
*/
unsigned int ishftr_(arg,len)
unsigned int *arg;
int *len;
{
   return(*arg >> *len);
}
/*> END <----------------------------------------------------------*/
+DECK,  QNEXT, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:08  mclareni
* Kernlib
 
      SUBROUTINE QNEXT
      RETURN
      END
+DECK,  RDMIN, T=FORT.
* Revision 1.1.1.1  1996/02/15 17:50:07  mclareni
* Kernlib
 
        SUBROUTINE RDMIN(ISEED)
        COMMON /MCGN/ MCGN
 
C--       Set the seed
      MCGN = ISEED
      RETURN
 
C--       Get the seed
      ENTRY RDMOUT (ISEED)
      ISEED = MCGN
      END
+PATCH, PAMEND.
*-        THIS IS THE LAST CARD OF THE MODOME PAM
