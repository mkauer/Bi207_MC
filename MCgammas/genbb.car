+TITLE
C GENBBDIA  VIT, 03.12.1995. INTERFACE TO GENBBSUB
+PATCH,HEADER.
c   
c FP 14/12/99  
c     for PATCHY version helpbb has three forms GENHELPBB, GENHELPBBX, GENHELPBB
c     because under linux e1 cannot be an argument of fe1_mod1,fe1_mod2,fe1_mod3,
c     fe1_mod10 functions and in the common /helpbb/Zd,e0,e1 in the 
c     same time. It is the same for Zdbb in subroutine BB. 
c
c      the line character  chnuclide*16,chart*4,chn*16
c      is added in KEEP,GENARTI
C 29/11/02
C VI   character  chnuclide*16,chn*16
C      removed from KEEP,GENARTI - to avoid warnings in nemos
c
c      the line character chdspin*4
c      is added KEEP,GENENRANGE.
c 
c      for NEMOS.CAR the KEEP,ENRANGE is equivalent to KEEP,GENARTI + KEEP,GENENRANGE
c
c
c         nevents   - number of events to generate; it will be used only
c                     for information in GENBB.report file and in output
c                     file with generated events (if asked) - so, one 
c                     has to call GENBBsub one time for one decay event;
c         ievstart  - number of first event;
c         irndmst   - (only for ievstart > 1) initial random integer 
c                     for RDMIN;
c         iwrfile   - iwrfile=0 - do not write generated events in file,
c                     iwrfile=1 - to write generated events in file;
c         chfile    - (only for iwrfile=1) character*40 name of file;
c         icurrent  - current number of event; if last event, file 
c                     GENBB.report is created;
c         ebb1,ebb2 - (only for i2bbs=1) left and right energy limits for
c                     sum of energies of emitted e-/e+; other events will
c                     be thrown away (for modebb = 4,5,6,8,10 and 13);
c
c
c                     For artificial event (i2bbs=2 and chnuclide='Art')
c                     (emission of up to 10 beta, e+e- pairs and all
c                     GEANT particles in region of energies and angles
c                     with time delay and halflife):
c
c         nartparts   - number of parts of artificial event (up to 10);
c         chart       - character*4 array of identifiers:
c                       GP - emission of GEANT particle,
c                       Pi - emission of internal conversion e+/e- pair,
c                       Be - beta decay;
c         artemin,    - arrays of min and max values for particles kinetic
c         artemax       energies (MeV);
c         arttmin,    - arrays of min and max values for particles teta
c         arttmax       angles (degree);
c         artfmin,    - arrays of min and max values for particles phi
c         artfmax       angles (degree);
c         artQb       - (for chart='Be') array of Qbeta values (MeV),
c                       (for chart='Pi') array of pair kinetic energy (MeV);
c         artZd       - (for chart='Be') array of atomic numbers of daughter
c                       nucleus (artZd>0 for beta- and artZd<0 for beta+ decay);
c         arttdelay   - array of time delays: minimum time between current 
c                       part of event and previous one (sec);
c         artthalf    - array of half-lives of current part of events (sec);
c         nartnpg     - array of GEANT number particles:
c                        1 - gamma         2 - positron     3 - electron
c                        4 - neutrino      5 - muon+        6 - muon-
c                        7 - pion0         8 - pion+        9 - pion-
c                       10 - kaon0 long   11 - kaon+       12 - kaon-
c                       13 - neutron      14 - proton      15 - antiproton
c                       16 - kaon0 short  17 - eta         18 - lambda
c                       19 - sigma+       20 - sigma0      21 - sigma-
c                       22 - xi0          23 - xi-         24 - omega
c                       25 - antineutron  26 - antilambda  27 - antisigma-
c                       28 - antisigma0   29 - antisigma+  30 - antixi0
c                       31 - antixi+      32 - antiomega+  45 - deuteron
c                       46 - tritium      47 - alpha       48 - geantino
c                       49 - He3          50 - Cerenkov.
c
c                     For chart = 'GP' particle's energy will be uniformly 
c                     distributed in the range [artemin,artemax]; particle 
c                     will be emitted isotropically in the region of space 
c                     determined by [arttmin,arttmax], [artfmin,artfmax].
c
c                     For chart = 'Be', energy will be sampled in [0,artQb] in
c                     accordance with beta decay energy spectrum; beta particle
c                     will be emitted isotropically in full space.
c
c                     For chart = 'Pi', energy of pair is fixed to artQb and 
c                     divided half to half for e- and e+; e- and e+ are 
c                     emitted in the same direction; this direction is 
c                     distributed isotropically in full space.
c         
c
c                     For generation of events of Compton effect (i2bbs=2 and 
c                     chnuclide='Com'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    gamma quantum (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c
c
c                     For generation of events of Moller scattering (i2bbs=2 
c                     and chnuclide='Mol'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    electron (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c         artQb(1)    - lower energy threshold for emitted delta rays (MeV);
c
c
c                     For generation of events of e+e- pair creation from
c                     external gamma quanta: (i2bbs=2 and chnuclide='Pai'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    gamma quantum (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c         artZd(1)    - atomic number Z of target;
c
c Output: ier                   - ier=0/1 - everything is correct/incorrect in 
c                                 input parameters;
c         tevst                 - time of event's start (sec);
c         npfull                - full number of emitted particles in event;
c         npgeant(1-npfull)     - array of GEANT numbers for particle identi-
c                                 fication (1 for gamma, 2 for e+, 3 for e-,
c                                 5 for muon+, 6 for muon-, 47 for alpha);
c         pmoment(1-3,1-npfull) - array of x,y,z components of particle momentum
c                                 (MeV/c);
c         ptime(1-npfull)       - array of time shift from previous time to 
c                                 calculate when particle was emitted (sec);
c         toallevents           - (only for i2bbs=1 and restricted range for sum
c                                 of energies of emitted e-/e+) coefficient to
c                                 recalculate number of bb events in full range 
c                                 of energies: 
c                                 full_number=generated_number*toallevents
c                                 (for modebb = 4,5,6,8,10 and 13);
c         levelE                - (only for i2bbs=1) energy (in keV) of level of 
c                                 daughter 2b nuclide;
c         chdspin               - (only for i2bbs=1) character*4 spin and parity of
c                                 the level of daughter nuclide in 2b decay.
c
c V.I.Tretyak, 04.12.1995.
c
+PATCH,GENBBCOM.
+KEEP,GENEVENT.
	common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),
     +                  ptime(100)
+KEEP,GENCONST.
        common/const/pi,emass,datamass(50)
        real*4 pi,emass,datamass
+KEEP,GENENRANGE.
        character chdspin*4
	common/enrange/ebb1,ebb2,toallevents,levelE,chdspin
+KEEP,GENBBPAR.
	common/genbbpar/nevents,ievstart,irndmst,iwrfile,chfile
+KEEP,GENARTI.
        character chart*4
	common/artificial/nartparts,    chart(10),
     +                    artemin(10),  artemax(10),
     +                    arttmin(10),  arttmax(10),
     +                    artfmin(10),  artfmax(10),
     +                    artQb(10),    artZd(10),
     +                    arttdelay(10),artthalf(10),
     +                    nartnpg(10)
+KEEP,GENCURR.	
        common/currentev/icurrent
+KEEP,GENSLATE.
	common/slate/isl(40)
+KEEP,GENDENRANGE.
	common/denrange/dens,denf,mode
+KEEP,GENHELPBB.
	common/helpbb/Zdbb,e0,e1,e2my
	real*4 Zdbb,e0,e1,e2my
+KEEP,GENHELP.
	common/helpbb/Zd,e0,e1,e2my
+KEEP,GENHELPBBX.
	common/helpbb/Zdbb,e0,xxx,yyy
+KEEP,GENPARBETA.
	common/parbeta/z,q

+PATCH,GENBBDIA.
+DECK,GENBBDIA
	subroutine GENBBdia(i2bbs,chnuclide,ilevel,modebb,istart)
c 
c Dialog to ask the inputs for GENBBsub subroutine.
c Descriptions of common blocks and parameters see in GENBBsub.
c VIT, 03.12.1995.
c
	character chfile*40
        character  chnuclide*16,chn*16

+SEQ,GENEVENT.
+SEQ,GENCONST.
+SEQ,GENENRANGE.
+SEQ,GENBBPAR.
+SEQ,GENARTI.
	print *,'     '
	print *,
     +'            Generation of events of decay of natural radioactive'
	print *,
     +'               isotopes and various modes of double beta decay'
	print *,'     '
	print *,' GENBB units: energy   - MeV'
	print *,'              momentum - MeV/c'
	print *,'              time     - sec'
	print *,'              angle    - degree'
1000	print *,'     '
	print *,' Which type of events do you want to generate:'
	print *,'       1. double beta processes'
	print *,'       2. internal or external background ',
     +          'or calibration sources'
	print 1
1	format('$? ')
	read *,i2bbs
2	print *,'     '
	if(i2bbs.eq.1) then
	   print *,' Double beta nuclides:'
	   print *,'        Ca48'
	   print *,'        Ni58'
	   print *,'        Ge76'
	   print *,'        Se74     Se82'
	   print *,'        Zr94     Zr96'
	   print *,'        Mo92     Mo100'
	   print *,'        Cd106    Cd114    Cd116'
	   print *,'        Te130'
	   print *,'        Xe136'
	   print *,'        Nd148    Nd150'
	   print 1
	   read 3,chn
3	   format(a)
	   chnuclide=chn
	   print *,'     '
	   if((chn(1:2).eq.'Ca'.or.chn(1:2).eq.'CA'.or.chn(1:2).eq.'ca')
     +        .and.chn(3:4).eq.'48') then
4	      print *,'48-Ti level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.984 MeV}'
	      print *,'                2. 2+ (2)  {2.421 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 4
	      endif
	   elseif((chn(1:2).eq.'Ni'.or.chn(1:2).eq.'NI'.or.
     +             chn(1:2).eq.'ni').and.chn(3:4).eq.'58') then
5	      print *,'58-Fe level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.811 MeV}'
	      print *,'                2. 2+ (2)  {1.675 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 5
	      endif
	   elseif((chn(1:2).eq.'Ge'.or.chn(1:2).eq.'GE'.or.
     +             chn(1:2).eq.'ge').and.chn(3:4).eq.'76') then
6	      print *,'76-Se level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.559 MeV}'
	      print *,'                2. 0+ (1)  {1.122 MeV}'
	      print *,'                3. 2+ (2)  {1.216 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'   '
	         go to 6
	      endif
	   elseif((chn(1:2).eq.'Se'.or.chn(1:2).eq.'SE'.or.
     +             chn(1:2).eq.'se').and.chn(3:4).eq.'74') then
7	      print *,'74-Ge level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.596 MeV}'
	      print *,'                2. 2+ (2)  {1.204 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 7
	      endif
	   elseif((chn(1:2).eq.'Se'.or.chn(1:2).eq.'SE'.or.
     +             chn(1:2).eq.'se').and.chn(3:4).eq.'82') then
8	      print *,'82-Kr level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.776 MeV}'
	      print *,'                2. 2+ (2)  {1.475 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 8
	      endif
	   elseif((chn(1:2).eq.'Zr'.or.chn(1:2).eq.'ZR'.or.
     +             chn(1:2).eq.'zr').and.chn(3:4).eq.'94') then
9	      print *,'94-Mo level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.871 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.1) then
	         print *,'   '
	         go to 9
	      endif
	   elseif((chn(1:2).eq.'Zr'.or.chn(1:2).eq.'ZR'.or.
     +             chn(1:2).eq.'zr').and.chn(3:4).eq.'96') then
10	      print *,'96-Mo level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.778 MeV}'
	      print *,'                2. 0+ (1)  {1.148 MeV}'
	      print *,'                3. 2+ (2)  {1.498 MeV}'
	      print *,'                4. 2+ (3)  {1.626 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.4) then
	         print *,'   '
	         go to 10
	      endif
	   elseif((chn(1:2).eq.'Mo'.or.chn(1:2).eq.'MO'.or.
     +             chn(1:2).eq.'mo').and.chn(3:4).eq.'92') then
11	      print *,'92-Zr level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.934 MeV}'
	      print *,'                2. 0+ (1)  {1.383 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 11
	      endif
	   elseif((chn(1:2).eq.'Mo'.or.chn(1:2).eq.'MO'.or.
     +             chn(1:2).eq.'mo').and.chn(3:5).eq.'100') then
12	      print *,'100-Ru level:   0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.540 MeV}'
	      print *,'                2. 0+ (1)  {1.130 MeV}'
	      print *,'                3. 2+ (2)  {1.362 MeV}'
	      print *,'                4. 0+ (2)  {1.741 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.4) then
	         print *,'   '
	         go to 12
	      endif
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +             chn(1:2).eq.'cd').and.chn(3:5).eq.'106') then
13	      print *,'106-Pd level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                 1. 2+ (1)  {0.512 MeV}'
	      print *,'                 2. 2+ (2)  {1.128 MeV}'
	      print *,'                 3. 0+ (1)  {1.134 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'   '
	         go to 13
	      endif
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +             chn(1:2).eq.'cd').and.chn(3:5).eq.'114') then
	      print *,'transition to 114-Sn 0+(gs) level ',
     +                'only is possible'
	      ilevel=0
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +             chn(1:2).eq.'cd').and.chn(3:5).eq.'116') then
14	      print *,'116-Sn level:   0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {1.294 MeV}'
	      print *,'                2. 0+ (1)  {1.757 MeV}'
	      print *,'                3. 0+ (2)  {2.027 MeV}'
	      print *,'                4. 2+ (2)  {2.112 MeV}'
	      print *,'                5. 2+ (3)  {2.225 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.5) then
	         print *,'   '
	         go to 14
	      endif
	   elseif((chn(1:2).eq.'Te'.or.chn(1:2).eq.'TE'.or.
     +             chn(1:2).eq.'te').and.chn(3:5).eq.'130') then
114	      print *,'130-Xe level:   0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.536 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.1) then
	         print *,'   '
	         go to 114
	      endif
	   elseif((chn(1:2).eq.'Xe'.or.chn(1:2).eq.'XE'.or.
     +             chn(1:2).eq.'xe').and.chn(3:5).eq.'136') then
15	      print *,'136-Ba level:   0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.819 MeV}'
	      print *,'                2. 2+ (2)  {1.551 MeV}'
	      print *,'                3. 0+ (1)  {1.579 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'   '
	         go to 15
	      endif
	   elseif((chn(1:2).eq.'Nd'.or.chn(1:2).eq.'ND'.or.
     +             chn(1:2).eq.'nd').and.chn(3:5).eq.'148') then
16	      print *,'148-Sm level:    0. 0+ (gs)     {0 MeV}'
	      print *,'                 1. 2+ (1)  {0.550 MeV}'
	      print *,'                 2. 2+ (2)  {1.455 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'   '
	         go to 16
	      endif
	   elseif((chn(1:2).eq.'Nd'.or.chn(1:2).eq.'ND'.or.
     +             chn(1:2).eq.'nd').and.chn(3:5).eq.'150') then
17	      print *,'150-Sm level:   0. 0+ (gs)     {0 MeV}'
	      print *,'                1. 2+ (1)  {0.334 MeV}'
	      print *,'                2. 0+ (1)  {0.740 MeV}'
	      print *,'                3. 2+ (2)  {1.046 MeV}'
	      print *,'                4. 2+ (3)  {1.194 MeV}'
	      print *,'                5. 0+ (2)  {1.256 MeV}'
	      print 1
	      read *,ilevel
	      if(ilevel.lt.0.or.ilevel.gt.5) then
	         print *,'   '
	         go to 17
	      endif
	   else
	      print *,'unknown double beta nuclide'
	      go to 2
	   endif
18	   print *,'     '
	   print *,' mode of bb-decay:'
	   print *,'      1. 0nubb(mn) 0+ -> 0+     {2n}'
	   print *,'      2. 0nubb(rc) 0+ -> 0+     {2n}'
	   print *,'      3. 0nubb(rc) 0+ -> 0+, 2+ {N*}'
	   print *,'      4. 2nubb     0+ -> 0+     {2n}'
	   print *,'      5. 0nubbM1   0+ -> 0+     {2n}'
	   print *,'      6. 0nubbM3   0+ -> 0+     {2n}'
	   print *,'      7. 0nubbM7   0+ -> 0+     {2n}'
	   print *,'      8. 0nubb(rc) 0+ -> 2+     {2n}'
	   print *,'      9. 2nubb     0+ -> 2+     {2n}, {N*}'
	   print *,'     10. 0nuKb+    0+ -> 0+, 2+'
	   print *,'     11. 2nuKb+    0+ -> 0+, 2+'
	   print *,'     12. 0nu2K     0+ -> 0+, 2+'
 	   print *,'     13. 2nu2K     0+ -> 0+, 2+'
	   print *,'     14. 2nubb     0+ -> 0+     {SSD2}'	
           print *,'         Mode 14 is valid only for Mo', 
     +        ' and Cd 2b2n decay'
	   print *,'         5-7: Majoron(s) with spectral ',
     +            'index SI=1 (old M Gelmini-Roncadelli),'
	   print *,'              SI=3 (double M, vector M, ',
     +             'charged M) or SI=7'
	   print 1
	   read *,modebb0
           print *,'Choice =', modebb0
	   if(modebb0.ge.1 .and. modebb0.le.6)  modebb=modebb0
	   if(modebb0.eq.7)                     modebb=13
	   if(modebb0.ge.8 .and. modebb0.le.13) modebb=modebb0-1
           if(modebb0.eq.14) modebb=modebb0
	   if(modebb.lt.1.or.modebb.gt.14) then
	      print *,'   '
	      print *,'unknown mode'
	      go to 18
	   endif
	   ebb1=0.
	   ebb2=4.3
	   if(modebb.eq. 4.or.modebb.eq. 5.or.modebb.eq. 6.or.
     +        modebb.eq. 8.or.modebb.eq.10.or.modebb.eq.13) then
	      print 19
19	      format('$do you want to restrict energy range for ',
     +               'generated particles? ')
	      read 3,chn
	      if(chn.eq.'y'.or.chn.eq.'Y') then
	         print 20
20	         format('$range for sum of e-/e+ energies (MeV): ')
	         read *,ebb1,ebb2
	      endif
	   endif
	endif
	if(i2bbs.eq.2) then
	   print *,' Background & sources:'
	   print *,'    Ac228             Eu152             Pb214'
	   print *,'    Bi207+Pb207m      Eu154             Rh106'
	   print *,'    Bi208             Gd146             Sr90'
	   print *,'    Bi210             Hf182             Ta182'
	   print *,'    Bi212+Po212       K40               Tl207'
	   print *,'    Bi214+Po214       Mn54              Tl208'
	   print *,'    Ca48+Sc48         Na22              Xe133'
	   print *,'    Co60              Pa234m            Y88'
	   print *,'    Cs137+Ba137m      Pb211             Y90'
	   print *,'    Eu147             Pb212             Zr96+Nb96'
	   print *,'    Artificial event (beta decay + internal e+e-',
     +                  ' + GEANT particles)'
	   print *,'    Compton effect'
	   print *,'    Moller scattering'
	   print *,'    Pair creation from external gamma quanta'
c	   print *,'    Double Compton'
	   print *,'     '
	   print 1
	   read 3,chn
	   chnuclide=chn
	   if(chn(1:3).eq.'Art'.or.chn(1:3).eq.'ART'.or.
     +        chn(1:3).eq.'art') then
	      print *,'     '
	      print *,'   Emission of up to 10 beta [b], e+e-',
     +                ' internal conversion pairs [p]'
	      print *,'   and any of GEANT particles [G]',
     +                ' in region of energies and angles'
	      print *,'   with time delay and halflife'
	      print *,'     '
	      print *,'GEANT particles:'
	      print *,'       1 - gamma         2 - positron    ',
     +                ' 3 - electron'
	      print *,'       4 - neutrino      5 - muon+       ',
     +                ' 6 - muon-'
	      print *,'       7 - pion0         8 - pion+       ',
     +                ' 9 - pion-'
	      print *,'      10 - kaon0 long   11 - kaon+       ',
     +                '12 - kaon-'
	      print *,'      13 - neutron      14 - proton      ',
     +                '15 - antiproton'
	      print *,'      16 - kaon0 short  17 - eta         ',
     +                '18 - lambda'
	      print *,'      19 - sigma+       20 - sigma0      ',
     +                '21 - sigma-'
	      print *,'      22 - xi0          23 - xi-         ',
     +                '24 - omega'
	      print *,'      25 - antineutron  26 - antilambda  ',
     +                '27 - antisigma-'
	      print *,'      28 - antisigma0   29 - antisigma+  ',
     +                '30 - antixi0'
	      print *,'      31 - antixi+      32 - antiomega+  ',
     +                '45 - deuteron'
	      print *,'      46 - tritium      47 - alpha       ',
     +                '48 - geantino'
	      print *,'      49 - He3          50 - Cerenkov'
	      print *,'     '
	      print 21
21	      format('$number of parts in artificial event: ')
	      read *,nartparts
	      nartparts=min0(10,nartparts)
	      do i=1,nartparts
22	         print 23,i
23	         format('$',i2,' identifier (b/p/G): ')
	         read 3,chn
	         chart(i)='  '
	         if(chn(1:1).eq.'B' .or.chn(1:1).eq.'b')  chart(i)='Be'
	         if(chn(1:1).eq.'G' .or.chn(1:1).eq.'g')  chart(i)='GP'
	         if(chn(1:1).eq.'P' .or.chn(1:1).eq.'p')  chart(i)='Pi'
	         if(chart(i).eq.'  ') then
	            print *,'unknown particle'
	            go to 22
	         elseif(chart(i).eq.'Be') then
	            print 24
24	            format('$   Qbeta and Z of daughter nucleus',
     +                     ' (Z>0 for beta- and',
     +                     ' Z<0 for beta+): ')
	            read *,artQb(i),artZd(i)
	            print 25
25	            format('$   tdelay, thalf: ')
	            read *,arttdelay(i),artthalf(i)
	         elseif(chart(i).eq.'Pi') then
	            print 26
26	            format('$   Epair, tdelay, thalf: ')
	            read *,artQb(i),arttdelay(i),artthalf(i)
	         else
227	            print 27
27	            format('$   GEANT particle number, ',
     +                     'Emin, Emax (MeV): ')
	            read *,l,artemin(i),artemax(i)
	            if(l.lt.1.or.l.gt.50.or.(l.gt.32.and.l.lt.45)) then
	               print *,'unknown particle'
	               go to 227
	            else
	               nartnpg(i)=l
	            endif
	            print 28
28	            format('$   tetamin, tetamax, phimin,',
     +                     ' phimax, tdelay, thalf: ')
	            read *,arttmin(i),arttmax(i),artfmin(i),
     +                     artfmax(i),arttdelay(i),artthalf(i)
	         endif
	      enddo
	   elseif(chn(1:3).eq.'Com'.or.chn(1:3).eq.'COM'.or.
     +        chn(1:3).eq.'com') then
	      print *,'   Ranges for energy and angles of initial',
     +                ' gammas'
	      print 280
280	      format('$   Emin, Emax (MeV): ')
	      read *,artemin(1),artemax(1)
	      print 281
281	      format('$   tetamin, tetamax, phimin, phimax: ')
	      read *,arttmin(1),arttmax(1),artfmin(1),artfmax(1)
	   elseif(chn(1:3).eq.'Mol'.or.chn(1:3).eq.'MOL'.or.
     +        chn(1:3).eq.'mol') then
	      print *,'   Ranges for energy and angles of initial',
     +                ' electron'
	      print 280
	      read *,artemin(1),artemax(1)
	      print 281
	      read *,arttmin(1),arttmax(1),artfmin(1),artfmax(1)
	      print 282
282	      format('$   lower energy threshold for emitted',
     +               ' delta rays (MeV): ')
	      read *,artQb(1)
	   elseif(chn(1:3).eq.'Pai'.or.chn(1:3).eq.'PAI'.or.
     +        chn(1:3).eq.'pai') then
	      print *,'   Ranges for energy and angles of initial',
     +                ' gammas'
287	      print 283
283	      format('$   Emin, Emax (MeV): ')
	      read *,artemin(1),artemax(1)
	      if(amin1(artemin(1),artemax(1)).lt.1.022) then
	         print *,'energies should be not less than 1.022 MeV'
	         go to 287
	      endif
	      print 284
284	      format('$   tetamin, tetamax, phimin, phimax: ')
	      read *,arttmin(1),arttmax(1),artfmin(1),artfmax(1)
286	      print 285
285	      format('$   Z of target: ')
	      read *,artZd(1)
	      if(artZd(1).lt.1.) then
	         print *,'Z should be not less than 1'
	         go to 286
	      endif
	   endif
	endif
c*********************************************************************
c	print *,'     '                                    !**********
c	print 29                                           ! comment
c29	format('$number of events to generate      : ')    ! if in
c	read *,nevents                                     ! nemo*.car
c	print 30                                           !
c30	format('$number of first event [1]         : ')    !
c	read 31,ievstart                                   !
c31	format(i12)                                        !**********
c*********************************************************************
	if(ievstart.le.0) ievstart=1
	if(ievstart.ne.1) then
	   print 32
32	   format('$initial random integer for RDMIN  : ')
	   read *,irndmst
	endif
	chfile='no file'
	iwrfile=0
c*********************************************************************
c	print 33                                           !**********
c33	format('$to write generated events in file ? ')    ! comment
c	read 3,chn                                         ! if in
c	if(chn(1:1).eq.'Y'.or.chn(1:1).eq.'y') then        ! nemo*.car
c	   iwrfile=1                                       !
c	   print 34                                        !
c34	   format('$name of file                      : ') !
c	   read 3,chfile                                   !
c	endif                                              !**********
c*********************************************************************
	print *,'   '
	istart=-1
	call GENBBsub(i2bbs,chnuclide,ilevel,modebb,istart,ier)
	if(ier.ne.0) then
	   print *,'incorrect input parameter in GENBBsub'
	   go to 1000
	endif
	return
	end
+PATCH,GENBBSUB.
+DECK,GENBBSUB.
	subroutine GENBBsub(i2bbs,chnuclide,ilevel,modebb,istart,ier)
c
c Subroutine GENBBsub generates the events of decay of natural 
c radioactive nuclides and various modes of double beta decay.
c GENBB units: energy and moment - MeV and MeV/c; time - sec.
c Energy release in double beta decay - in accordance with 
c G.Audi and A.H.Wapstra, Nucl. Phys. A 595(1995)409.
c
c Call  : character chnuclide*16,chfile*40,chart*4,chdspin*4
c         common/genbbpar/nevents,ievstart,irndmst,iwrfile,chfile
c         common/currentev/icurrent
c         common/enrange/ebb1,ebb2,toallevents,levelE,chdspin
c         common/artificial/nartparts,    chart(10),
c      +                    artemin(10),  artemax(10),
c      +                    arttmin(10),  arttmax(10),
c      +                    artfmin(10),  artfmax(10),
c      +                    artQb(10),    artZd(10),
c      +                    arttdelay(10),artthalf(10)
c      +                    nartnpg(10)
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call GENBBsub(i2bbs,chnuclide,ilevel,modebb,istart,ier)
c
c Input : i2bbs     - i2bbs=1 - to generate 2b-decay,
c                     i2bbs=2 - to generate decay of background nuclide
c                               or calibration source;
c         chnuclide - character*16 name of nuclide:
c                     for i2bbs=1 - Ca48,
c                                   Ni58,
c                                   Ge76,
c                                   Se74,  Se82,
c                                   Zr94,  Zr96,
c                                   Mo92,  Mo100,
c                                   Cd106, Cd114, Cd116,
c                                   Te130,
c                                   Xe136,
c                                   Nd148, Nd150;
c                     for i2bbs=2 - Ac228,
c                                   Bi207 (for Bi207+Pb207m),
c                                   Bi208,
c                                   Bi210,
c                                   Bi212 (for Bi212+Po212),
c                                   Bi214 (for Bi214+Po214),
c                                   Ca48 (for Ca48+Sc48),
c                                   Co60,
c                                   Cs137 (for Cs137+Ba137m),
c                                   Eu147,
c                                   Eu152,
c                                   Eu154,
c                                   Gd146,
c                                   Hf182,
c                                   K40,
c                                   Mn54,
c                                   Na22,
c                                   Pa234m,
c                                   Pb211,
c                                   Pb212,
c                                   Pb214,
c                                   Rh106,
c                                   Sr90,
c                                   Ta182,
c                                   Tl207,
c                                   Tl208,
c                                   Xe133,
c                                   Y88,
c                                   Y90,
c                                   Zr96 (for Zr96+Nb96),
c                                   Art (for artificial event),
c                                   Com (for Compton effect),
c                                   Mol (for Moller scattering),
c                                   Pai (for e+e- pair creation from 
c                                        external gammas);
c         ilevel    - (for i2bbs=1 only) level of daughter nucleus occupied
c                     in 2b decay (0 - ground state, 1 - first excited 0+ or
c                     2+ level, 2 - second excited 0+ or 2+ level etc.; 
c                     excited levels with other spin than 0+ and 2+ should be 
c                     omitted):
c                     for Ca48-Ti48   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.984 MeV},
c                                       2. 2+ (2)  {2.421 MeV},
c                     for Ni58-Fe58   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.811 MeV},
c                                       2. 2+ (2)  {1.675 MeV},
c                     for Ge76-Se76   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.559 MeV},
c                                       2. 0+ (1)  {1.122 MeV},
c                                       3. 2+ (2)  {1.216 MeV},
c                     for Se74-Ge74   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.596 MeV},
c                                       2. 2+ (2)  {1.204 MeV},
c                     for Se82-Kr82   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.776 MeV},
c                                       2. 2+ (2)  {1.475 MeV},
c                     for Zr94-Mo94   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.871 MeV},
c                     for Zr96-Mo96   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.778 MeV},
c                                       2. 0+ (1)  {1.148 MeV},
c                                       3. 2+ (2)  {1.498 MeV},
c                                       4. 2+ (3)  {1.626 MeV},
c                     for Mo92-Zr92   - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.934 MeV},
c                                       2. 0+ (1)  {1.383 MeV},
c                     for Mo100-Ru100 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.540 MeV},
c                                       2. 0+ (1)  {1.130 MeV},
c                                       3. 2+ (2)  {1.362 MeV},
c                                       4. 0+ (2)  {1.741 MeV},
c                     for Cd106-Pd106 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.512 MeV},
c                                       2. 2+ (2)  {1.128 MeV},
c                                       3. 0+ (1)  {1.134 MeV},
c                     for Cd114-Sn114 - 0. 0+ (gs)     {0 MeV},
c                     for Cd116-Sn116 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {1.294 MeV},
c                                       2. 0+ (1)  {1.757 MeV},
c                                       3. 0+ (2)  {2.027 MeV},
c                                       4. 2+ (2)  {2.112 MeV},
c                                       5. 2+ (3)  {2.225 MeV},
c                     for Te130-Xe130 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.536 MeV},
c                     for Xe136-Ba136 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.819 MeV},
c                                       2. 2+ (2)  {1.551 MeV},
c                                       3. 0+ (1)  {1.579 MeV},
c                     for Nd148-Sm148 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.550 MeV},
c                                       2. 2+ (2)  {1.455 MeV},
c                     for Nd150-Sm150 - 0. 0+ (gs)     {0 MeV},
c                                       1. 2+ (1)  {0.334 MeV},
c                                       2. 0+ (1)  {0.740 MeV},
c                                       3. 2+ (2)  {1.046 MeV},
c                                       4. 2+ (3)  {1.194 MeV},
c                                       5. 0+ (2)  {1.256 MeV};
c         modebb    - (for i2bbs=1 only) mode of 2b decay: 
c                      1. 0nubb(mn) 0+ -> 0+     {2n},
c                      2. 0nubb(rc) 0+ -> 0+     {2n},
c                      3. 0nubb(rc) 0+ -> 0+, 2+ {N*},
c                      4. 2nubb     0+ -> 0+     {2n},
c                      5. 0nubbM1   0+ -> 0+     {2n} 
c                         Majoron with spectral index SI=1 
c                         (old M Gelmini-Roncadelli),
c                      6. 0nubbM3   0+ -> 0+     {2n} 
c                         Majoron with SI=3 (vector M, double M, charged M),
c                      7. 0nubb(rc) 0+ -> 2+     {2n},
c                      8. 2nubb     0+ -> 2+     {2n}, {N*},
c                      9. 0nuKb+    0+ -> 0+, 2+,
c                     10. 2nuKb+    0+ -> 0+, 2+,
c                     11. 0nu2K     0+ -> 0+, 2+,
c                     12. 2nu2K     0+ -> 0+, 2+,
c                     13. 0nubbM7   0+ -> 0+     {2n}
c                         Majoron with SI=7;
c         istart    - -1 - to check consistency of input data and fill
c                          working arrays without generation of events;
c                      0 - the same but one event will be generated;
c                      1 - to generate all subsequent events. So, for 
c                          the first call to GENBBsub istart must be 
c                          =0 or -1;
c         nevents   - number of events to generate; it will be used only
c                     for information in GENBB.report file and in output
c                     file with generated events (if asked) - so, one 
c                     has to call GENBBsub one time for one decay event;
c         ievstart  - number of first event;
c         irndmst   - (only for ievstart > 1) initial random integer 
c                     for RDMIN;
c         iwrfile   - iwrfile=0 - do not write generated events in file,
c                     iwrfile=1 - to write generated events in file;
c         chfile    - (only for iwrfile=1) character*40 name of file;
c         icurrent  - current number of event; if last event, file 
c                     GENBB.report is created;
c         ebb1,ebb2 - (only for i2bbs=1) left and right energy limits for
c                     sum of energies of emitted e-/e+; other events will
c                     be thrown away (for modebb = 4,5,6,8,10 and 13);
c
c
c                     For artificial event (i2bbs=2 and chnuclide='Art')
c                     (emission of up to 10 beta, e+e- pairs and all
c                     GEANT particles in region of energies and angles
c                     with time delay and halflife):
c
c         nartparts   - number of parts of artificial event (up to 10);
c         chart       - character*4 array of identifiers:
c                       GP - emission of GEANT particle,
c                       Pi - emission of internal conversion e+/e- pair,
c                       Be - beta decay;
c         artemin,    - arrays of min and max values for particles kinetic
c         artemax       energies (MeV);
c         arttmin,    - arrays of min and max values for particles teta
c         arttmax       angles (degree);
c         artfmin,    - arrays of min and max values for particles phi
c         artfmax       angles (degree);
c         artQb       - (for chart='Be') array of Qbeta values (MeV),
c                       (for chart='Pi') array of pair kinetic energy (MeV);
c         artZd       - (for chart='Be') array of atomic numbers of daughter
c                       nucleus (artZd>0 for beta- and artZd<0 for beta+ decay);
c         arttdelay   - array of time delays: minimum time between current 
c                       part of event and previous one (sec);
c         artthalf    - array of half-lives of current part of events (sec);
c         nartnpg     - array of GEANT number particles:
c                        1 - gamma         2 - positron     3 - electron
c                        4 - neutrino      5 - muon+        6 - muon-
c                        7 - pion0         8 - pion+        9 - pion-
c                       10 - kaon0 long   11 - kaon+       12 - kaon-
c                       13 - neutron      14 - proton      15 - antiproton
c                       16 - kaon0 short  17 - eta         18 - lambda
c                       19 - sigma+       20 - sigma0      21 - sigma-
c                       22 - xi0          23 - xi-         24 - omega
c                       25 - antineutron  26 - antilambda  27 - antisigma-
c                       28 - antisigma0   29 - antisigma+  30 - antixi0
c                       31 - antixi+      32 - antiomega+  45 - deuteron
c                       46 - tritium      47 - alpha       48 - geantino
c                       49 - He3          50 - Cerenkov.
c
c                     For chart = 'GP' particle's energy will be uniformly 
c                     distributed in the range [artemin,artemax]; particle 
c                     will be emitted isotropically in the region of space 
c                     determined by [arttmin,arttmax], [artfmin,artfmax].
c
c                     For chart = 'Be', energy will be sampled in [0,artQb] in
c                     accordance with beta decay energy spectrum; beta particle
c                     will be emitted isotropically in full space.
c
c                     For chart = 'Pi', energy of pair is fixed to artQb and 
c                     divided half to half for e- and e+; e- and e+ are 
c                     emitted in the same direction; this direction is 
c                     distributed isotropically in full space.
c         
c
c                     For generation of events of Compton effect (i2bbs=2 and 
c                     chnuclide='Com'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    gamma quantum (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c
c
c                     For generation of events of Moller scattering (i2bbs=2 
c                     and chnuclide='Mol'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    electron (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c         artQb(1)    - lower energy threshold for emitted delta rays (MeV);
c
c
c                     For generation of events of e+e- pair creation from
c                     external gamma quanta: (i2bbs=2 and chnuclide='Pai'):
c
c         artemin(1), - min and max values for kinetic energy of initial
c         artemax(1)    gamma quantum (MeV);
c         arttmin(1), - min and max values for teta angle of initial particle
c         arttmax(1)    (degree);
c         artfmin(1), - min and max values for phi angle of initial particle 
c         artfmax(1)    (degree);
c         artZd(1)    - atomic number Z of target;
c
c Output: ier                   - ier=0/1 - everything is correct/incorrect in 
c                                 input parameters;
c         tevst                 - time of event's start (sec);
c         npfull                - full number of emitted particles in event;
c         npgeant(1-npfull)     - array of GEANT numbers for particle identi-
c                                 fication (1 for gamma, 2 for e+, 3 for e-,
c                                 5 for muon+, 6 for muon-, 47 for alpha);
c         pmoment(1-3,1-npfull) - array of x,y,z components of particle momentum
c                                 (MeV/c);
c         ptime(1-npfull)       - array of time shift from previous time to 
c                                 calculate when particle was emitted (sec);
c         toallevents           - (only for i2bbs=1 and restricted range for sum
c                                 of energies of emitted e-/e+) coefficient to
c                                 recalculate number of bb events in full range 
c                                 of energies: 
c                                 full_number=generated_number*toallevents
c                                 (for modebb = 4,5,6,8,10 and 13);
c         levelE                - (only for i2bbs=1) energy (in keV) of level of 
c                                 daughter 2b nuclide;
c         chdspin               - (only for i2bbs=1) character*4 spin and parity of
c                                 the level of daughter nuclide in 2b decay.
c
c V.I.Tretyak, 04.12.1995.
c
	character chfile*40
	character chmodebb*33
        character  chnuclide*16,chn*16
+SEQ,GENEVENT.
+SEQ,GENBBPAR
+SEQ,GENCONST.
+SEQ,GENENRANGE.
+SEQ,GENCURR.
+SEQ,GENSLATE.
+SEQ,GENARTI.

        save Qbb,EK,Zdbb,istartbb
        
	ier=0
	if(istart.eq.1) go to 1000
	chn=chnuclide
	if(i2bbs.eq.1) then
	   if((chn(1:2).eq.'Ca'.or.chn(1:2).eq.'CA'.or.chn(1:2).eq.'ca')
     +        .and.chn(3:4).eq.'48') then
	      chnuclide='Ca48'
	      Qbb=4.272
	      Zdbb=22.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Ti48 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=984
	      if(ilevel.eq.2) levelE=2421
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Ni'.or.chn(1:2).eq.'NI'.or.
     +        chn(1:2).eq.'ni').and.chn(3:4).eq.'58') then
	      chnuclide='Ni58'
	      Qbb=1.926
	      Zdbb=-26.
	      EK=0.008
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Fe58 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=811
	      if(ilevel.eq.2) levelE=1675
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Ge'.or.chn(1:2).eq.'GE'.or.
     +        chn(1:2).eq.'ge').and.chn(3:4).eq.'76') then
	      chnuclide='Ge76'
	      Qbb=2.039
	      Zdbb=34.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'GENBBsub: illegal Se76 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=559
	      if(ilevel.eq.2) levelE=1122
	      if(ilevel.eq.3) levelE=1216
	      if(ilevel.eq.0.or.ilevel.eq.2) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.3) itrans02=2
	   elseif((chn(1:2).eq.'Se'.or.chn(1:2).eq.'SE'.or.
     +        chn(1:2).eq.'se').and.chn(3:4).eq.'74') then
	      chnuclide='Se74'
	      Qbb=1.209
	      Zdbb=-32.
	      EK=0.013
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Ge74 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=596
	      if(ilevel.eq.2) levelE=1204
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Se'.or.chn(1:2).eq.'SE'.or.
     +        chn(1:2).eq.'se').and.chn(3:4).eq.'82') then
	      chnuclide='Se82'
	      Qbb=2.995
	      Zdbb=36.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Kr82 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=776
	      if(ilevel.eq.2) levelE=1475
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Zr'.or.chn(1:2).eq.'ZR'.or.
     +        chn(1:2).eq.'zr').and.chn(3:4).eq.'94') then
	      chnuclide='Zr94'
	      Qbb=1.144
	      Zdbb=42.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.1) then
	         print *,'GENBBsub: illegal Mo94 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=871
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1) itrans02=2
	   elseif((chn(1:2).eq.'Zr'.or.chn(1:2).eq.'ZR'.or.
     +        chn(1:2).eq.'zr').and.chn(3:4).eq.'96') then
	      chnuclide='Zr96'
	      Qbb=3.350
	      Zdbb=42.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.4) then
	         print *,'GENBBsub: illegal Mo96 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=778
	      if(ilevel.eq.2) levelE=1148
	      if(ilevel.eq.3) levelE=1498
	      if(ilevel.eq.4) levelE=1626
	      if(ilevel.eq.0.or.ilevel.eq.2) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.3.or.ilevel.eq.4) itrans02=2
	   elseif((chn(1:2).eq.'Mo'.or.chn(1:2).eq.'MO'.or.
     +        chn(1:2).eq.'mo').and.chn(3:4).eq.'92') then
	      chnuclide='Mo92'
	      Qbb=1.649
	      Zdbb=-40.
	      EK=0.020
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Zr92 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=934
	      if(ilevel.eq.2) levelE=1383
	      if(ilevel.eq.0.or.ilevel.eq.2) itrans02=0
	      if(ilevel.eq.1) itrans02=2
	   elseif((chn(1:2).eq.'Mo'.or.chn(1:2).eq.'MO'.or.
     +        chn(1:2).eq.'mo').and.chn(3:5).eq.'100') then
	      chnuclide='Mo100'
	      Qbb=3.034
	      Zdbb=44.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.4) then
	         print *,'GENBBsub: illegal Ru100 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=540
	      if(ilevel.eq.2) levelE=1130
	      if(ilevel.eq.3) levelE=1362
	      if(ilevel.eq.4) levelE=1741
	      if(ilevel.eq.0.or.ilevel.eq.2.or.ilevel.eq.4) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.3) itrans02=2
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +        chn(1:2).eq.'cd').and.chn(3:5).eq.'106') then
	      chnuclide='Cd106'
	      Qbb=2.771
	      Zdbb=-46.
	      EK=0.027
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'GENBBsub: illegal Pd106 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=512
	      if(ilevel.eq.2) levelE=1128
	      if(ilevel.eq.3) levelE=1134
	      if(ilevel.eq.0.or.ilevel.eq.3) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +        chn(1:2).eq.'cd').and.chn(3:5).eq.'114') then
	      chnuclide='Cd114'
	      Qbb=0.536
	      Zdbb=50.
	      EK=0.
	      if(ilevel.ne.0) then
	         print *,'GENBBsub: illegal Sn114 level ',ilevel
	         ier=1
	         return
	      endif
	      levelE=0
	      itrans02=0
	   elseif((chn(1:2).eq.'Cd'.or.chn(1:2).eq.'CD'.or.
     +        chn(1:2).eq.'cd').and.chn(3:5).eq.'116') then
	      chnuclide='Cd116'
	      Qbb=2.805
	      Zdbb=50.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.5) then
	         print *,'GENBBsub: illegal Sn116 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=1294
	      if(ilevel.eq.2) levelE=1757
	      if(ilevel.eq.3) levelE=2027
	      if(ilevel.eq.4) levelE=2112
	      if(ilevel.eq.5) levelE=2225
	      if(ilevel.eq.0.or.ilevel.eq.2.or.ilevel.eq.3) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.4.or.ilevel.eq.5) itrans02=2
	   elseif((chn(1:2).eq.'Te'.or.chn(1:2).eq.'TE'.or.
     +        chn(1:2).eq.'te').and.chn(3:5).eq.'130') then
	      chnuclide='Te130'
	      Qbb=2.529
	      Zdbb=54.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.1) then
	         print *,'GENBBsub: illegal Xe130 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=536
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1) itrans02=2
	   elseif((chn(1:2).eq.'Xe'.or.chn(1:2).eq.'XE'.or.
     +        chn(1:2).eq.'xe').and.chn(3:5).eq.'136') then
	      chnuclide='Xe136'
	      Qbb=2.468
	      Zdbb=56.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.3) then
	         print *,'GENBBsub: illegal Ba136 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=819
	      if(ilevel.eq.2) levelE=1551
	      if(ilevel.eq.3) levelE=1579
	      if(ilevel.eq.0.or.ilevel.eq.3) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Nd'.or.chn(1:2).eq.'ND'.or.
     +        chn(1:2).eq.'nd').and.chn(3:5).eq.'148') then
	      chnuclide='Nd148'
	      Qbb=1.929
	      Zdbb=62.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.2) then
	         print *,'GENBBsub: illegal Sm148 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=550
	      if(ilevel.eq.2) levelE=1455
	      if(ilevel.eq.0) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.2) itrans02=2
	   elseif((chn(1:2).eq.'Nd'.or.chn(1:2).eq.'ND'.or.
     +        chn(1:2).eq.'nd').and.chn(3:5).eq.'150') then
	      chnuclide='Nd150'
	      Qbb=3.367
	      Zdbb=62.
	      EK=0.
	      if(ilevel.lt.0.or.ilevel.gt.5) then
	         print *,'GENBBsub: illegal Sm150 level ',ilevel
	         ier=1
	         return
	      endif
	      if(ilevel.eq.0) levelE=0
	      if(ilevel.eq.1) levelE=334
	      if(ilevel.eq.2) levelE=740
	      if(ilevel.eq.3) levelE=1046
	      if(ilevel.eq.4) levelE=1194
	      if(ilevel.eq.5) levelE=1256
	      if(ilevel.eq.0.or.ilevel.eq.2.or.ilevel.eq.5) itrans02=0
	      if(ilevel.eq.1.or.ilevel.eq.3.or.ilevel.eq.4) itrans02=2
	   else
	      print *,'unknown double beta nuclide'
	      ier=1
	      return
	   endif
	   if(itrans02.eq.0) chdspin='0+'
	   if(itrans02.eq.2) chdspin='2+'
	   if(modebb.lt.1.or.modebb.gt.14) then
	      print *,'unknown bb mode'
	      ier=1
	      return
           elseif(modebb.eq.14) then
              if(chnuclide.ne.'Mo100'.and.
     +           chnuclide.ne.'Cd116') then
	        print *,'SSD2 mode can be used only for Mo-100', 
     +     'or Cd-116'
                print *,'Nuclide = ',chnuclide
                ier=1 
                return
	      endif
              chmodebb='2nubb      0+ -> 0+  {SSD2}'
	   else
	      if(modebb.eq.1)  chmodebb='0nubb(mn) 0+ -> 0+     {2n}'
	      if(modebb.eq.2)  chmodebb='0nubb(rc) 0+ -> 0+     {2n}'
	      if(modebb.eq.3)  chmodebb='0nubb(rc) 0+ -> 0+, 2+ {N*}'
	      if(modebb.eq.4)  chmodebb='2nubb     0+ -> 0+     {2n}'
	      if(modebb.eq.5)  chmodebb='0nubbM1   0+ -> 0+     {2n}'
	      if(modebb.eq.6)  chmodebb='0nubbM3   0+ -> 0+     {2n}'
	      if(modebb.eq.7)  chmodebb='0nubb(rc) 0+ -> 2+     {2n}'
	      if(modebb.eq.8)  
     +           chmodebb='2nubb     0+ -> 2+     {2n}, {N*}'
	      if(modebb.eq.9)  chmodebb='0nuKb+    0+ -> 0+, 2+'
	      if(modebb.eq.10) chmodebb='2nuKb+    0+ -> 0+, 2+'
	      if(modebb.eq.11) chmodebb='0nu2K     0+ -> 0+, 2+'
	      if(modebb.eq.12) chmodebb='2nu2K     0+ -> 0+, 2+'
	      if(modebb.eq.13) chmodebb='0nubbM7   0+ -> 0+     {2n}'
	      if(modebb.eq.14) chmodebb='2nubb     0+ -> 0+   {SSD2}'
	   endif
c checking the consistency of data: (1) energy
	   El=levelE/1000.
	   if(Zdbb.ge.0.)                   e0=Qbb
	   if(Zdbb.lt.0.)                   e0=Qbb-4.*emass
	   if(modebb.eq. 9.or.modebb.eq.10) e0=Qbb-EK-2.*emass
	   if(modebb.eq.11.or.modebb.eq.12) e0=Qbb-2.*EK
	   if(e0.le.El) then
	      print *,'not enough energy for transition to this level:'
	      print *,'full energy release and Elevel = ',e0,El
	      ier=1
	   return
	   endif
c (2) spin of level and mode of decay
	   m=modebb
	   if(itrans02.eq.0. and. 
     +        (m.eq. 1.or.m.eq. 2.or.m.eq. 3.or.m.eq. 4.or.m.eq. 5.or.
     +         m.eq. 6.or.m.eq. 9.or.m.eq.10.or.m.eq.11.or.m.eq.12.or.
     +         m.eq.13.or.m.eq.14)) go to 2
	   if(itrans02.eq.2. and. 
     +        (m.eq. 3.or.m.eq. 7.or.m.eq. 8.or.m.eq. 9.or.m.eq.10.or.
     +         m.eq.11.or.m.eq.12)) go to 2
	   print 1,chmodebb,chdspin
1	   format(' decay mode and spin of daughter nucleus level'/
     +            ' are inconsistent: ',a,'  ',a)
	   ier=1
	   return
c (3) nuclide and mode of decay
2	   if(Zdbb.ge.0..and.(modebb.eq. 9.or.modebb.eq.10.or.
     +                      modebb.eq.11.or.modebb.eq.12)) then
	      print *,'decay mode and nuclide are inconsistent:'
	      print 3,chmodebb,chnuclide
3	      format(' ',a,'  ',a)
	      ier=1
	      return
	   endif
	endif
	if(i2bbs.eq.2) then
	   if((chn(1:2).eq.'Ac'.or.chn(1:2).eq.'AC'.or.chn(1:2).eq.'ac')
     +        .and.chn(3:5).eq.'228') then
	      chnuclide='Ac228'
	   elseif((chn(1:2).eq.'Bi'.or.chn(1:2).eq.'BI'.or.
     +             chn(1:2).eq.'bi').and.chn(3:5).eq.'207') then
	      chnuclide='Bi207'
	   elseif((chn(1:2).eq.'Bi'.or.chn(1:2).eq.'BI'.or.
     +             chn(1:2).eq.'bi').and.chn(3:5).eq.'208') then
	      chnuclide='Bi208'
	   elseif((chn(1:2).eq.'Bi'.or.chn(1:2).eq.'BI'.or.
     +             chn(1:2).eq.'bi').and.chn(3:5).eq.'210') then
	      chnuclide='Bi210'
	   elseif((chn(1:2).eq.'Bi'.or.chn(1:2).eq.'BI'.or.
     +             chn(1:2).eq.'bi').and.chn(3:5).eq.'212') then
	      chnuclide='Bi212'
	   elseif((chn(1:2).eq.'Bi'.or.chn(1:2).eq.'BI'.or.
     +             chn(1:2).eq.'bi').and.chn(3:5).eq.'214') then
	      chnuclide='Bi214'
	   elseif((chn(1:2).eq.'Co'.or.chn(1:2).eq.'CO'.or.
     +             chn(1:2).eq.'co').and.chn(3:4).eq.'60') then
	      chnuclide='Co60'
	   elseif((chn(1:2).eq.'Ca'.or.chn(1:2).eq.'CA'.or.
     +             chn(1:2).eq.'ca').and.chn(3:4).eq.'48') then
	      chnuclide='Ca48'
	   elseif((chn(1:2).eq.'Cs'.or.chn(1:2).eq.'CS'.or.
     +             chn(1:2).eq.'cs').and.chn(3:5).eq.'137') then
	      chnuclide='Cs137'
	   elseif((chn(1:2).eq.'Eu'.or.chn(1:2).eq.'EU'.or.
     +             chn(1:2).eq.'eu').and.chn(3:5).eq.'147') then
	      chnuclide='Eu147'
	   elseif((chn(1:2).eq.'Eu'.or.chn(1:2).eq.'EU'.or.
     +             chn(1:2).eq.'eu').and.chn(3:5).eq.'152') then
	      chnuclide='Eu152'
	   elseif((chn(1:2).eq.'Eu'.or.chn(1:2).eq.'EU'.or.
     +             chn(1:2).eq.'eu').and.chn(3:5).eq.'154') then
	      chnuclide='Eu154'
	   elseif((chn(1:2).eq.'Gd'.or.chn(1:2).eq.'GD'.or.
     +             chn(1:2).eq.'gd').and.chn(3:5).eq.'146') then
	      chnuclide='Gd146'
	   elseif((chn(1:2).eq.'Hf'.or.chn(1:2).eq.'HF'.or.
     +             chn(1:2).eq.'hf').and.chn(3:5).eq.'182') then
	      chnuclide='Hf182'
	   elseif((chn(1:1).eq.'K'.or.chn(1:1).eq.'k')
     +        .and.chn(2:3).eq.'40') then
	      chnuclide='K40'
	   elseif((chn(1:2).eq.'Mn'.or.chn(1:2).eq.'MN'.or.
     +             chn(1:2).eq.'mn').and.chn(3:4).eq.'54') then
	      chnuclide='Mn54'
	   elseif((chn(1:2).eq.'Na'.or.chn(1:2).eq.'NA'.or.
     +             chn(1:2).eq.'na').and.chn(3:4).eq.'22') then
	      chnuclide='Na22'
	   elseif((chn(1:2).eq.'Pa'.or.chn(1:2).eq.'PA'.or.
     +             chn(1:2).eq.'pa').and.chn(3:6).eq.'234m') then
	      chnuclide='Pa234m'
	   elseif((chn(1:2).eq.'Pb'.or.chn(1:2).eq.'PB'.or.
     +             chn(1:2).eq.'pb').and.chn(3:5).eq.'211') then
	      chnuclide='Pb211'
	   elseif((chn(1:2).eq.'Pb'.or.chn(1:2).eq.'PB'.or.
     +             chn(1:2).eq.'pb').and.chn(3:5).eq.'212') then
	      chnuclide='Pb212'
	   elseif((chn(1:2).eq.'Pb'.or.chn(1:2).eq.'PB'.or.
     +             chn(1:2).eq.'pb').and.chn(3:5).eq.'214') then
	      chnuclide='Pb214'
	   elseif((chn(1:2).eq.'Rh'.or.chn(1:2).eq.'RH'.or.
     +             chn(1:2).eq.'rh').and.chn(3:5).eq.'106') then
	      chnuclide='Rh106'
	   elseif((chn(1:2).eq.'Sr'.or.chn(1:2).eq.'SR'.or.
     +             chn(1:2).eq.'sr').and.chn(3:4).eq.'90') then
	      chnuclide='Sr90'
	   elseif((chn(1:2).eq.'Ta'.or.chn(1:2).eq.'TA'.or.
     +             chn(1:2).eq.'ta').and.chn(3:5).eq.'182') then
	      chnuclide='Ta182'
	   elseif((chn(1:2).eq.'Tl'.or.chn(1:2).eq.'TL'.or.
     +             chn(1:2).eq.'tl').and.chn(3:5).eq.'207') then
	      chnuclide='Tl207'
	   elseif((chn(1:2).eq.'Tl'.or.chn(1:2).eq.'TL'.or.
     +             chn(1:2).eq.'tl').and.chn(3:5).eq.'208') then
	      chnuclide='Tl208'
	   elseif((chn(1:2).eq.'Xe'.or.chn(1:2).eq.'XE'.or.
     +             chn(1:2).eq.'xe').and.chn(3:5).eq.'133') then
	      chnuclide='Xe133'
	   elseif((chn(1:1).eq.'Y'.or.chn(1:1).eq.'y')
     +        .and.chn(2:3).eq.'88') then
	      chnuclide='Y88'
	   elseif((chn(1:1).eq.'Y'.or.chn(1:1).eq.'y')
     +        .and.chn(2:3).eq.'90') then
	      chnuclide='Y90'
	   elseif((chn(1:2).eq.'Zr'.or.chn(1:2).eq.'ZR'.or.
     +             chn(1:2).eq.'zr').and.chn(3:4).eq.'96') then
	      chnuclide='Zr96'
	   elseif(chn(1:3).eq.'Art'.or.chn(1:3).eq.'ART'.or.
     +        chn(1:3).eq.'art') then
	      chnuclide='Artificial'
	      nartparts=min0(10,nartparts)
              do i=1,nartparts
	         chn=chart(i)
                 chart(i)='  '
	         if(chn(1:1).eq.'B' .or.chn(1:1).eq.'b')  chart(i)='Be'
  	         if(chn(1:1).eq.'G' .or.chn(1:1).eq.'g')  chart(i)='GP'
	         if(chn(1:1).eq.'P' .or.chn(1:1).eq.'p')  chart(i)='Pi'
	         if(chart(i).eq.'  ') then
	            print *,'unknown particle in artificial event'
	            ier=1
	            return
	         elseif(chart(i).eq.'Be') then
	            artemin(i)=artQb(i)
	            artemax(i)=artQb(i)
	            arttmin(i)=0.
	            arttmax(i)=pi
	            artfmin(i)=0.
	            artfmax(i)=2.*pi
	         elseif(chart(i).eq.'Pi') then
	            artemin(i)=artQb(i)
	            artemax(i)=artQb(i)
	            arttmin(i)=0.
	            arttmax(i)=pi
	            artfmin(i)=0.
	            artfmax(i)=2.*pi
	         else
	            arttmin(i)=arttmin(i)/180.*pi
	            arttmax(i)=arttmax(i)/180.*pi
	            artfmin(i)=artfmin(i)/180.*pi
	            artfmax(i)=artfmax(i)/180.*pi
	         endif
	      enddo
	   elseif(chn(1:3).eq.'Com'.or.chn(1:3).eq.'COM'.or.
     +        chn(1:3).eq.'com') then
	      chnuclide='Compton'
	      arttmin(1)=arttmin(1)/180.*pi
	      arttmax(1)=arttmax(1)/180.*pi
	      artfmin(1)=artfmin(1)/180.*pi
	      artfmax(1)=artfmax(1)/180.*pi
	   elseif(chn(1:3).eq.'Mol'.or.chn(1:3).eq.'MOL'.or.
     +        chn(1:3).eq.'mol') then
	      chnuclide='Moller'
	      arttmin(1)=arttmin(1)/180.*pi
	      arttmax(1)=arttmax(1)/180.*pi
	      artfmin(1)=artfmin(1)/180.*pi
	      artfmax(1)=artfmax(1)/180.*pi
	   elseif(chn(1:3).eq.'Pai'.or.chn(1:3).eq.'PAI'.or.
     +        chn(1:3).eq.'pai') then
	      chnuclide='E+E- external'
	      arttmin(1)=arttmin(1)/180.*pi
	      arttmax(1)=arttmax(1)/180.*pi
	      artfmin(1)=artfmin(1)/180.*pi
	      artfmax(1)=artfmax(1)/180.*pi
	   else
	      print *,'unknown background & source nuclide'
	      ier=1
	      return
	   endif
	endif
	if(ievstart.le.0) ievstart=1
	if(ievstart.eq.1) irndmst=0
	if(ievstart.ne.1) call rdmin(irndmst)
	if(iwrfile.eq.0) chfile='no file'
	if(chfile.ne.'no file') then
	   call datime(id,it)
	   open(unit=77,file=chfile,status='new')
	   write(77,8) chfile
8	   format(' GENBB generated file: ',a)
	   write(77,9) isl(3),isl(2),isl(1),isl(4),isl(5),isl(6)
9	   format(/'  date and hour         : ',
     +            2x,i2,'.',i2,'.',i4,4x,i2,':',i2,':',i2)
	   write(77,*) ' initial random number : ',
     +                 irndmst
	   write(77,*) '   '
	   if(i2bbs.eq.1) then
	      write(77,10) chnuclide
10	      format('  event type: ',a)
	      write(77,*) '             ',chmodebb
	      write(77,11) chdspin,levelE/1000.
11	      format(14x,'level, Elevel (MeV) =  ',a,'  ',g13.5,' MeV')
	      if(toallevents.gt.1.) then
	         write(77,*) '   '
	         write(77,*) 'range for sum of energies of emitted ',
     +                       'e-/e+ (MeV)   : ',ebb1,ebb2
	         allevents=anint(nevents*toallevents)
	         write(77,*) 'corresponding number of events in full ',
     +                       'energy range: ',allevents
	      endif
	   end if
	   if(i2bbs.eq.2) then
	      write(77,10) chnuclide
	      if(chnuclide.eq.'Artificial') then
	         write(77,*) ' number of parts in artificial event',
     +                        '             = ',nartparts
	         do i=1,nartparts
	            if(chart(i).eq.'GP') then
	               if(nartnpg(i).eq. 1) chn='Gamma        '
	               if(nartnpg(i).eq. 2) chn='Positron     '
	               if(nartnpg(i).eq. 3) chn='Electron     '
	               if(nartnpg(i).eq. 4) chn='Neutrino     '
	               if(nartnpg(i).eq. 5) chn='Muon+        '
	               if(nartnpg(i).eq. 6) chn='Muon-        '
	               if(nartnpg(i).eq. 7) chn='Pion0        '
	               if(nartnpg(i).eq. 8) chn='Pion+        '
	               if(nartnpg(i).eq. 9) chn='Pion-        '
	               if(nartnpg(i).eq.10) chn='Kaon0 long   '
	               if(nartnpg(i).eq.11) chn='Kaon+        '
	               if(nartnpg(i).eq.12) chn='Kaon-        '
	               if(nartnpg(i).eq.13) chn='Neutron      '
	               if(nartnpg(i).eq.14) chn='Proton       '
	               if(nartnpg(i).eq.15) chn='Antiproton   '
	               if(nartnpg(i).eq.16) chn='Kaon0 short  '
	               if(nartnpg(i).eq.17) chn='Eta          '
	               if(nartnpg(i).eq.18) chn='Lambda       '
	               if(nartnpg(i).eq.19) chn='Sigma+       '
	               if(nartnpg(i).eq.20) chn='Sigma0       '
	               if(nartnpg(i).eq.21) chn='Sigma-       '
	               if(nartnpg(i).eq.22) chn='Xi0          '
	               if(nartnpg(i).eq.23) chn='Xi-          '
	               if(nartnpg(i).eq.24) chn='Omega        '
	               if(nartnpg(i).eq.25) chn='Antineutron  '
	               if(nartnpg(i).eq.26) chn='Antilambda   '
	               if(nartnpg(i).eq.27) chn='Antisigma-   '
	               if(nartnpg(i).eq.28) chn='Antisigma0   '
	               if(nartnpg(i).eq.29) chn='Antisigma+   '
	               if(nartnpg(i).eq.30) chn='Antixi0      '
	               if(nartnpg(i).eq.31) chn='Antixi+      '
	               if(nartnpg(i).eq.32) chn='Antiomega+   '
	               if(nartnpg(i).eq.45) chn='Deuteron     '
	               if(nartnpg(i).eq.46) chn='Tritium      '
	               if(nartnpg(i).eq.47) chn='Alpha        '
	               if(nartnpg(i).eq.48) chn='Geantino     '
	               if(nartnpg(i).eq.49) chn='He3          '
	               if(nartnpg(i).eq.50) chn='Cerenkov     '
	            endif
	            if(chart(i).eq.'Be')     chn='Beta         '
	            if(chart(i).eq.'Pi')     chn='E+E- internal'
	            write(77,12) i,chn,artemin(i),artemax(i)
12	            format(2x,i2,1x,a13,1x,'min and max E',18x,'= ',
     +                     2g16.7)
	            if(chart(i).eq.'Be') write(77,13) artZd(i)
13	            format(19x,'Z of daughter nucleus          = ',
     +                     g16.7)
	            write(77,14) arttmin(i),arttmax(i),artfmin(i),
     +                           artfmax(i)
14	            format(19x,'min and max teta and phi [rad] = ',
     +                     4g16.7)
	            write(77,15) arttdelay(i),artthalf(i)
15	            format(19x,'time of delay and halflife     = ',
     +                     2g16.7)
	         enddo
	      endif
	      if(chnuclide.eq.'Compton') then
	         write(77,16) artemin(1),artemax(1)
16	         format(4x,'initial gamma: min and max E',18x,'= ',
     +                  2g16.7)
	         write(77,17) arttmin(1),arttmax(1),artfmin(1),
     +                        artfmax(1)
17	         format(19x,'min and max teta and phi [rad] = ',
     +                  4g16.7)
	      endif
	      if(chnuclide.eq.'Moller') then
	         write(77,18) artemin(1),artemax(1)
18	         format(4x,'initial e-: min and max E',18x,'= ',
     +                  2g16.7)
	         write(77,19) arttmin(1),arttmax(1),artfmin(1),
     +                        artfmax(1)
19	         format(16x,'min and max teta and phi [rad] = ',
     +                  4g16.7)
	         write(77,20) artQb(1)
20	         format(16x,'energy threshold for delta ray ='
     +                  ,g16.7)
	      endif
	      if(chnuclide.eq.'E+E- external') then
	         write(77,21) artemin(1),artemax(1)
21	         format(4x,'initial gamma: min and max E',18x,'= ',
     +                  2g16.7)
	         write(77,22) arttmin(1),arttmax(1),artfmin(1),
     +                        artfmax(1)
22	         format(19x,'min and max teta and phi [rad] = ',
     +                  4g16.7)
	         write(77,23) artZd(1)
23	         format(19x,'atomic number of target        ='
     +                  ,g16.7)
	      endif
	   endif
	   write(77,*) '   '
	   write(77,*) 'Format of data:'
	   write(77,*) ' for each event    - event''s number,'
	   write(77,*) '                     time of event''s start, '
	   write(77,*) '                     number of emitted',
     +                 ' particles;'
	   write(77,*) ' for each particle - GEANT number of particle,'
	   write(77,*) '                     ',
     +                 'x,y,z components of momentum,'
	   write(77,*) '                     ',
     +                 'time shift from previous time'
	   write(77,*) '   '
	   write(77,*) 'Time - in sec, momentum - in MeV/c'
	   write(77,*) '   '
	   write(77,*) 'First event and full number of events:'
	   write(77,*) ievstart,nevents
	   write(77,*) '   '
	endif
	istartbb=0
	if(istart.eq.-1) then
	   if(i2bbs.eq.1) 
     +        call bb(modebb,Qbb,levelE/1000.,EK,Zdbb,istartbb)
	   istart=1
	   return
	endif
	istart=1
1000	npfull=0
	if(i2bbs.eq.1) then
	   tevst=0.
	   call bb(modebb,Qbb,levelE/1000.,EK,Zdbb,istartbb)
	   if(chnuclide.eq.'Ca48')    call  Ti48low(levelE)
	   if(chnuclide.eq.'Ni58')    call  Fe58low(levelE)
	   if(chnuclide.eq.'Ge76')    call  Se76low(levelE)
	   if(chnuclide.eq.'Se74')    call  Ge74low(levelE)
	   if(chnuclide.eq.'Se82')    call  Kr82low(levelE)
	   if(chnuclide.eq.'Zr94')    call  Mo94low(levelE)
	   if(chnuclide.eq.'Zr96')    call  Mo96low(levelE)
	   if(chnuclide.eq.'Mo92')    call  Zr92low(levelE)
	   if(chnuclide.eq.'Mo100')   call Ru100low(levelE)
	   if(chnuclide.eq.'Cd106')   call Pd106low(levelE)
	   if(chnuclide.eq.'Cd114')   call Sn114low(levelE)
	   if(chnuclide.eq.'Cd116')   call Sn116low(levelE)
	   if(chnuclide.eq.'Te130')   call Xe130low(levelE)
	   if(chnuclide.eq.'Xe136')   call Ba136low(levelE)
	   if(chnuclide.eq.'Nd148')   call Sm148low(levelE)
	   if(chnuclide.eq.'Nd150')   call Sm150low(levelE)
	end if
	if(i2bbs.eq.2) then
	   if(chnuclide.eq.'Ac228')   call ac228(0.,tdnuc)
	   if(chnuclide.eq.'Bi207')   call bi207(0.,tdnuc)
	   if(chnuclide.eq.'Bi208')   call bi208(0.,tdnuc)
	   if(chnuclide.eq.'Bi210')   call bi210(0.,tdnuc)
	   if(chnuclide.eq.'Bi212')   then
	      call bi212(0.,tdnuc)
	      npfull0=npfull
	      if(npgeant(1).ne.47) then
	         call po212(0.,tdnuc1)
	         ptime(npfull0+1)=ptime(npfull0+1)+tdnuc1
	      endif
	   endif
	   if(chnuclide.eq.'Bi214')   then
	      call bi214(0.,tdnuc)
	      npfull0=npfull
	      if(npgeant(1).ne.47) then
	         call po214(0.,tdnuc1)
	         ptime(npfull0+1)=ptime(npfull0+1)+tdnuc1
	      endif
	   endif
	   if(chnuclide.eq.'Ca48')   then
	      call ca48(0.,tdnuc)
	      npfull0=npfull
	      call sc48(0.,tdnuc1)
	      ptime(npfull0+1)=ptime(npfull0+1)+tdnuc1
	   endif
	   if(chnuclide.eq.'Co60')    call co60(0.,tdnuc)
	   if(chnuclide.eq.'Cs137')   call cs137(0.,tdnuc)
	   if(chnuclide.eq.'Eu147')   call eu147(0.,tdnuc)
	   if(chnuclide.eq.'Eu152')   call eu152(0.,tdnuc)
	   if(chnuclide.eq.'Eu154')   call eu154(0.,tdnuc)
	   if(chnuclide.eq.'Gd146')   call gd146(0.,tdnuc)
	   if(chnuclide.eq.'Hf182')   call hf182(0.,tdnuc)
	   if(chnuclide.eq.'K40')     call k40(0.,tdnuc)
	   if(chnuclide.eq.'Mn54')    call mn54(0.,tdnuc)
	   if(chnuclide.eq.'Na22')    call na22(0.,tdnuc)
	   if(chnuclide.eq.'Pa234m')  call pa234m(0.,tdnuc)
	   if(chnuclide.eq.'Pb211')   call pb211(0.,tdnuc)
	   if(chnuclide.eq.'Pb212')   call pb212(0.,tdnuc)
	   if(chnuclide.eq.'Pb214')   call pb214(0.,tdnuc)
	   if(chnuclide.eq.'Rh106')   call rh106(0.,tdnuc)
	   if(chnuclide.eq.'Sr90')    call sr90(0.,tdnuc)
	   if(chnuclide.eq.'Ta182')   call ta182(0.,tdnuc)
	   if(chnuclide.eq.'Tl207')   call tl207(0.,tdnuc)
	   if(chnuclide.eq.'Tl208')   call tl208(0.,tdnuc)
	   if(chnuclide.eq.'Xe133')   call xe133(0.,tdnuc)
	   if(chnuclide.eq.'Y88')     call y88(0.,tdnuc)
	   if(chnuclide.eq.'Y90')     call y90(0.,tdnuc)
	   if(chnuclide.eq.'Zr96')   then
	      call zr96(0.,tdnuc)
	      npfull0=npfull
	      call nb96(0.,tdnuc1)
	      ptime(npfull0+1)=ptime(npfull0+1)+tdnuc1
	   endif
	   tevst=tdnuc
	   if(chnuclide.eq.'Artificial') then
	      tevst=0.
	      do j=1,nartparts
	         if(chart(j).eq.'Be') then
	            call beta(artQb(j),artZd(j),arttdelay(j),
     +                      artthalf(j),t)
	         elseif(chart(j).eq.'Pi') then
	            call pair(artQb(j),arttdelay(j),artthalf(j),t)
	         else
	            np=nartnpg(j)
                    call particle(np,artemin(j),artemax(j),arttmin(j),
     +                            arttmax(j),artfmin(j),artfmax(j),
     +                            arttdelay(j),artthalf(j),t)
	         endif
	      enddo
	   endif
	   if(chnuclide.eq.'Compton') then
	      tevst=0.
	      call compton(artemin(1),artemax(1),arttmin(1),arttmax(1),
     +                     artfmin(1),artfmax(1))
	   endif
	   if(chnuclide.eq.'Moller') then
	      tevst=0.
	      call moller(artemin(1),artemax(1),arttmin(1),arttmax(1),
     +                    artfmin(1),artfmax(1),artQb(1))
	   endif
	   if(chnuclide.eq.'E+E- external') then
	      tevst=0.
	      call pairext(artemin(1),artemax(1),arttmin(1),arttmax(1),
     +                     artfmin(1),artfmax(1),artZd(1))
	   endif
	endif
	if(chfile.ne.'no file') then
	   write(77,6) icurrent,tevst,npfull
6	   format(i8,g13.6,i4)
	   do j=1,npfull
	      write(77,7) npgeant(j),(pmoment(k,j),k=1,3),ptime(j)
7	      format(i3,3g14.6,g13.6)
	   enddo
	endif
c	if(icurrent.ne.nevents) return
c	call rdmout(irndmfin)
c	print *,'final random integer = ',irndmfin
	return
	end
+DECK,BB.
c***********************************************************************

c***********************************************************************
c****************** Section of brief GENBB history *********************
c***********************************************************************
c                Don't be afraid of perfectness - you'll never reach it.
c                                                          Salvador Dali
c***********************************************************************
c F.Laplanche, 1990:
c     First version of GENBB: 
c     (1) ZEBRA organization for output file; 
c     (2) emission of electron, gamma, alpha particles; beta decay;
c     (3) 2b2n and 2b0n decay of 100-Mo to ground state of 100-Ru; 
c     (4) approximate models of decay of 208-Tl, 212-Bi, 214-Bi and 214-Pb; 
c     (5) Compton, double Compton and Moller scattering.
c     Unpublished.
c V.I.Tretyak, November 1991:
c     Correct algorithm for 2b2n electron energies.
c     Unpublished.
c V.I.Tretyak, August 1992:
c     Models of decay for 40-K, 60-Co, 137-Cs + 137m-Ba, 207-Tl, 208-Tl, 
c     210-Bi, 211-Pb, 212-Bi, 212-Pb, 214-Bi, 214-Pb, 228-Ac, 234m-Pa in full
c     accordance with "Table of Isotopes", ed. by C.M.Lederer, 7th ed., 1978.
c     In models were introduced:
c     (1) possibility to emit K-conversion electron and e+e- pair for all 
c         transitions in nuclear deexcitation process; 
c     (2) Coulomb correction factor for the shape of energy spectra in beta- 
c         or beta+ decay.
c     V.I.Tretyak, "Models of decay of natural radioactive nuclides",
c     note NEMO 2/92, 1992, 43 p.
c V.I.Tretyak, August 1993:
c     (1) models of decay for 22-Na, 88-Y, 90-Sr, 90-Y, 207Bi + 207m-Pb in
c         accordance with "Table of Isotopes";
c     (2) double beta decay of 48-Ca (up to the 2.421 MeV 2_2+ excited level of
c         daughter nucleus), 76-Ge (1.216 MeV 2_2+), 82-Se (1.475 MeV 2_2+),
c         96-Zr (1.626 MeV 2_3+), 100-Mo (1.741 MeV 0_2+), 116-Cd (2.225 MeV 
c         2_3+), 136-Xe (1.579 MeV 0_1+), 150-Nd (1.256 MeV 0_2+);
c     (3) 9 modes of double beta decay: 0n(mn)[2n], 0n(rc)[2n], 0n(rc)[N*],
c         2n[2n], 0nM1[2n], 0nM2[2n] for 0+ - 0+ transitions and 0n(rc)[2n],
c         0n(rc)[N*], 2n[2n=N*] for 0+ - 2+ transitions.
c         Primakoff-Rosen approximation was used for theoretical distributions.
c     V.I.Tretyak, "Current possibilities of events generation in GENBB code",
c     note NEMO 6/93, 1993, 20 p.
c V.I.Tretyak, November-December 1995:
c     (1) Primakoff-Rosen approximation is not used any more. It gives
c         possibility to generate correctly energy spectra not only for
c         2b- but also for 2b+ and eb+ decayers;
c     (2) 4 new double beta processes: 0nueb+, 2nueb+, 0nu2K, 2nu2K;
c     (3) double beta decay of 58-Ni (up to 2.421 MeV 2_2+ level of 48-Ti),
c         74-Se (1.204 MeV 2_2+), 92-Mo (1.383 MeV 0_1+), 
c         94-Zr (0.871 MeV 2_1+), 106-Cd (1.134 MeV 0_1+),
c         114-Cd (0 MeV), 148-Nd (1.455 MeV 2_2+);
c     (4) model of decay of 207-Bi (with 207m-Pb) was improved: L and
c         M conversion electrons, L and M X rays, and K and L Auger
c         electrons are emitted in addition;
c     (5) models of decay of 106-Rh and 208-Bi in accordance with "Table 
c         of Isotopes";
c     (6) information about time evolution of decay of natural radioactive
c         nuclides was introduced taking into account the non-zero time of 
c         life of excited nuclear levels;
c     (7) subroutines for generation of Compton and Moller scattering
c         were rewritten using the GEANT algorithms;
c     (8) GENBB can produce the output file with generated events or
c         can be used as subroutine inside the main simulation program;
c     (9) ZEBRA structure was removed. Output file (if asked) is written
c         in human eye-seen format. Size of such file is 30-90% of 
c         ZEBRA file depending on type of generated events.
c     Unpublished.
c V.I.Tretyak, June 1996:
c     (1) double beta decay of 130-Te (up to level 0.536 MeV 2_1+ of 
c         130-Xe);
c     (2) models of decay for 146-Gd, 147-Eu, 182-Hf and 182-Ta in
c         accordance with "Table of Isotopes".
c     Unpublished.
c V.I.Tretyak, November 1996:
c     (1) improved algorithm for generation of double beta events
c         with restricted electrons energy sum;
c     (2) models of decay for 152-Eu and 154-Eu in accordance with 
c         "Table of Isotopes", 8th ed., 1996 and NDS;
c     (3) possibility of emission of all GEANT particles (particle's
c         number = 1-32 and 45-50).
c     R.Arnold and V.I.Tretyak, "The NEMO 3 simulation program: Current
c     status", preprint CRN 97-01, 1997, 27 p.
c V.I.Tretyak, August 1997:
c     (1) model of decay for 133-Xe in accordance with TOI-8 (1996).
c     Unpublished.
c V.I.Tretyak, March-May 1998:
c     (1) corrected algorithm for generation of double beta events
c         with restricted electrons energy sum;
c     (2) subroutine for e+e- pair creation by external gamma quanta is
c         rewritten in accordance with GEANT algorithms;
c     (3) angular correlation between conversion electrons (1064 and
c         570 keV) in 207-Bi;
c     (4) models of decay for 54-Mn and beta decay of Ca48+Sc48 and 
c         Zr96+Nb96 in accordance with TOI-8, 1996 and NDS;
c     (5) 0nubb decay with Majoron with spectral index = 7.
c V.V. Vasiliev, Feb. 2003
C     - Add new mode for 2b2n decay generation. It uses SSD2 model 
C       developed in F. Simkovic P. Domin S.L. Semenov, 
C       J. Phys. G 27 (2001) 2233; HEP arXive: nucl-th/00006084.
C       These theory taking into account dominance of the first
C       state of intermediate nucleus in 2b decay. It is valid 
C       only for MO-100 and CD-116 2b decay generation, since only
C       Tc and In have metastable states. 
C       This mode has number 14. 
C                
c***********************************************************************

c***********************************************************************
c****************** Section of double beta decay ***********************
c***********************************************************************

c***********************************************************************

	subroutine bb(modebb,Qbb,Edlevel,EK,Zdbb,istartbb)

c Subroutine for sampling the energies and angles of electrons in various
c modes of double beta decay without Primakoff-Rosen approximation.
c
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         common/const/pi,emass
c         common/enrange/ebb1,ebb2,toallevents
c         call bb(modebb,Qbb,Edlevel,EK,Zdbb,istartbb)
c Input : modebb    - mode of double beta (- or +) decay:
c                     1  - 0nubb with neutrino mass, 0+ -> 0+,      2n;
c                     2  - 0nubb with rhc,           0+ -> 0+,      2n;
c                     3  - 0nubb with rhc,           0+ -> 0+, 2+,  N*;
c                     4  - 2nubb,                    0+ -> 0+,      2n;
c                     5  - 0nuM1bb (old Majoron),    0+ -> 0+,      2n;
c                     6  - 0nuM2bb (vector Majoron), 0+ -> 0+,      2n;
c                     7  - 0nubb with rhc,           0+ -> 2+,      2n;
c                     8  - 2nubb,                    0+ -> 2+,      2n, N*;
c                     9  - 0nuKb+                    0+ -> 0+, 2+;
c                     10 - 2nuKb+                    0+ -> 0+, 2+;
c                     11 - 0nu2K                     0+ -> 0+, 2+;
c                     12 - 2nu2K                     0+ -> 0+, 2+;
c         Qbb       - energy release in double beta process: difference
c                     between masses of parent and daughter atoms (MeV);
c         Edlevel   - energy of level of daughter nucleus to which transition 
c                     occured;
c         EK        - binding energy of electron on K shell of parent atom (MeV) 
c                     (for modebb=10 and 11);
c         Zdbb      - atomic number of daughter nucleus (Z>0 for b-b-
c                     and Z<0 for b+b+ and eb+ processes);
c         istartbb  - must be =0 for first call of bb for a given mode;
c         pi,emass  - 3.1415927 and electron rest mass (MeV);
c         ebb1,ebb2 - for modes with continuous distribution of sum of
c                     e-/e+ energies (4,5,6,8,10 and 13), left and right 
c                     limits for E sum in which events will be generated;
c Output: tevst               - time of event's start (sec) (as supposed, 
c                               =0 here);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (1 - gamma, 2 - e+, 3 - e-);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum 
c                               (MeV/c);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec)
c                               (as supposed, =0 here);
c         toallevents         - coefficient to calculate the corresponding 
c                               number of bb events in full range of energies:
c                               full_number=generated_number*toallevents
c                               (for modes 4,5,6,8,10 and 13).
c
c V.I.Tretyak, 26.11.1995.
	double precision dens,denf
*----
*----   modif. R.A. 05/01/2000
        real*8 d_el(2)
*----
	external dshelp1
	external eneut_mod14
	external fe12_mod4, fe12_mod5, fe12_mod6, fe12_mod8,
     +           fe12_mod13, fe12_mod14,
     +            fe2_mod4,  fe2_mod5,  fe2_mod6,  fe2_mod8,
     +            fe2_mod13, fe2_mod14,
     +            fe1_mod10, eneut_mod14b
	dimension spthe1(4300)
        save spthe1,spmax
+SEQ,GENEVENT.
+SEQ,GENCONST.
+SEQ,GENENRANGE.
+SEQ,GENDENRANGE.
+SEQ,GENHELP.
      real*4 rndm(5)
      real*8 derest
      real*8 DGMLT1,X(2)
      
	twopi=2.*pi
	Zd=Zdbb
	if(Zdbb.ge.0.)                   e0=Qbb-Edlevel
	if(Zdbb.lt.0.)                   e0=Qbb-Edlevel-4.*emass
	if(modebb.eq. 9.or.modebb.eq.10) e0=Qbb-Edlevel-EK-2.*emass
	if(modebb.eq.11.or.modebb.eq.12) e0=Qbb-Edlevel-2.*EK
	if(modebb.eq.9) then
c fixed energies of e+ and X-ray; no angular correlation
	   call particle(2,e0,e0,0.,pi,0.,twopi,0.,0.,t)
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   return
	endif
	if(modebb.eq.11) then
c one gamma and two X-rays with fixed energies; no angular correlation
	   call particle(1,e0,e0,0.,pi,0.,twopi,0.,0.,t)
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   return
	endif
	if(modebb.eq.12) then
c fixed energies of two X-rays; no angular correlation
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   return
	endif
	if(istartbb.ne.0) go to 1
c calculate the theoretical energy spectrum of first particle with step 
c of 1 keV and find its maximum
	print *,'wait, please: calculation of theoretical spectrum'
	if(ebb1.lt.0.) ebb1=0.
	if(ebb2.gt.e0) ebb2=e0
	spmax=-1.
	relerr=1.e-4
	do i=1,int(e0*1000.)
	   e1=i/1000.
	   spthe1(i)=0.
	   if(modebb.eq.1)  spthe1(i)=fe1_mod1(e1)
	   if(modebb.eq.2)  spthe1(i)=fe1_mod2(e1)
	   if(modebb.eq.3)  spthe1(i)=fe1_mod3(e1)
	   elow=amax1(1.e-4,ebb1-e1+1.e-4)
	   ehigh=amax1(1.e-4,ebb2-e1+1.e-4)
	   if(modebb.eq.4.and.e1.lt.e0)  spthe1(i)=
cc     +        gauss(fe12_mod4,1.e-4,e0-e1+1.e-4,relerr) 
c correction for restricted energy sum (ebb1<=e1+e2<=ebb2)
     +        gauss(fe12_mod4,elow,ehigh,relerr)
           if(modebb.eq.14.and.e1.lt.e0) THEN
	     spthe1(i)=
     +       gauss(fe12_mod14,elow,ehigh,relerr)
	   endif
	   if(modebb.eq.5.and.e1.lt.e0)  spthe1(i)=
     +        gauss(fe12_mod5,elow,ehigh,relerr)
	   if(modebb.eq.6.and.e1.lt.e0)  spthe1(i)=
     +        gauss(fe12_mod6,elow,ehigh,relerr)
	   if(modebb.eq.7)  spthe1(i)=fe1_mod7(e1)
	   if(modebb.eq.8.and.e1.lt.e0)  spthe1(i)=
     +        gauss(fe12_mod8,elow,ehigh,relerr)
	   if(modebb.eq.10) spthe1(i)=fe1_mod10(e1)
	   if(modebb.eq.13.and.e1.lt.e0)  spthe1(i)=
     +        gauss(fe12_mod13,elow,ehigh,relerr)
	   if(spthe1(i).gt.spmax) spmax=spthe1(i)
	enddo
         
	do i=int(e0*1000.)+1,4300
	   spthe1(i)=0.
	enddo
	toallevents=1.
	if(modebb.eq. 4.or.modebb.eq. 5.or.modebb.eq. 6.or.
     +     modebb.eq. 8.or.modebb.eq.13) then
	   mode=modebb
	   dens=0.d0
	   denf=e0
	   r1=dgmlt1(dshelp1,0.d0,denf,8,8,d_el)
	   dens=ebb1
	   denf=ebb2
	   r2=dgmlt1(dshelp1,0.d0,denf,8,8,d_el)
	   toallevents=r1/r2
	elseif(modebb.eq.10) then
	   toallevents=gauss(fe1_mod10,1.e-4,e0+1.e-4,relerr)
     +                /gauss(fe1_mod10,ebb1+1.e-4,ebb2+1.e-4,relerr)
	endif
	istartbb=1
	print *,'starting the generation'
c sampling the energies: first e-/e+
c1	e1=e0*rndm(d)
1       call grndm(rndm,2)
	if(modebb.ne.10) e1=ebb2*rndm(1)
	if(modebb.eq.10) e1=ebb1+(ebb2-ebb1)*rndm(1)
	k=nint(e1*1000.)
	if(k.lt.1) k=1
	if(spmax*rndm(2).gt.spthe1(k)) go to 1
c second e-/e+ or X-ray
	if    (modebb.eq.1.or.modebb.eq.2.or.modebb.eq.3.or.
     +         modebb.eq.7) then
c modes with no emission of other particles beside of two e-/e+:
c energy of second e-/e+ is calculated
	   e2=e0-e1
	elseif(modebb.eq. 4.or.modebb.eq. 5.or.modebb.eq. 6.or.
     +         modebb.eq. 8.or.modebb.eq.13.or.modebb.eq.14) then
c something else is emitted - energy of second e-/e+ is random
	re2s=amax1(0.,ebb1-e1)
	re2f=ebb2-e1
c	   if(modebb.eq.4) 
c     +        call tgold(0.,e0-e1,fe2_mod4,1.e-3,2,e2max,f2max)
	   if(modebb.eq.4) 
     +        call tgold(re2s,re2f,fe2_mod4,1.e-3,2,e2max,f2max)
           if(modebb.eq.14)
     +        call tgold(re2s,re2f,fe2_mod14,1.e-3,2,e2max,f2max)
	   if(modebb.eq.5) 
     +        call tgold(re2s,re2f,fe2_mod5,1.e-3,2,e2max,f2max)
	   if(modebb.eq.6) 
     +        call tgold(re2s,re2f,fe2_mod6,1.e-3,2,e2max,f2max)
 	   if(modebb.eq.13) 
     +        call tgold(re2s,re2f,fe2_mod13,1.e-3,2,e2max,f2max)
	   if(modebb.eq.8) 
     +        call tgold(re2s,re2f,fe2_mod8,1.e-3,2,e2max,f2max)
c2	   e2=(e0-e1)*rndm(d)
2          call grndm(rndm,2)
	   e2=re2s+(re2f-re2s)*rndm(1)
	   if(modebb.eq.4) fe2=fe2_mod4(e2)
	   if(modebb.eq.14) fe2=fe2_mod14(e2)
	   if(modebb.eq.5) fe2=fe2_mod5(e2)
	   if(modebb.eq.6) fe2=fe2_mod6(e2)
	   if(modebb.eq.13) fe2=fe2_mod13(e2)
	   if(modebb.eq.8) fe2=fe2_mod8(e2)
	   if(f2max*rndm(2).gt.fe2) go to 2
c	   allevents=allevents+1.
c	   if(e1+e2.lt.ebb1.or.e1+e2.gt.ebb2) go to 1
cc	   if(rndm(d).lt.0.5) then
cc	      eh=e1
cc	      e1=e2
cc	      e2=eh
cc	   endif
	elseif(modebb.eq.10) then
c energy of X-ray is fixed; no angular correlation
c	   allevents=allevents+1.
c	   if(e1.lt.ebb1.or.e1.gt.ebb2) go to 1
	   call particle(2,e1,e1,0.,pi,0.,twopi,0.,0.,t)
	   call particle(1,EK,EK,0.,pi,0.,twopi,0.,0.,t)
	   return
	endif
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	b1=p1/(e1+emass)
	b2=p2/(e2+emass)
c sampling the angles with angular correlation
	a=1.
	b=-b1*b2
	c=0.
        if(modebb.eq.14) then
          e2my=e2
          derest=e0-e1-e2
          relerr=1.e-4
CC          a=DGMLT1(eneut_mod14,0.,derest,64,8,X)
CC          b=-b1*b2*DGMLT1(eneut_mod14b,0.D0,derest,64,8,X)	 
          a=DGMLT1(eneut_mod14,0.D0,derest,8,8,X)
          b=-b1*b2*DGMLT1(eneut_mod14b,0.D0,derest,8,8,X)	 
	endif
	if(modebb.eq.2) b=b1*b2
	if(modebb.eq.3) then
	   w1=e1+emass
	   w2=e2+emass
	   a=3.*(w1*w2+emass**2)*(p1**2+p2**2)
	   b=-p1*p2*((w1+w2)**2+4.*(w1*w2+emass**2))
	   c=2.*p1**2*p2**2
	endif
	if(modebb.eq.7) then
	   w1=e1+emass
	   w2=e2+emass
	   a=5.*(w1*w2+emass**2)*(p1**2+p2**2)-p1**2*p2**2
	   b=-p1*p2*(10.*(w1*w2+emass**2)+p1**2+p2**2)
	   c=3.*p1**2*p2**2
	endif
	if(modebb.eq.8) b=b1*b2/3.
	romaxt=a+abs(b)+c
3       call grndm(rndm,5)
	phi1=twopi*rndm(1)
	ctet1=1.-2.*rndm(2)
	stet1=sqrt(1.-ctet1*ctet1)
	phi2=twopi*rndm(3)
	ctet2=1.-2.*rndm(4)
	stet2=sqrt(1.-ctet2*ctet2)
	ctet=ctet1*ctet2+stet1*stet2*cos(phi1-phi2)
	if(romaxt*rndm(5).gt.a+b*ctet+c*ctet**2) go to 3
	npfull=npfull+1
	if(Zdbb.ge.0.) npgeant(npfull)=3
	if(Zdbb.lt.0.) npgeant(npfull)=2
	pmoment(1,npfull)=p1*stet1*cos(phi1)
	pmoment(2,npfull)=p1*stet1*sin(phi1)
	pmoment(3,npfull)=p1*ctet1
	ptime(npfull)=0.
	npfull=npfull+1
	if(Zdbb.ge.0.) npgeant(npfull)=3
	if(Zdbb.lt.0.) npgeant(npfull)=2
	pmoment(1,npfull)=p2*stet2*cos(phi2)
	pmoment(2,npfull)=p2*stet2*sin(phi2)
	pmoment(3,npfull)=p2*ctet2
	ptime(npfull)=0.
	return
	end

c***********************************************************************
+DECK,FE1_MOD1.
	function fe1_mod1(e1)
c probability distribution for energy of first e-/e+ for modebb=1
c (0nu2b with m(nu), 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBBX.
+SEQ,GENCONST.
	fe1_mod1=0.
	if(e1.gt.e0) return
	e2=e0-e1
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe1_mod1=(e1+emass)*p1*fermi(Zdbb,e1)*
     +           (e2+emass)*p2*fermi(Zdbb,e2)
	return
	end

c***********************************************************************
+DECK,FE1_MOD2.
	function fe1_mod2(e1)
c probability distribution for energy of first e-/e+ for modebb=2
c (0nu2b with rhc, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBBX.
+SEQ,GENCONST.
	fe1_mod2=0.
	if(e1.gt.e0) return
	e2=e0-e1
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe1_mod2=(e1+emass)*p1*fermi(Zdbb,e1)*
     +           (e2+emass)*p2*fermi(Zdbb,e2)*
     +           (e0-2.*e1)**2
	return
	end

c***********************************************************************
+DECK,FE1_MOD3.
	function fe1_mod3(e1)
c probability distribution for energy of first e-/e+ for modebb=3
c (0nu2b with rhc, 0+ -> 0+ or 0+ -> 2+, N* mechanism)
+SEQ,GENHELPBBX.
+SEQ,GENCONST.
	fe1_mod3=0.
	if(e1.gt.e0) return
	e2=e0-e1
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe1_mod3=p1*fermi(Zdbb,e1)*p2*fermi(Zdbb,e2)*
     +           (2.*p1**2*p2**2+9.*((e1+emass)*(e2+emass)+emass**2)*
     +           (p1**2+p2**2))
	return
	end

c***********************************************************************
+DECK,FE12_MOD4.
	function fe12_mod4(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=4 (as tsimpr needs)
c (2nu2b, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe12_mod4=0.
	if(e2.gt.e0-e1) return
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod4=(e1+emass)*p1*fermi(Zdbb,e1)*
     +            (e2+emass)*p2*fermi(Zdbb,e2)*
     +            (e0-e1-e2)**5
	return
	end

+DECK,FE2_MOD4.
	function fe2_mod4(e2)
c probability distribution for energy of second e-/e+ for modebb=4
c (2nu2b, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe2_mod4=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
	fe2_mod4=(e2+emass)*p2*fermi(Zdbb,e2)*(e0-e1-e2)**5
	return
	end

c***********************************************************************
c V. Vasiliev  New mode 14 for SSD2 model of 2b2n decay
+DECK,FE12_MOD14.
	real*4 function fe12_mod14(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=14 (as tsimpr needs)
c (2nu2b, 0+ -> 0+, SSD2 mechanism)
        implicit none
+SEQ,GENHELPBB.
+SEQ,GENCONST.
        external eneut_mod14
        real*4 e2 
 	real*8 x(1),erest
 	real*4 relerr,p1,p2
 	real*4 fermi
 	real*8 DGMLT1
 	
        fe12_mod14=0.
	if(e2.gt.e0-e1) return
        e2my=e2
	erest=e0-e1-e2
	relerr=1.e-4
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod14=10.*(e1+emass)*p1*fermi(Zdbb,e1)*
     +    (e2+emass)*p2*fermi(Zdbb,e2)*
     +   DGMLT1(eneut_mod14,0.d0,erest,8,8,X)       
	return
	end
+DECK,FE2_MOD14.
	function fe2_mod14(e2)
c probability distribution for energy of second e-/e+ for modebb=14
c (2nu2b, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
        external eneut_mod14
        real*8 x(1),erest
        real*8 DGMLT1

	fe2_mod14=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
        e2my=e2
	erest=e0-e1-e2
	fe2_mod14=(e2+emass)*p2*fermi(Zdbb,e2)*
     +   DGMLT1(eneut_mod14,0.d0,erest,8,8,X)
	return
	end
c******************************************************************
+DECK,ENEUT_MOD14.
        subroutine eneut_mod14(M,U1,F1,X)
        implicit none
+SEQ,GENHELPBB.
+SEQ,GENCONST.
c-- Vasiliev
c-- For SSD2 we need level difference between initial 
c-- state of Mo or Cd and 1st level of Tc and In 
c-- correspondingly.
c-- Tc - Mo = -0.343 Mev
c-- In - Cd = -0.041 Mev
        real*8 U1(*),F1(*),X(1)
        real*8 de1
        real*8 E1I
        real*8 en1,en2,D11,D12,D22,D21,XK,XL,A
        integer k,M
        if(Zdbb.eq.44.) then
          E1I=-0.343
        elseif(Zdbb.eq.50.) then
          E1I=-0.041 
	else
          print *,'NEUT_MOD14 ERROR, SSD2 can be used only', 
     +    'for Mo-100 and Cd-116 nuclei'
          stop
        endif
        de1=e1
	do k=1,M
	  X(1)=U1(k)                               !!!!!
	  if((e1+e2my+U1(k)).gt.e0) then
              F1(k)=0
          ELSE 
           en1=U1(k)
	   en2=e0-e1-e2my-en1
           D11=e1+en1+E1I+emass
           D12=e1+en2+E1I+emass
	   D22=e2my+en2+E1I+emass
  	   D21=e2my+en1+E1I+emass
           XK=(1./D11)+(1./D22)
	   XL=(1./D12)+(1./D21)
           A=XK**2+XL**2+XK*XL 
	   F1(k)=en1**2*en2**2*A
          ENDIF
        enddo
        return
	END

+DECK,ENEUT_MOD14B.
        subroutine eneut_mod14b(M,U1,F1,X)
        implicit none
+SEQ,GENHELPBB.
+SEQ,GENCONST.
c-- Vasiliev
c-- For SSD2 we need level difference between initial 
c-- state of Mo or Cd and 1st level of Tc and In 
c-- correspondingly.
c-- Tc - Mo = -0.343 Mev
c-- In - Cd = -0.041 Mev
        real*8 U1(*),F1(*),X(1)
        real*8 de1,E1I
        real*4 en1,en2,D11,D12,D22,D21,XK,XL,B
        integer k,M
        if(Zdbb.eq.44.) then    
          E1I=-0.343
        elseif(Zdbb.eq.50.) then
          E1I=-0.041 
	else
          print *,'NEUT_MOD14b ERROR, SSD2 can be used only', 
     +    'for Mo-100 and Cd-116 nuclei'
          stop
        endif
        de1=e1
	do k=1,M
	 X(1)=U1(k)                               !!!!!
	 if((e1+e2my+U1(k)).gt.e0) then
             F1(k)=0
         ELSE 
          en1=U1(k)
	  en2=e0-e1-e2my-en1
          D11=e1+en1+E1I+emass
          D12=e1+en2+E1I+emass
	  D22=e2my+en2+E1I+emass
  	  D21=e2my+en1+E1I+emass
          XK=(1./D11)+(1./D22)
	  XL=(1./D12)+(1./D21)
          B=(2.*XK**2+2.*XL**2+5.*XK*XL)/3 
	  F1(k)=en1**2*en2**2*B
         ENDIF
        enddo
        return
	END

c***********************************************************************
+DECK,FE12_MOD5.
	function fe12_mod5(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=5 (as tsimpr needs)
c (0nu2b with Gelmini-Roncadelli Majoron (spectral index = 1), 
c 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe12_mod5=0.
	if(e2.gt.e0-e1) return
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod5=(e1+emass)*p1*fermi(Zdbb,e1)*
     +            (e2+emass)*p2*fermi(Zdbb,e2)*
     +            (e0-e1-e2)
	return
	end
+DECK,FE2_MOD5.
	function fe2_mod5(e2)
c probability distribution for energy of second e-/e+ for modebb=5
c (0nu2b with Gelmini-Roncadelli Majoron (spectral index = 1), 
c 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe2_mod5=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
	fe2_mod5=(e2+emass)*p2*fermi(Zdbb,e2)*(e0-e1-e2)
	return
	end

c***********************************************************************
+DECK,FE12_MOD6.
	function fe12_mod6(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=6 (as tsimpr needs)
c (0nu2b with massive vector etc. Majoron (spectral index = 3),
c 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe12_mod6=0.
	if(e2.gt.e0-e1) return
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod6=(e1+emass)*p1*fermi(Zdbb,e1)*
     +            (e2+emass)*p2*fermi(Zdbb,e2)*
     +            (e0-e1-e2)**3
	return
	end
+DECK,FE2_MOD6.
	function fe2_mod6(e2)
c probability distribution for energy of second e-/e+ for modebb=6
c (0nu2b with massive vector etc. Majoron (spectral index = 3), 
c 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe2_mod6=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
	fe2_mod6=(e2+emass)*p2*fermi(Zdbb,e2)*(e0-e1-e2)**3
	return
	end

c***********************************************************************
+DECK,FE1_MOD7.
	function fe1_mod7(e1)
c probability distribution for energy of first e-/e+ for modebb=7
c (0nu2b with rhc, 0+ -> 2+, 2n mechanism)
+SEQ,GENHELPBBX.
+SEQ,GENCONST.
	fe1_mod7=0.
	if(e1.gt.e0) return
	e2=e0-e1
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe1_mod7=p1*fermi(Zdbb,e1)*p2*fermi(Zdbb,e2)*
     +           ((e1+emass)*(e2+emass)+emass**2)*(p1**2+p2**2)
	return
	end

c***********************************************************************
+DECK,FE12_MOD8.
	function fe12_mod8(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=8 (as tsimpr needs)
c (2nu2b, 0+ -> 2+, 2n or N* mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe12_mod8=0.
	if(e2.gt.e0-e1) return
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod8=(e1+emass)*p1*fermi(Zdbb,e1)*
     +            (e2+emass)*p2*fermi(Zdbb,e2)*
     +            (e0-e1-e2)**7*(e1-e2)**2
	return
	end
+DECK,FE2_MOD8.
	function fe2_mod8(e2)
c probability distribution for energy of second e-/e+ for modebb=8
c (2nu2b, 0+ -> 2+, 2n or N* mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe2_mod8=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
	fe2_mod8=(e2+emass)*p2*fermi(Zdbb,e2)*(e0-e1-e2)**7*(e1-e2)**2
	return
	end

c***********************************************************************
+DECK,FE1_MOD10.
	function fe1_mod10(e1)
c probability distribution for energy of e+ for modebb=10 (2nueb+)
+SEQ,GENHELPBBX.
+SEQ,GENCONST.
	fe1_mod10=0.
	if(e1.gt.e0) return
	p1=sqrt(e1*(e1+2.*emass))
	fe1_mod10=(e1+emass)*p1*fermi(Zdbb,e1)*(e0-e1)**5
	return
	end

c***********************************************************************
+DECK,FE12_MOD13.
	function fe12_mod13(e2)
c two-dimensional probability distribution for energies of e-/e+ for
c modebb=13 (as tsimpr needs)
c (0nu2b with Majoron with spectral index = 7, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe12_mod13=0.
	if(e2.gt.e0-e1) return
	p1=sqrt(e1*(e1+2.*emass))
	p2=sqrt(e2*(e2+2.*emass))
	fe12_mod13=(e1+emass)*p1*fermi(Zdbb,e1)*
     +             (e2+emass)*p2*fermi(Zdbb,e2)*
     +             (e0-e1-e2)**7
	return
	end
+DECK,FE2_MOD13.
	function fe2_mod13(e2)
c probability distribution for energy of second e-/e+ for modebb=13
c (0nu2b with Majoron with spectral index = 7, 0+ -> 0+, 2n mechanism)
+SEQ,GENHELPBB.
+SEQ,GENCONST.
	fe2_mod13=0.
	if(e2.gt.e0-e1) return
	p2=sqrt(e2*(e2+2.*emass))
	fe2_mod13=(e2+emass)*p2*fermi(Zdbb,e2)*(e0-e1-e2)**7
	return
	end

c***********************************************************************
+DECK,DSHELP1.
	subroutine dshelp1(m,du1,df1,d_el)
	double precision d_el(2),df1(2),du1(2),dens,denf,d
	external dshelp2
+SEQ,GENDENRANGE.
	do i=1,m
	   d_el(1)=du1(i)
	   d=dmax1(0.d0,dens-d_el(1))
	   df1(i)=dgmlt2(dshelp2,d,denf-d_el(1),16,8,d_el)
	enddo
	return
	end

c***********************************************************************
+DECK,DSHELP2.
	subroutine dshelp2(m,du2,df2,d_el)
	double precision d_el(2),df2(2),du2(2),dens,denf
+SEQ,GENDENRANGE.
+SEQ,GENCONST.
+SEQ,GENHELPBB.
	do i=1,m
	   d_el(2)=du2(i)
	   e1=d_el(1)
	   e2=d_el(2)
	   df2(i)=0.d0
	   if(e1.gt.0..and.e2.gt.0..and.e1+e2.lt.e0) then
	      if(mode.eq.4) df2(i)=fe12_mod4(e2)
	      if(mode.eq.5) df2(i)=fe12_mod5(e2)
	      if(mode.eq.6) df2(i)=fe12_mod6(e2)
	      if(mode.eq.13) df2(i)=fe12_mod13(e2)
	      if(mode.eq.8) df2(i)=fe12_mod8(e2)
              if(mode.eq.14) df2(i)=fe12_mod14(e2)
	   endif
	   if(d_el(1)+d_el(2).lt.dens.or.d_el(1)+d_el(2).gt.denf)
     +        df2(i)=0.d0
	enddo
	return
	end
+DECK,AC228.
c***********************************************************************

c***********************************************************************
c**************** Section of radioactive isotopes **********************
c***********************************************************************

c***********************************************************************

	subroutine Ac228(tcnuc,tdnuc)
c Scheme of 228Ac decay ("Table of Isotopes", 7th ed., 1978).
c Two-, three- and four-figured labels correspond to energies of
c 228Th excited levels in keV. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 8.08.1992, 22.10.1995.
        dimension rndm(3)
        call grndm(rndm,3)
	thnuc=22068.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(2))
	tclev=0.
	pbeta=100.*rndm(3)
	if(pbeta.le. 0.20) go to  2027   !  0.20%
	if(pbeta.le. 0.40) go to  2010   !  0.20%
	if(pbeta.le. 0.44) go to  1965   !  0.04%
	if(pbeta.le. 0.67) go to  1945   !  0.23%
	if(pbeta.le. 0.77) go to  1900   !  0.10%
	if(pbeta.le. 0.91) go to  1893   !  0.14%
	if(pbeta.le. 1.02) go to  1760   !  0.11%
	if(pbeta.le. 1.31) go to  1744   !  0.29%
	if(pbeta.le. 2.81) go to  1724   !  1.50%
	if(pbeta.le. 4.91) go to  1689   !  2.10%
	if(pbeta.le. 6.41) go to  1683   !  1.50%
	if(pbeta.le.11.11) go to  1646   !  4.70%
	if(pbeta.le.11.91) go to  1643   !  0.80%
	if(pbeta.le.13.11) go to  1638   !  1.20%
	if(pbeta.le.13.18) go to  1547   !  0.07%
	if(pbeta.le.13.38) go to  1539   !  0.20%
	if(pbeta.le.21.38) go to  1532   !  8.00%
	if(pbeta.le.21.58) go to  1489   !  0.20%
	if(pbeta.le.23.48) go to  1450   !  1.90%
	if(pbeta.le.24.98) go to  1432   !  1.50%
	if(pbeta.le.25.18) go to  1344   !  0.20%
	if(pbeta.le.25.98) go to  1227   !  0.80%
	if(pbeta.le.29.58) go to  1169   !  3.60%
	if(pbeta.le.34.58) go to  1154   !  5.00%
	if(pbeta.le.39.98) go to  1123   !  5.40%
	if(pbeta.le.40.08) go to  1060   !  0.10%
	if(pbeta.le.42.08) go to  1022   !  2.00%
	if(pbeta.le.42.28) go to  1016   !  0.20%
	if(pbeta.le.42.38) go to   979   !  0.10%
	if(pbeta.le.74.33) go to   969   ! 31.95%
	if(pbeta.le.74.63) go to   968   !  0.30%
	if(pbeta.le.74.86) go to   944   !  0.23%
	if(pbeta.le.75.00) go to   875   !  0.14%
	if(pbeta.le.75.20) go to   519   !  0.20%
	if(pbeta.le.88.20) go to   396   ! 13.00%
	if(pbeta.le.89.00) go to   187   !  0.80%
	                   go to    58   ! 11.00%
c-----------------------------------------------------------------------
2027	call beta(0.110,90.,0.,0.,t)
20270	thlev=0. 
	p=100.*rndm(1)
	if(p.le.31.) go to 20271   ! 31%
	             go to 20272   ! 69%
20271	call nucltransK(1.509,0.110,3.2e-3,0.,tclev,thlev,tdlev)
	go to 96900
20272	call nucltransK(1.004,0.110,3.0e-3,0.,tclev,thlev,tdlev)
	go to 10220
c-----------------------------------------------------------------------
2010	call beta(0.127,90.,0.,0.,t)
20100	thlev=0. 
	p=100.*rndm(1)
	if(p.le.42.) go to 20101   ! 42%
	if(p.le.72.) go to 20102   ! 30%
	             go to 20103   ! 28%
20101	call nucltransK(1.952,0.110,2.8e-3,1.6e-4,tclev,thlev,tdlev)
	go to 58000
20102	call nucltransK(1.823,0.110,7.0e-3,1.7e-4,tclev,thlev,tdlev)
	go to 18700
20103	call nucltransK(0.920,0.110,0.7e+0,0.,tclev,thlev,tdlev)
	go to 10910
c-----------------------------------------------------------------------
1965	call beta(0.172,90.,0.,0.,t)
19650	thlev=0. 
	p=100.*rndm(1)
	if(p.le.33.) go to 19651   ! 33%
	             go to 19652   ! 67%
19651	call nucltransK(1.966,0.110,1.2e-3,2.9e-4,tclev,thlev,tdlev)
	go to 10000
19652	call nucltransK(1.907,0.110,1.8e-3,2.7e-4,tclev,thlev,tdlev)
	go to 58000
c-----------------------------------------------------------------------
1945	call beta(0.192,90.,0.,0.,t)
19450	thlev=0. 
	p=100.*rndm(1)
	if(p.le.31.4) go to 19451   ! 31.4%
	if(p.le.42.4) go to 19452   ! 11.0%
	if(p.le.44.3) go to 19453   !  1.9%
	if(p.le.75.7) go to 19454   ! 31.4%
	if(p.le.87.8) go to 19455   ! 12.1%
	if(p.le.89.0) go to 19456   !  1.2%
	if(p.le.94.0) go to 19457   !  5.0%
	if(p.le.96.0) go to 19458   !  2.0%
	              go to 19459   !  4.0%
19451	call nucltransK(1.887,0.110,3.0e-3,1.3e-4,tclev,thlev,tdlev)
	go to 58000
19452	call nucltransK(1.758,0.110,1.0e-2,2.0e-4,tclev,thlev,tdlev)
	go to 18700
19453	call nucltransK(1.549,0.110,1.7e-3,0.6e-4,tclev,thlev,tdlev)
	go to 39600
19454	call nucltransK(0.975,0.110,4.0e-2,0.,tclev,thlev,tdlev)
	go to 96900
19455	call nucltransK(0.922,0.110,4.5e-2,0.,tclev,thlev,tdlev)
	go to 10220
19456	call nucltransK(0.853,0.110,5.5e-2,0.,tclev,thlev,tdlev)
	go to 10910
19457	call nucltransK(0.791,0.110,6.5e-2,0.,tclev,thlev,tdlev)
	go to 11540
19458	call nucltransK(0.745,0.110,7.5e-2,0.,tclev,thlev,tdlev)
	go to 12000
19459	call nucltransK(0.220,0.110,2.1e+0,0.,tclev,thlev,tdlev)
	go to 17240
c-----------------------------------------------------------------------
1900	call beta(0.237,90.,0.,0.,t)
19000	thlev=0. 
	p=100.*rndm(1)
	if(p.le. 1.7) go to 19001   !  1.7%
	if(p.le.20.7) go to 19002   ! 19.0%
	if(p.le.21.7) go to 19003   !  1.0%
	if(p.le.31.7) go to 19004   ! 10.0%
	if(p.le.67.9) go to 19005   ! 36.2%
	              go to 19006   ! 32.1%
19001	call nucltransK(1.900,0.110,3.0e-3,1.3e-4,tclev,thlev,tdlev)
	go to 10000
19002	call nucltransK(1.842,0.110,8.0e-3,2.0e-4,tclev,thlev,tdlev)
	go to 58000
19003	call nucltransK(1.712,0.110,3.5e-3,0.8e-4,tclev,thlev,tdlev)
	go to 18700
19004	call nucltransK(1.504,0.110,1.7e-3,0.5e-4,tclev,thlev,tdlev)
	go to 39600
19005	call nucltransK(0.884,0.110,4.3e-3,0.,tclev,thlev,tdlev)
	go to 10160
19006	call nucltransK(0.449,0.110,1.6e-2,0.,tclev,thlev,tdlev)
	go to 14500
c-----------------------------------------------------------------------
1893	call beta(0.244,90.,0.,0.,t)
18930	thlev=0. 
	p=100.*rndm(1)
	if(p.le.17.0) go to 18931   ! 17.0%
	if(p.le.22.6) go to 18932   !  5.6%
	if(p.le.38.6) go to 18933   ! 16.0%
	if(p.le.47.6) go to 18934   !  9.0%
	if(p.le.74.8) go to 18935   ! 27.2%
	if(p.le.76.8) go to 18936   !  2.0%
	if(p.le.77.8) go to 18937   !  1.0%
                      go to 18938   ! 22.2%
18931	call nucltransK(1.835,0.110,6.0e-3,2.0e-4,tclev,thlev,tdlev)
	go to 58000
18932	call nucltransK(1.706,0.110,1.0e-2,1.0e-4,tclev,thlev,tdlev)
	go to 18700
18933	call nucltransK(0.940,0.110,1.0e-1,0.,tclev,thlev,tdlev)
	go to 95200
18934	call nucltransK(0.924,0.110,4.5e-2,0.,tclev,thlev,tdlev)
	go to 96900
18935	call nucltransK(0.870,0.110,5.2e-2,0.,tclev,thlev,tdlev)
	go to 10220
18936	call nucltransK(0.739,0.110,3.3e-1,0.,tclev,thlev,tdlev)
	go to 11540
18937	call nucltransK(0.693,0.110,1.2e-1,0.,tclev,thlev,tdlev)
	go to 12000
18938	call nucltransK(0.461,0.110,2.8e-1,0.,tclev,thlev,tdlev)
	go to 14320
c-----------------------------------------------------------------------
1760	call beta(0.377,90.,0.,0.,t)
17600	thlev=0. 
	p=100.*rndm(1)
	if(p.le.62.) go to 17601   ! 62%
	             go to 17602   ! 38%
17601	call nucltransK(1.702,0.110,1.4e-3,1.1e-4,tclev,thlev,tdlev)
	go to 58000
17602	call nucltransK(1.574,0.110,1.7e-3,0.7e-4,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
1744	call beta(0.393,90.,0.,0.,t)
17440	thlev=0. 
	p=100.*rndm(1)
	if(p.le.32.) go to 17441   ! 32%
	if(p.le.94.) go to 17442   ! 62%
	             go to 17443   !  6%
17441	call nucltransK(1.686,0.110,1.4e-3,1.6e-4,tclev,thlev,tdlev)
	go to 58000
17442	call nucltransK(1.557,0.110,1.7e-3,0.6e-4,tclev,thlev,tdlev)
	go to 18700
17443	call nucltransK(1.348,0.110,2.0e-3,0.2e-4,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
1724	call beta(0.413,90.,0.,0.,t)
17240	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.0) go to 17241   !  2.0%
	if(p.le.15.0) go to 17242   ! 13.0%
	if(p.le.15.8) go to 17243   !  0.8%
	if(p.le.89.0) go to 17244   ! 73.2%
                      go to 17245   ! 11.0%
17241	call nucltransK(1.724,0.110,3.7e-3,0.7e-4,tclev,thlev,tdlev)
	go to 10000
17242	call nucltransK(1.666,0.110,1.0e-2,1.2e-4,tclev,thlev,tdlev)
	go to 58000
17243	call nucltransK(1.537,0.110,4.0e-3,0.4e-4,tclev,thlev,tdlev)
	go to 18700
17244	call nucltransK(0.755,0.110,6.9e-2,0.,tclev,thlev,tdlev)
	go to 96900
17245	call nucltransK(0.702,0.110,9.5e-2,0.,tclev,thlev,tdlev)
	go to 10220
c-----------------------------------------------------------------------
1689	call beta(0.448,90.,0.,0.,t)
16890	thlev=0. 
	p=100.*rndm(1)
	if(p.le.72.3) go to 16891   ! 72.3%
	if(p.le.98.0) go to 16892   ! 25.7%
	              go to 16893   !  2.0%
16891	call nucltransK(1.631,0.110,7.4e-3,1.2e-4,tclev,thlev,tdlev)
	go to 58000
16892	call nucltransK(1.502,0.110,1.7e-3,0.5e-4,tclev,thlev,tdlev)
	go to 18700
16893	call nucltransK(0.666,0.110,7.5e-3,0.,tclev,thlev,tdlev)
	go to 10220
c-----------------------------------------------------------------------
1683	call beta(0.454,90.,0.,0.,t)
16830	thlev=0. 
	p=100.*rndm(1)
	if(p.le.22.) go to 16831   ! 22%
	if(p.le.90.) go to 16832   ! 68%
	if(p.le.96.) go to 16833   !  6%
	             go to 16834   !  4%
16831	call nucltransK(1.625,0.110,1.5e-3,0.8e-4,tclev,thlev,tdlev)
	go to 58000
16832	call nucltransK(1.496,0.110,1.7e-3,0.5e-4,tclev,thlev,tdlev)
	go to 18700
16833	call nucltransK(1.287,0.110,2.2e-3,0.2e-4,tclev,thlev,tdlev)
	go to 39600
16834	call nucltransK(1.165,0.110,2.6e-3,0.1e-4,tclev,thlev,tdlev)
	go to 51900
c-----------------------------------------------------------------------
1646	call beta(0.491,90.,0.,0.,t)
16460	thlev=0. 
	p=100.*rndm(1)
	if(p.le.75.0) go to 16461   ! 75.0%
	if(p.le.95.0) go to 16462   ! 20.0%
	if(p.le.96.0) go to 16463   !  1.0%
	if(p.le.96.4) go to 16464   !  0.4%
	if(p.le.97.4) go to 16465   !  1.0%
	if(p.le.99.5) go to 16466   !  2.1%
	              go to 16467   !  0.5%
16461	call nucltransK(1.588,0.110,4.7e-3,0.5e-4,tclev,thlev,tdlev)
	go to 58000
16462	call nucltransK(1.459,0.110,5.0e-3,0.3e-4,tclev,thlev,tdlev)
	go to 18700
16463	call nucltransK(0.677,0.110,2.2e-2,0.,tclev,thlev,tdlev)
	go to 96900
16464	call nucltransK(0.624,0.110,8.0e-3,0.,tclev,thlev,tdlev)
	go to 10220
16465	call nucltransK(0.555,0.110,1.6e-1,0.,tclev,thlev,tdlev)
	go to 10910
16466	call nucltransK(0.523,0.110,1.2e-2,0.,tclev,thlev,tdlev)
	go to 11230
16467	call nucltransK(0.420,0.110,1.8e-2,0.,tclev,thlev,tdlev)
	go to 12270
c-----------------------------------------------------------------------
1643	call beta(0.494,90.,0.,0.,t)
16430	thlev=0. 
	p=100.*rndm(1)
	if(p.le. 1.0) go to 16431   !  1.0%
	if(p.le.51.7) go to 16432   ! 50.7%
	if(p.le.61.7) go to 16433   ! 10.0%
	if(p.le.70.7) go to 16434   !  9.0%
	              go to 16435   ! 29.3%
16431	call nucltransK(1.315,0.110,1.8e-2,0.6e-4,tclev,thlev,tdlev)
	go to 32800
16432	call nucltransK(1.247,0.110,2.1e-2,0.4e-4,tclev,thlev,tdlev)
	go to 39600
16433	call nucltransK(0.675,0.110,7.0e-3,0.,tclev,thlev,tdlev)
	go to 96900
16434	call nucltransK(0.620,0.110,8.0e-3,0.,tclev,thlev,tdlev)
	go to 10220
16435	call nucltransK(0.210,0.110,7.9e-2,0.,tclev,thlev,tdlev)
	go to 14320
c-----------------------------------------------------------------------
1638	call beta(0.499,90.,0.,0.,t)
16380	thlev=0. 
	p=100.*rndm(1)
	if(p.le.38.) go to 16381   ! 38%
	if(p.le.96.) go to 16382   ! 58%
	             go to 16383   !  4%
16381	call nucltransK(1.638,0.110,4.0e-3,0.5e-4,tclev,thlev,tdlev)
	go to 10000
16382	call nucltransK(1.581,0.110,1.1e-2,1.1e-4,tclev,thlev,tdlev)
	go to 58000
16383	call nucltransK(0.516,0.110,1.2e-2,0.,tclev,thlev,tdlev)
	go to 11230
c-----------------------------------------------------------------------
1547	call beta(0.590,90.,0.,0.,t)
15470	thlev=0. 
	p=100.*rndm(1)
	if(p.le.50.) go to 15471   ! 50%
	if(p.le.86.) go to 15472   ! 36%
	             go to 15473   ! 14%
15471	call nucltransK(1.169,0.110,2.7e-3,0.2e-4,tclev,thlev,tdlev)
	go to 37800
15472	call nucltransK(0.378,0.110,2.2e-2,0.,tclev,thlev,tdlev)
	go to 11690
15473	call nucltransK(0.373,0.110,2.2e-2,0.,tclev,thlev,tdlev)
	go to 11750
c-----------------------------------------------------------------------
1539	call beta(0.598,90.,0.,0.,t)
15390	thlev=0. 
	p=100.*rndm(1)
	if(p.le.12.) go to 15391   ! 12%
	if(p.le.18.) go to 15392   !  6%
	if(p.le.32.) go to 15393   ! 14%
	             go to 15394   ! 68%
15391	call nucltransK(1.480,0.110,1.8e-3,0.5e-4,tclev,thlev,tdlev)
	go to 58000
15392	call nucltransK(1.143,0.110,2.6e-2,0.3e-4,tclev,thlev,tdlev)
	go to 39600
15393	call nucltransK(1.020,0.110,1.0e-2,0.,tclev,thlev,tdlev)
	go to 51900
15394	call nucltransK(0.571,0.110,1.5e-1,0.,tclev,thlev,tdlev)
	go to 96800
c-----------------------------------------------------------------------
1532	call beta(0.605,90.,0.,0.,t)
15320	thlev=0. 
	p=100.*rndm(1)
	if(p.le. 0.4) go to 15321   !  0.4%
	if(p.le.30.7) go to 15322   ! 30.3%
	if(p.le.46.7) go to 15323   ! 16.0%
	if(p.le.51.3) go to 15324   !  4.6%
	if(p.le.52.3) go to 15325   !  1.0%
	if(p.le.53.0) go to 15326   !  0.7%
	              go to 15327   ! 47.0%
15321	call nucltransK(1.136,0.110,2.8e-3,0.2e-4,tclev,thlev,tdlev)
	go to 39600
15322	call nucltransK(0.563,0.110,5.0e-2,0.,tclev,thlev,tdlev)
	go to 96900
15323	call nucltransK(0.509,0.110,6.0e-2,0.,tclev,thlev,tdlev)
	go to 10220
15324	call nucltransK(0.441,0.110,3.0e-1,0.,tclev,thlev,tdlev)
	go to 10910
15325	call nucltransK(0.378,0.110,4.5e-1,0.,tclev,thlev,tdlev)
	go to 11540
15326	call nucltransK(0.357,0.110,1.7e+0,0.,tclev,thlev,tdlev)
	go to 11750
15327	call nucltransK(0.100,0.020,4.0e+0,0.,tclev,thlev,tdlev)
	go to 14320
c-----------------------------------------------------------------------
1489	call beta(0.648,90.,0.,0.,t)
14890	thlev=0. 
	p=100.*rndm(1)
	if(p.le.22.) go to 14891   ! 22%
	             go to 14892   ! 78%
14891	call nucltransK(0.399,0.110,2.0e-2,0.,tclev,thlev,tdlev)
	go to 10910
14892	call nucltransK(0.314,0.110,0.6e+0,0.,tclev,thlev,tdlev)
	go to 11750
c-----------------------------------------------------------------------
1450	call beta(0.687,90.,0.,0.,t)
14500	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 3.0) go to 14501   !  3.0%
	if(p.le.15.0) go to 14502   ! 12.0%
	if(p.le.16.5) go to 14503   !  1.5%
	if(p.le.58.0) go to 14504   ! 41.5%
	if(p.le.82.0) go to 14505   ! 24.0%
	              go to 14506   ! 18.0%
14501	call nucltransK(1.054,0.110,3.2e-2,0.,tclev,thlev,tdlev)
	go to 39600
14502	call nucltransK(0.498,0.110,4.2e-2,0.,tclev,thlev,tdlev)
	go to 95200
14503	call nucltransK(0.481,0.110,2.5e-1,0.,tclev,thlev,tdlev)
	go to 96800
14504	call nucltransK(0.328,0.110,4.4e-2,0.,tclev,thlev,tdlev)
	go to 11230
14505	call nucltransK(0.282,0.110,1.3e+0,0.,tclev,thlev,tdlev)
	go to 11690
14506	call nucltransK(0.224,0.110,1.5e+0,0.,tclev,thlev,tdlev)
	go to 12270
c-----------------------------------------------------------------------
1432	call beta(0.705,90.,0.,0.,t)
14320	thlev=0. 
        call grndm(rndm,1)
	p=100.*rndm(1)
	if(p.le. 1.0) go to 14321   !  1.0%
	if(p.le. 3.0) go to 14322   !  2.0%
	if(p.le.64.8) go to 14323   ! 61.8%
	if(p.le.92.2) go to 14324   ! 27.4%
	if(p.le.98.2) go to 14325   !  6.0%
	if(p.le.99.0) go to 14326   !  0.8%
	if(p.le.99.6) go to 14327   !  0.6%
	              go to 14328   !  0.4%
14321	call nucltransK(1.374,0.110,1.4e-2,0.7e-4,tclev,thlev,tdlev)
	go to 58000
14322	call nucltransK(1.245,0.110,2.0e-2,0.4e-4,tclev,thlev,tdlev)
	go to 18700
14323	call nucltransK(0.463,0.110,4.7e-2,0.,tclev,thlev,tdlev)
	go to 96900
14324	call nucltransK(0.410,0.110,8.3e-2,0.,tclev,thlev,tdlev)
	go to 10220
14325	call nucltransK(0.341,0.110,1.2e-1,0.,tclev,thlev,tdlev)
	go to 10910
14326	call nucltransK(0.308,0.110,3.5e-2,0.,tclev,thlev,tdlev)
	go to 11230
14327	call nucltransK(0.264,0.110,5.0e-2,0.,tclev,thlev,tdlev)
	go to 11690
14328	call nucltransK(0.258,0.110,5.0e-2,0.,tclev,thlev,tdlev)
	go to 11750
c-----------------------------------------------------------------------
1344	call beta(0.793,90.,0.,0.,t)
13440	thlev=0. 
	p=100.*rndm(1)
	if(p.le.27.0) go to 13441   ! 27.0%
	if(p.le.64.5) go to 13442   ! 37.5%
	if(p.le.95.0) go to 13443   ! 30.5%
	              go to 13444   !  5.0%
13441	call nucltransK(1.017,0.110,3.5e-3,0.,tclev,thlev,tdlev)
	go to 32800
13442	call nucltransK(0.948,0.110,3.7e-3,0.,tclev,thlev,tdlev)
	go to 39600
13443	call nucltransK(0.825,0.110,5.0e-3,0.,tclev,thlev,tdlev)
	go to 51900
13444	call nucltransK(0.169,0.110,1.4e-1,0.,tclev,thlev,tdlev)
	go to 11750
c-----------------------------------------------------------------------
1227	call beta(0.910,90.,0.,0.,t)
12270	thlev=0. 
        call grndm(rndm,1)
	p=100.*rndm(1)
	if(p.le.10.) go to 12271   ! 10%
	if(p.le.68.) go to 12272   ! 58%
	if(p.le.79.) go to 12273   ! 11%
	if(p.le.97.) go to 12274   ! 18%
	             go to 12275   !  3%
12271	call nucltransK(1.040,0.110,3.5e-3,0.,tclev,thlev,tdlev)
	go to 18700
12272	call nucltransK(0.830,0.110,1.8e-2,0.,tclev,thlev,tdlev)
	go to 39600
12273	call nucltransK(0.707,0.110,1.0e-1,0.,tclev,thlev,tdlev)
	go to 51900
12274	call nucltransK(0.204,0.110,9.0e-2,0.,tclev,thlev,tdlev)
	go to 10220
12275	call nucltransK(0.136,0.110,1.7e+0,0.,tclev,thlev,tdlev)
	go to 10910
c-----------------------------------------------------------------------
12000	thlev=0. 
	call nucltransK(0.178,0.110,6.0e+1,0.,tclev,thlev,tdlev)
	go to 10220
c-----------------------------------------------------------------------
11750	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.67.) go to 11751   ! 67%
	             go to 11752   ! 33%
11751	call nucltransK(0.988,0.110,3.5e-3,0.,tclev,thlev,tdlev)
	go to 18700
11752	call nucltransK(0.796,0.110,5.2e-3,0.,tclev,thlev,tdlev)
	go to 37800
c-----------------------------------------------------------------------
1169	call beta(0.968,90.,0.,0.,t)
11690	thlev=0. 
        call grndm(rndm,1)
	p=100.*rndm(1)
	if(p.le.11.0) go to 11691   ! 11.0%
	if(p.le.38.8) go to 11692   ! 27.8%
	if(p.le.84.5) go to 11693   ! 45.7%
	if(p.le.84.8) go to 11694   !  0.3%
	if(p.le.93.8) go to 11695   !  9.0%
	if(p.le.98.9) go to 11696   !  5.1%
	              go to 11697   !  1.1%
11691	call nucltransK(1.110,0.110,2.9e-3,0.1e-4,tclev,thlev,tdlev)
	go to 58000
11692	call nucltransK(0.840,0.110,1.4e-2,0.,tclev,thlev,tdlev)
	go to 32800
11693	call nucltransK(0.772,0.110,1.5e-2,0.,tclev,thlev,tdlev)
	go to 39600
11694	call nucltransK(0.649,0.110,2.4e-2,0.,tclev,thlev,tdlev)
	go to 51900
11695	call nucltransK(0.200,0.110,9.5e-2,0.,tclev,thlev,tdlev)
	go to 96900
11696	call nucltransK(0.146,0.110,1.2e+0,0.,tclev,thlev,tdlev)
	go to 10220
11697	call nucltransK(0.078,0.020,2.2e-1,0.,tclev,thlev,tdlev)
	go to 10910
c-----------------------------------------------------------------------
1154	call beta(0.983,90.,0.,0.,t)
11540	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.14.9) go to 11541   ! 14.9%
	if(p.le.25.8) go to 11542   ! 10.9%
	if(p.le.40.7) go to 11543   ! 14.9%
	if(p.le.61.4) go to 11544   ! 20.7%
	if(p.le.84.1) go to 11545   ! 22.7%
	if(p.le.93.0) go to 11546   !  8.9%
	if(p.le.97.0) go to 11547   !  4.0%
	              go to 11548   !  3.0%
11541	call nucltransK(1.154,0.110,7.5e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
11542	call nucltransK(1.096,0.110,2.8e-2,0.1e-4,tclev,thlev,tdlev)
	go to 58000
11543	call nucltransK(0.967,0.110,2.0e-2,0.,tclev,thlev,tdlev)
	go to 18700
11544	call nucltransK(0.322,0.110,5.2e-1,0.,tclev,thlev,tdlev)
	go to 83200
11545	call nucltransK(0.279,0.110,1.3e+0,0.,tclev,thlev,tdlev)
	go to 87500
11546	call nucltransK(0.185,0.110,5.4e+1,0.,tclev,thlev,tdlev)
	go to 96900
11547	call nucltransK(0.174,0.110,1.4e+0,0.,tclev,thlev,tdlev)
	go to 97900
11548	call nucltransK(0.138,0.110,4.9e+0,0.,tclev,thlev,tdlev)
	go to 10160
c-----------------------------------------------------------------------
1123	call beta(1.014,90.,0.,0.,t)
11230	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 1.4) go to 11231   !  1.4%
	if(p.le. 5.4) go to 11232   !  4.0%
	if(p.le. 5.6) go to 11233   !  0.2%
	if(p.le.73.8) go to 11234   ! 68.2%
	if(p.le.85.8) go to 11235   ! 12.0%
	if(p.le.98.1) go to 11236   ! 12.3%
	              go to 11237   !  1.9%
11231	call nucltransK(1.123,0.110,6.5e-2,0.1e-4,tclev,thlev,tdlev)
	go to 10000
11232	call nucltransK(1.065,0.110,3.2e-3,0.,tclev,thlev,tdlev)
	go to 58000
11233	call nucltransK(0.936,0.110,0.1e+0,0.,tclev,thlev,tdlev)
	go to 18700
11234	call nucltransK(0.795,0.110,1.9e-2,0.,tclev,thlev,tdlev)
	go to 32800
11235	call nucltransK(0.727,0.110,1.0e-2,0.,tclev,thlev,tdlev)
	go to 39600
11236	call nucltransK(0.154,0.110,0.2e+0,0.,tclev,thlev,tdlev)
	go to 96900
11237	call nucltransK(0.100,0.020,3.3e-1,0.,tclev,thlev,tdlev)
	go to 10220
c-----------------------------------------------------------------------
10910	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.21.) go to 10911   ! 21%
	             go to 10912   ! 79%
10911	call nucltransK(1.033,0.110,9.5e-3,0.,tclev,thlev,tdlev)
	go to 58000
10912	call nucltransK(0.904,0.110,2.6e-2,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
1060	call beta(1.077,90.,0.,0.,t)
10600	thlev=0. 
	p=100.*rndm(1)
	if(p.le.74.) go to 10601   ! 74%
	if(p.le.87.) go to 10602   ! 13%
	             go to 10603   ! 13%
10601	call nucltransK(1.002,0.110,3.5e-3,0.,tclev,thlev,tdlev)
	go to 58000
10602	call nucltransK(0.664,0.110,7.0e-3,0.,tclev,thlev,tdlev)
	go to 39600
10603	call nucltransK(0.541,0.110,1.1e-2,0.,tclev,thlev,tdlev)
	go to 51900
c-----------------------------------------------------------------------
1022	call beta(1.115,90.,0.,0.,t)
10220	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.73.) go to 10221   ! 73%
	             go to 10222   ! 27%
10221	call nucltransK(0.964,0.110,9.2e-3,0.,tclev,thlev,tdlev)
	go to 58000
10222	call nucltransK(0.836,0.110,1.4e-2,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
1016	call beta(1.121,90.,0.,0.,t)
10160	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.19.) go to 10161   ! 19%
	if(p.le.66.) go to 10162   ! 47%
	if(p.le.82.) go to 10163   ! 16%
	             go to 10164   ! 18%
10161	call nucltransK(1.017,0.110,2.4e-2,0.,tclev,thlev,tdlev)
	go to 10000
10162	call nucltransK(0.958,0.110,3.8e-3,0.,tclev,thlev,tdlev)
	go to 58000
10163	call nucltransK(0.688,0.110,2.1e-2,0.,tclev,thlev,tdlev)
	go to 32800
10164	call nucltransK(0.620,0.110,1.4e-1,0.,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
979	call beta(1.158,90.,0.,0.,t)
97900	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.35.) go to 97901   ! 35%
	             go to 97902   ! 65%
97901	call nucltransK(0.651,0.110,7.5e-3,0.,tclev,thlev,tdlev)
	go to 32800
97902	call nucltransK(0.583,0.110,9.5e-3,0.,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
969	call beta(1.168,90.,0.,0.,t)
96900	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.37.0) go to 96901   ! 37.0%
	if(p.le.98.8) go to 96902   ! 61.8%
	              go to 96903   !  1.2%
96901	call nucltransK(0.969,0.110,1.0e-2,0.,tclev,thlev,tdlev)
	go to 10000
96902	call nucltransK(0.911,0.110,1.2e-2,0.,tclev,thlev,tdlev)
	go to 58000
96903	call nucltransK(0.782,0.110,6.8e-2,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
968	call beta(1.169,90.,0.,0.,t)
96800	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.22.) go to 96801   ! 22%
	             go to 96802   ! 78%
96801	call nucltransK(0.641,0.110,1.1e-1,0.,tclev,thlev,tdlev)
	go to 32800
96802	call nucltransK(0.572,0.110,1.3e-1,0.,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
95200	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.91.) go to 95201   ! 91%
	if(p.le.94.) go to 95202   !  3%
	             go to 95203   !  6%
95201	call nucltransK(0.894,0.110,4.2e-3,0.,tclev,thlev,tdlev)
	go to 58000
95202	call nucltransK(0.624,0.110,1.2e-1,0.,tclev,thlev,tdlev)
	go to 32800
95203	call nucltransK(0.556,0.110,3.5e-2,0.,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
944	call beta(1.193,90.,0.,0.,t)
94400	thlev=0. 
	p=100.*rndm(1)
	if(p.le.42.5) go to 94401   ! 42.5%
	if(p.le.57.5) go to 94402   ! 15.0%
	              go to 94403   ! 42.5%
94401	call nucltransK(0.944,0.110,1.1e-2,0.,tclev,thlev,tdlev)
	go to 10000
94402	call nucltransK(0.888,0.110,7.5e-1,0.,tclev,thlev,tdlev)
	go to 58000
94403	call nucltransK(0.616,0.110,8.5e-3,0.,tclev,thlev,tdlev)
	go to 32800
c-----------------------------------------------------------------------
875	call beta(1.262,90.,0.,0.,t)
87500	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.15.) go to 87501   ! 15%
	if(p.le.26.) go to 87502   ! 11%
	if(p.le.60.) go to 87503   ! 34%
	             go to 87504   ! 40%
87501	call nucltransK(0.874,0.110,1.3e-2,0.,tclev,thlev,tdlev)
	go to 10000
87502	call nucltransK(0.816,0.110,0.5e+0,0.,tclev,thlev,tdlev)
	go to 58000
87503	call nucltransK(0.546,0.110,1.1e-2,0.,tclev,thlev,tdlev)
	go to 32800
87504	call nucltransK(0.479,0.110,1.4e-2,0.,tclev,thlev,tdlev)
	go to 39600
c-----------------------------------------------------------------------
83200	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 4.) go to 83201   !  4%
	if(p.le.27.) go to 83202   ! 23%
	             go to 83203   ! 73%
83201	call electron(0.721,tclev,thlev,tdlev)      ! only ec
c	call gamma(0.110,tdlev,0.,tdlev)            ! for real time
	call gamma(0.110,0.,0.,tdlev)               ! for time shift
	go to 10000
83202	call nucltransK(0.771,0.110,1.7e-2,0.,tclev,thlev,tdlev)
	go to 58000
83203	call nucltransK(0.504,0.110,1.2e-2,0.,tclev,thlev,tdlev)
	go to 32800
c-----------------------------------------------------------------------
519	call beta(1.618,90.,0.,0.,t)
51900	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.90.) go to 51901   ! 90%
	             go to 51902   ! 10%
51901	call nucltransK(0.332,0.110,4.7e-1,0.,tclev,thlev,tdlev)
	go to 18700
51902	call nucltransK(0.141,0.110,0.9e+0,0.,tclev,thlev,tdlev)
	go to 37800
c-----------------------------------------------------------------------
396	call beta(1.741,90.,0.,0.,t)
39600	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.73.) go to 39601   ! 73%
	             go to 39602   ! 27%
39601	call nucltransK(0.338,0.110,1.0e-2,0.,tclev,thlev,tdlev)
	go to 58000
39602	call nucltransK(0.209,0.110,7.9e-2,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
37800	thlev=0. 
	call nucltransK(0.191,0.110,4.2e-1,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
32800	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.47.) go to 32801   ! 47%
	             go to 32802   ! 53%
32801	call nucltransK(0.328,0.110,4.4e-2,0.,tclev,thlev,tdlev)
	go to 10000
32802	call nucltransK(0.270,0.110,3.4e-2,0.,tclev,thlev,tdlev)
	go to 58000
c-----------------------------------------------------------------------
187	call beta(1.950,90.,0.,0.,t)
18700	thlev=0.16e-9
	call nucltransK(0.129,0.020,2.7e+0,0.,tclev,thlev,tdlev)
	go to 58000
c-----------------------------------------------------------------------
58	call beta(2.079,90.,0.,0.,t)
58000	thlev=0.40e-9
	call nucltransK(0.058,0.020,1.2e+2,0.,tclev,thlev,tdlev)
c-----------------------------------------------------------------------
10000	return
	end

c***********************************************************************
+DECK,BI207.
	subroutine Bi207(tcnuc,tdnuc)
c Scheme of Bi207+Pb207m decay (Nucl. Data Sheets 70(1993)315).
c To describe the deexcitation processes in atomic shell of Pb207,
c the information of PC Nuclear Data File retrieval program and data
c base (last updated on 16-Aug-1994) was used.
c Gammas, beta+, e+e- pairs, K, L and M conversion electrons, K, L and M 
c X-rays and K and L Auger electrons are emitted.
c Accuracy in description of decay branches and deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 7.07.1995, 22.10.1995.
+SEQ,GENEVENT.
        dimension rndm(5)
        call grndm(rndm,5) 
	thnuc=0.9956150E+09
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	EbindK=0.088
	EbindL=0.015
	EbindM=0.003
	cg=1.
	npe570=0
	npe1064=0
	pdecay=100.*rndm(2)
	if(pdecay.le.99.988) go to 1
	                     go to 2
c----------------------------------------------------------------------- 
c EC to Pb207 or Pb207m
1	pec=pdecay
	if(pec.le. 7.028) go to 2340
	if(pec.le.91.210) go to 1633
	                  go to  570
c----------------------------------------------------------------------- 
c b+ to Pb207
2	call beta(0.806,-82.,0.,0.,t)
	go to 57000
c-----------------------------------------------------------------------
2340	if(rndm(3).le.0.70) then
	   call PbAtShell(88,0.,0.,t)
	else
	   call PbAtShell(15,0.,0.,t)
	end if
23400	thlev=0. 
	p=100.*rndm(4)
	if(p.le.98.2) go to 23401
	              go to 23402
23401	Egamma=1.770
	cK=4.0e-3
	cp=2.5e-4
	p=rndm(5)*(cg+cK+cp)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.cg+cK) then
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   call PbAtShell(88,0.,0.,tdlev)
	else
	   call pair(Egamma-1.022,tclev,thlev,tdlev)
	end if
	go to 57000
23402	Egamma=1.442
	cK=2.9e-3
	cp=0.2e-4
	p=rndm(5)*(cg+cK+cp)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.cg+cK) then
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   call PbAtShell(88,0.,0.,tdlev)
	else
	   call pair(Egamma-1.022,tclev,thlev,tdlev)
	end if
	go to 89800
c-----------------------------------------------------------------------
1633	if(rndm(3).le.0.70) then
	   call PbAtShell(88,0.,0.,t)
	else
	   call PbAtShell(15,0.,0.,t)
	end if
16330	thlev=0.806
	Egamma=1.064
	cK=9.88e-2
	cL=2.51e-2
	cM=0.61e-2
	p=rndm(4)*(cg+cK+cL+cM)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.cg+cK) then
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   npe1064=npfull
	   call PbAtShell(88,0.,0.,tdlev)
	else if(p.le.cg+cK+cL) then
	   call electron(Egamma-EbindL,tclev,thlev,tdlev)
	   npe1064=npfull
	   call PbAtShell(15,0.,0.,tdlev)
	else
	   call electron(Egamma-EbindM,tclev,thlev,tdlev)
	   npe1064=npfull
	   call PbAtShell(3,0.,0.,tdlev)
	end if
	go to 57000
c-----------------------------------------------------------------------
89800	thlev=0.
        call grndm(rndm,2) 
	p=100.*rndm(1)
	if(p.le.99.5) go to 89801
	              go to 89802
89801	Egamma=0.898
	cK=2.4e-2
	p=rndm(2)*(cg+cK)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   call PbAtShell(88,0.,0.,tdlev)
	end if
	return
89802	Egamma=0.328
	cK=3.5e-1
	p=rndm(2)*(cg+cK)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   call PbAtShell(88,0.,0.,tdlev)
	end if
	go to 57000
c-----------------------------------------------------------------------
570	if(rndm(3).le.0.70) then
	   call PbAtShell(88,0.,0.,t)
	else
	   call PbAtShell(15,0.,0.,t)
	end if
57000	thlev=130.5e-12
	Egamma=0.570
	cK=1.62e-2
	cL=0.45e-2
	cM=0.11e-2
        call grndm(rndm,1) 
	p=rndm(1)*(cg+cK+cL+cM)
	if(p.le.cg) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.cg+cK) then
	   call electron(Egamma-EbindK,tclev,thlev,tdlev)
	   npe570=npfull
	   call PbAtShell(88,0.,0.,tdlev)
	else if(p.le.cg+cK+cL) then
	   call electron(Egamma-EbindL,tclev,thlev,tdlev)
	   npe570=npfull
	   call PbAtShell(15,0.,0.,tdlev)
	else
	   call electron(Egamma-EbindM,tclev,thlev,tdlev)
	   npe570=npfull
	   call PbAtShell(3,0.,0.,tdlev)
	end if
	if(npe1064.eq.0 .or. npe570.eq.0) return
c-----------------------------------------------------------------------
c angular correlation between conversion electrons of 1064 and 570 keV;
c value of 0.271 for angular coefficient is taken from P.Kleinheinz
c et al., Nucl. Phys. A 93(1967)63
	angcorr=0.271
	p1064=sqrt(pmoment(1,npe1064)**2+pmoment(2,npe1064)**2+
     +             pmoment(3,npe1064)**2)
	p570=sqrt(pmoment(1,npe570)**2+pmoment(2,npe570)**2+
     +            pmoment(3,npe570)**2)
	twopi=6.2831853
3       call grndm(rndm,5) 
	phi1=twopi*rndm(1)
	ctet1=1.-2.*rndm(2)
	stet1=sqrt(1.-ctet1*ctet1)
	phi2=twopi*rndm(3)
	ctet2=1.-2.*rndm(4)
	stet2=sqrt(1.-ctet2*ctet2)
	ctet=ctet1*ctet2+stet1*stet2*cos(phi1-phi2)
	if(rndm(5)*(1.+angcorr).gt.1.+angcorr*ctet) go to 3
	pmoment(1,npe1064)=p1064*stet1*cos(phi1)
	pmoment(2,npe1064)=p1064*stet1*sin(phi1)
	pmoment(3,npe1064)=p1064*ctet1
	pmoment(1,npe570)=p570*stet2*cos(phi2)
	pmoment(2,npe570)=p570*stet2*sin(phi2)
	pmoment(3,npe570)=p570*ctet2
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,BI208.
	subroutine Bi208(tcnuc,tdnuc)
c Scheme of Bi208 decay (NDS 47(1986)797 + "Table of Isotopes", 7th ed.,
c 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 17.12.1995.
        dimension rndm(2)
	thnuc=1.161288E+13
        call grndm(rndm,2) 
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.43.6)                    Egamma=0.088 ! EC-K
	if(pdecay.gt.43.6.and.pdecay.le.83.8) Egamma=0.016 ! EC-L
	if(pdecay.gt.83.8)                    Egamma=0.004 ! EC-M
	call gamma(Egamma,0.,0.,t)
c-----------------------------------------------------------------------
2615	thlev=17.e-12
	call nucltransK(2.615,0.088,2.4e-3,4.3e-4,tclev,thlev,tdlev)
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,BI210.
	subroutine Bi210(tcnuc,tdnuc)
c Scheme of Bi210 decay ("Table of Isotopes", 7th ed., 1978).
c Three-figured labels correspond to energies of 206Tl excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 14.08.1992, 22.10.1995.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=432864.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.1.3e-4) go to 10000   !  0.00013% alfa to 206Tl
	                     go to 20000   ! 99.99987% beta to 210Po
c-----------------------------------------------------------------------
10000	palfa=100.*rndm(3)
	if(palfa.le.60.) go to 305   ! 60%
	                 go to 266   ! 40%
c-----------------------------------------------------------------------
305	call alpha(4.650,0.,0.,t)
	thlev=4.e-12
	call nucltransK(0.305,0.086,3.5e-1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
266	call alpha(4.687,0.,0.,t)
	thlev=3.e-9
	call nucltransK(0.266,0.086,1.5e-1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
20000	call beta(1.161,84.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,BI212.
	subroutine Bi212(tcnuc,tdnuc)
c Scheme of Bi212 decay ("Table of Isotopes", 7th ed., 1978).
c Two-, three- and four-figured labels correspond to energies of
c 208Tl or 212Po excited levels in keV. Beta-alfa decays to 208Pb
c are not considered (p=0.014%).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 4.08.1992, 22.10.1995.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=3636.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=rndm(2)
	if(pdecay.le.0.36) go to 10000   !  36% alfa to 208Tl
	                   go to 20000   !  64% beta to 212Po
c-----------------------------------------------------------------------
10000	palfa=100.*rndm(3)
	if(palfa.le. 1.10) go to   493   !   1.10%
	if(palfa.le. 1.25) go to   473   !   0.15%
	if(palfa.le. 2.92) go to   328   !   1.67%
	if(palfa.le.72.80) go to    40   !  69.88%
	                   go to 10001   !  27.20%
c-----------------------------------------------------------------------
493	call alpha(5.607,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 5.) go to 49301   !  5%
	if(p.le.99.) go to 49302   ! 94%
	             go to 49303   !  1%
49301	call nucltransK(0.493,0.086,2.8e-2,0.,tclev,thlev,tdlev)
	return
49302	call nucltransK(0.453,0.086,0.18,0.,tclev,thlev,tdlev)
	go to 40000
49303	call nucltransK(0.164,0.086,0.75,0.,tclev,thlev,tdlev)
	go to 32800
c-----------------------------------------------------------------------
473	call alpha(5.626,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.68.) go to 47301   ! 68%
	if(p.le.87.) go to 47302   ! 19%
	             go to 47303   ! 13%
47301	call nucltransK(0.474,0.086,0.14,0.,tclev,thlev,tdlev)
	return
47302	call nucltransK(0.434,0.086,0.14,0.,tclev,thlev,tdlev)
	go to 40000
47303	call nucltransK(0.145,0.086,2.8,0.,tclev,thlev,tdlev)
	go to 32800
c-----------------------------------------------------------------------
328	call alpha(5.769,0.,0.,t)
32800	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.29.) go to 32801   ! 29%
	             go to 32802   ! 71%
32801	call nucltransK(0.328,0.086,0.33,0.,tclev,thlev,tdlev)
	return
32802	call nucltransK(0.288,0.086,0.53,0.,tclev,thlev,tdlev)
	go to 40000
c-----------------------------------------------------------------------
40	call alpha(6.051,0.,0.,t)
40000	thlev=6.e-12
	call nucltransK(0.040,0.015,22.55,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10001	call alpha(6.090,0.,0.,t)
	return
c-----------------------------------------------------------------------
20000	pbeta=64.*rndm(3)
	if(pbeta.le. 0.660) go to  1806  !  0.660%
	if(pbeta.le. 0.687) go to  1801  !  0.027%
	if(pbeta.le. 0.937) go to  1680  !  0.250%
	if(pbeta.le. 2.837) go to  1621  !  1.900%
	if(pbeta.le. 4.337) go to  1513  !  1.500%
	if(pbeta.le. 8.737) go to   727  !  4.400%
	                    go to 20001  ! 55.263%
c-----------------------------------------------------------------------
1806	call beta(0.440,84.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.17.) go to 18061   ! 17%
	             go to 18062   ! 83%
18061	call nucltransK(1.806,0.093,2.6e-2,1.7e-4,tclev,thlev,tdlev)
	return
18062	call nucltransK(1.079,0.093,2.0e-2,0.,tclev,thlev,tdlev)
	go to 72700
c-----------------------------------------------------------------------
1801	call beta(0.445,84.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.35.) go to 18011   ! 35%
	             go to 18012   ! 65%
18011	call electron(1.708,tclev,thlev,tdlev)       ! only ec
	call gamma(0.093,0.,0.,tdlev)
	return
18012	call nucltransK(1.074,0.093,7.0e-3,0.,tclev,thlev,tdlev)
	go to 72700
c-----------------------------------------------------------------------
1680	call beta(0.566,84.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.28.) go to 16801   ! 28%
	             go to 16802   ! 72%
16801	call nucltransK(1.680,0.093,2.8e-3,1.0e-4,tclev,thlev,tdlev)
	return
16802	call nucltransK(0.952,0.093,4.5e-2,0.,tclev,thlev,tdlev)
	go to 72700
c-----------------------------------------------------------------------
1621	call beta(0.625,84.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.80.) go to 16211   ! 80%
	             go to 16212   ! 20%
16211	call nucltransK(1.621,0.093,7.0e-3,1.2e-4,tclev,thlev,tdlev)
	return
16212	call nucltransK(0.893,0.093,4.5e-2,0.,tclev,thlev,tdlev)
	go to 72700
c-----------------------------------------------------------------------
1513	call beta(0.733,84.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.22.) go to 15131   ! 22%
	             go to 15132   ! 78%
15131	call nucltransK(1.513,0.093,3.5e-3,0.7e-4,tclev,thlev,tdlev)
	return
15132	call nucltransK(0.786,0.093,4.1e-2,0.,tclev,thlev,tdlev)
	go to 72700
c-----------------------------------------------------------------------
727	call beta(1.519,84.,0.,0.,t)
72700	thlev=0. 
	call nucltransK(0.727,0.093,1.7e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
20001	call beta(2.246,84.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************

	subroutine Bi214(tcnuc,tdnuc)
c Scheme of Bi214 decay ("Table of Isotopes", 7th ed., 1978).
c Two-, three- and four-figured labels correspond to energies of
c 210Tl or 214Po excited levels in keV. Beta-alfa decays to 210Pb
c are not considered (p=2.8e-3%).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 13.08.1992, 22.10.1995.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=1182.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.0.021) go to 10000   !  0.021% alfa to 210Tl
	                    go to 20000   ! 99.979% beta to 214Po
c-----------------------------------------------------------------------
10000	palfa=100.*rndm(3)
	if(palfa.le. 5.9) go to   253   !  5.9%
	if(palfa.le.60.4) go to    63   ! 54.5%
	                  go to 10001   ! 39.6%
c-----------------------------------------------------------------------
253	call alpha(5.268,0.,0.,t)
	thlev=0. 
	call nucltransK(0.191,0.086,8.0e-2,0.,tclev,thlev,tdlev)
	go to 63000
c-----------------------------------------------------------------------
63	call alpha(5.448,0.,0.,t)
63000	thlev=0. 
	call nucltransK(0.063,0.015,2.8e-1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10001	call alpha(5.512,0.,0.,t)
	return
c-----------------------------------------------------------------------
20000	pbeta=100.*rndm(3)
	if(pbeta.le. 0.002) go to  3184   !  0.002%
	if(pbeta.le. 0.004) go to  3143   !  0.002%
	if(pbeta.le. 0.008) go to  3082   !  0.004%
	if(pbeta.le. 0.031) go to  3054   !  0.023%
	if(pbeta.le. 0.040) go to  3000   !  0.009%
	if(pbeta.le. 0.055) go to  2979   !  0.015%
	if(pbeta.le. 0.078) go to  2941   !  0.023%
	if(pbeta.le. 0.094) go to  2922   !  0.016%
	if(pbeta.le. 0.100) go to  2894   !  0.006%
	if(pbeta.le. 0.109) go to  2880   !  0.009%
	if(pbeta.le. 0.112) go to  2827   !  0.003%
	if(pbeta.le. 0.118) go to  2786   !  0.006%
	if(pbeta.le. 0.144) go to  2770   !  0.026%
	if(pbeta.le. 0.554) go to  2729   !  0.410%
	if(pbeta.le. 0.764) go to  2719   !  0.210%
	if(pbeta.le. 0.824) go to  2699   !  0.060%
	if(pbeta.le. 0.944) go to  2695   !  0.120%
	if(pbeta.le. 1.014) go to  2662   !  0.070%
	if(pbeta.le. 1.034) go to  2631   !  0.020%
	if(pbeta.le. 1.085) go to  2545   !  0.051%
	if(pbeta.le. 1.195) go to  2508   !  0.110%
	if(pbeta.le. 1.395) go to  2506   !  0.200%
	if(pbeta.le. 2.395) go to  2483   !  1.000%
	if(pbeta.le. 5.195) go to  2448   !  2.800%
	if(pbeta.le. 5.213) go to  2423   !  0.018%
	if(pbeta.le. 5.773) go to  2293   !  0.560%
	if(pbeta.le. 5.913) go to  2267   !  0.140%
	if(pbeta.le. 6.243) go to  2209   !  0.330%
	if(pbeta.le.11.743) go to  2204   !  5.500%
	if(pbeta.le.12.623) go to  2193   !  0.880%
	if(pbeta.le.13.053) go to  2148   !  0.430%
	if(pbeta.le.17.330) go to  2119   !  4.277%
	if(pbeta.le.17.470) go to  2089   !  0.140%
	if(pbeta.le.19.970) go to  2017   !  2.500%
	if(pbeta.le.21.470) go to  2011   !  1.500%
	if(pbeta.le.22.670) go to  1995   !  1.200%
	if(pbeta.le.24.270) go to  1890   !  1.600%
	if(pbeta.le.32.420) go to  1847   !  8.150%
	if(pbeta.le.50.220) go to  1765   ! 17.800%
	if(pbeta.le.50.480) go to  1743   !  0.260%
	if(pbeta.le.68.280) go to  1730   ! 17.800%
	if(pbeta.le.69.240) go to  1661   !  0.960%
	if(pbeta.le.72.540) go to  1543   !  3.300%
	if(pbeta.le.73.540) go to  1415   !  1.000%
	if(pbeta.le.80.990) go to  1378   !  7.450%
	if(pbeta.le.81.200) go to  1275   !  0.210%
	if(pbeta.le.82.200) go to   609   !  1.000%
	                    go to 20001   ! 17.800%
c-----------------------------------------------------------------------
3184	call beta(0.086,84.,0.,0.,t)
31840	thlev=0. 
	call nucltransK(3.184,0.093,4.0e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
3143	call beta(0.127,84.,0.,0.,t)
31430	thlev=0. 
	call nucltransK(3.143,0.093,4.0e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
3082	call beta(0.188,84.,0.,0.,t)
30820	thlev=0. 
	call nucltransK(3.082,0.093,4.2e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
3054	call beta(0.216,84.,0.,0.,t)
30540	thlev=0. 
	call nucltransK(3.054,0.093,4.3e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
3000	call beta(0.270,84.,0.,0.,t)
30000	thlev=0. 
	call nucltransK(3.000,0.093,4.5e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2979	call beta(0.291,84.,0.,0.,t)
29790	thlev=0. 
	call nucltransK(2.979,0.093,4.5e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2941	call beta(0.329,84.,0.,0.,t)
29410	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.7.) go to 29411   !  7%
	            go to 29412   ! 93%
29411	call nucltransK(2.940,0.093,4.5e-4,8.0e-4,tclev,thlev,tdlev)
	return
29412	call nucltransK(2.331,0.093,7.0e-4,4.6e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2922	call beta(0.348,84.,0.,0.,t)
29220	thlev=0. 
	call nucltransK(2.922,0.093,4.5e-4,8.0e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2894	call beta(0.376,84.,0.,0.,t)
28940	thlev=0. 
	call nucltransK(2.894,0.093,5.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2880	call beta(0.390,84.,0.,0.,t)
28800	thlev=0. 
	call nucltransK(2.880,0.093,5.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2827	call beta(0.443,84.,0.,0.,t)
28270	thlev=0. 
	call nucltransK(2.827,0.093,5.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2786	call beta(0.484,84.,0.,0.,t)
27860	thlev=0. 
	call nucltransK(2.786,0.093,5.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2770	call beta(0.500,84.,0.,0.,t)
27700	thlev=0. 
	call nucltransK(2.770,0.093,5.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2729	call beta(0.541,84.,0.,0.,t)
27290	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.7.) go to 27291   !  7%
	            go to 27292   ! 93%
27291	call nucltransK(1.067,0.093,1.1e-3,0.,tclev,thlev,tdlev)
	go to 16610
27292	call nucltransK(0.964,0.093,3.0e-3,0.,tclev,thlev,tdlev)
	go to 17650
c-----------------------------------------------------------------------
2719	call beta(0.551,84.,0.,0.,t)
27190	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.8) go to 27191   !  0.8%
	if(p.le.42.5) go to 27192   ! 41.7%
	              go to 27193   ! 57.5%
27191	call nucltransK(2.719,0.093,6.0e-4,7.0e-4,tclev,thlev,tdlev)
	return
27192	call nucltransK(2.110,0.093,8.5e-4,2.8e-4,tclev,thlev,tdlev)
	go to 60900
27193	call nucltransK(1.304,0.093,2.6e-2,0.1e-4,tclev,thlev,tdlev)
	go to 14150
c-----------------------------------------------------------------------
2699	call beta(0.571,84.,0.,0.,t)
26990	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.5.) go to 26991   !  5%
	            go to 26992   ! 95%
26991	call nucltransK(2.699,0.093,6.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
26992	call nucltransK(2.090,0.093,3.5e-2,2.8e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2695	call beta(0.575,84.,0.,0.,t)
26950	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.27.3) go to 26951   ! 27.3%
	              go to 26952   ! 72.7%
26951	call nucltransK(2.695,0.093,6.0e-4,7.3e-4,tclev,thlev,tdlev)
	return
26952	call nucltransK(1.317,0.093,1.8e-3,0.6e-4,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
2662	call beta(0.608,84.,0.,0.,t)
26620	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.0.4) go to 26621   !  0.4%
	             go to 26622   ! 99.6%
26621	call nucltransK(2.662,0.093,6.0e-4,7.0e-4,tclev,thlev,tdlev)
	return
26622	call nucltransK(2.053,0.093,9.0e-4,2.4e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2631	call beta(0.639,84.,0.,0.,t)
26310	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.5.) go to 26311   !  5%
	            go to 26312   ! 95%
26311	call nucltransK(2.631,0.093,6.0e-4,6.4e-4,tclev,thlev,tdlev)
	return
26312	call nucltransK(2.022,0.093,9.0e-4,2.4e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2545	call beta(0.725,84.,0.,0.,t)
25450	thlev=0. 
	call nucltransK(1.936,0.093,9.5e-4,2.8e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2508	call beta(0.762,84.,0.,0.,t)
25080	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.58.) go to 25081   ! 58%
	             go to 25082   ! 42%
25081	call nucltransK(1.899,0.093,9.5e-4,2.8e-4,tclev,thlev,tdlev)
	go to 60900
25082	call nucltransK(1.131,0.093,2.2e-3,0.1e-4,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
2506	call beta(0.764,84.,0.,0.,t)
25060	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.9) go to 25061   !  2.9%
	if(p.le.90.0) go to 25062   ! 87.1%
	              go to 25063   ! 10.0%
25061	call nucltransK(2.506,0.093,6.5e-4,5.6e-4,tclev,thlev,tdlev)
	return
25062	call nucltransK(1.896,0.093,9.5e-4,2.0e-4,tclev,thlev,tdlev)
	go to 60900
25063	call nucltransK(1.230,0.093,1.9e-3,0.3e-4,tclev,thlev,tdlev)
	go to 12750
c-----------------------------------------------------------------------
2483	call beta(0.787,84.,0.,0.,t)
24830	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.2) go to 24831   !  0.2%
	if(p.le.22.2) go to 24832   ! 20.0%
	if(p.le.66.4) go to 24833   ! 44.2%
	if(p.le.74.0) go to 24834   !  7.6%
	if(p.le.88.0) go to 24835   ! 14.0%
	              go to 24836   ! 12.0%
24831	call nucltransK(2.483,0.093,1.4e-3,4.4e-4,tclev,thlev,tdlev)
	return
24832	call nucltransK(1.873,0.093,5.0e-3,2.0e-4,tclev,thlev,tdlev)
	go to 60900
24833	call nucltransK(1.208,0.093,2.6e-2,0.2e-4,tclev,thlev,tdlev)
	go to 12750
24834	call nucltransK(1.105,0.093,1.0e-2,0.1e-4,tclev,thlev,tdlev)
	go to 13780
24835	call nucltransK(0.821,0.093,2.7e-2,0.,tclev,thlev,tdlev)
	go to 16610
24836	call nucltransK(0.753,0.093,1.0e-2,0.,tclev,thlev,tdlev)
	go to 17300
c-----------------------------------------------------------------------
2448	call beta(0.822,84.,0.,0.,t)
24480	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.55.8) go to 24481   ! 55.8%
	if(p.le.70.0) go to 24482   ! 14.2%
	if(p.le.72.0) go to 24483   !  2.0%
	if(p.le.82.1) go to 24484   ! 10.1%
	if(p.le.85.1) go to 24485   !  3.0%
	if(p.le.88.9) go to 24486   !  3.9%
	              go to 24487   ! 11.1%
24481	call nucltransK(2.448,0.093,3.0e-4,8.5e-4,tclev,thlev,tdlev)
	return
24482	call nucltransK(1.838,0.093,1.0e-3,1.8e-4,tclev,thlev,tdlev)
	go to 60900
24483	call nucltransK(1.173,0.093,6.0e-3,0.3e-4,tclev,thlev,tdlev)
	go to 12750
24484	call nucltransK(1.070,0.093,2.6e-3,0.,tclev,thlev,tdlev)
	go to 13780
24485	call nucltransK(1.032,0.093,2.6e-3,0.,tclev,thlev,tdlev)
	go to 14150
24486	call nucltransK(0.904,0.093,3.5e-3,0.,tclev,thlev,tdlev)
	go to 15430
24487	call nucltransK(0.786,0.093,3.8e-2,0.,tclev,thlev,tdlev)
	go to 16610
c-----------------------------------------------------------------------
2423	call beta(0.847,84.,0.,0.,t)
24230	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.33.) go to 24231   ! 33%
	             go to 24232   ! 67%
24231	call nucltransK(2.424,0.093,6.5e-4,4.3e-4,tclev,thlev,tdlev)
	return
24232	call nucltransK(1.814,0.093,1.0e-3,1.8e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2293	call beta(0.977,84.,0.,0.,t)
22930	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.58.) go to 22931   ! 58%
	             go to 22932   ! 42%
22931	call nucltransK(2.293,0.093,8.0e-3,3.6e-4,tclev,thlev,tdlev)
	return
22932	call nucltransK(1.684,0.093,1.2e-3,1.3e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2267	call beta(1.003,84.,0.,0.,t)
22670	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.13.) go to 22671   ! 13%
	if(p.le.67.) go to 22672   ! 54%
	             go to 22673   ! 33%
22671	call nucltransK(2.267,0.093,7.0e-4,3.4e-4,tclev,thlev,tdlev)
	return
22672	call nucltransK(1.657,0.093,1.2e-3,1.2e-4,tclev,thlev,tdlev)
	go to 60900
22673	call nucltransK(0.723,0.093,5.0e-3,0.,tclev,thlev,tdlev)
	go to 15430
c-----------------------------------------------------------------------
2209	call beta(1.061,84.,0.,0.,t)
22090	thlev=0. 
	call nucltransK(1.599,0.093,1.2e-3,1.0e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2204	call beta(1.066,84.,0.,0.,t)
22040	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.89.2) go to 22041   ! 89.2%
	if(p.le.93.9) go to 22042   !  4.7%
	if(p.le.95.6) go to 22043   !  1.7%
	if(p.le.96.4) go to 22044   !  0.8%
	if(p.le.97.9) go to 22045   !  1.5%
	              go to 22046   !  2.1%
22041	call nucltransK(2.204,0.093,2.8e-3,3.1e-4,tclev,thlev,tdlev)
	return
22042	call nucltransK(1.595,0.093,7.5e-3,1.1e-4,tclev,thlev,tdlev)
	go to 60900
22043	call nucltransK(0.826,0.093,2.8e-2,0.,tclev,thlev,tdlev)
	go to 13780
22044	call nucltransK(0.661,0.093,7.0e-2,0.,tclev,thlev,tdlev)
	go to 15430
22045	call nucltransK(0.543,0.093,1.2e-1,0.,tclev,thlev,tdlev)
	go to 16610
22046	call nucltransK(0.474,0.093,1.6e-1,0.,tclev,thlev,tdlev)
	go to 17300
c-----------------------------------------------------------------------
2193	call beta(1.077,84.,0.,0.,t)
21930	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 6.9) go to 21931   !  6.9%
	if(p.le.88.1) go to 21932   ! 81.2%
	if(p.le.93.1) go to 21933   !  5.0%
	              go to 21934   !  6.9%
21931	call nucltransK(2.193,0.093,1.8e-3,3.0e-4,tclev,thlev,tdlev)
	return
21932	call nucltransK(1.583,0.093,7.8e-3,1.1e-4,tclev,thlev,tdlev)
	go to 60900
21933	call nucltransK(0.815,0.093,4.0e-2,0.,tclev,thlev,tdlev)
	go to 13780
21934	call nucltransK(0.649,0.093,7.0e-2,0.,tclev,thlev,tdlev)
	go to 15430
c-----------------------------------------------------------------------
2148	call beta(1.122,84.,0.,0.,t)
21480	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 4.) go to 21481   !  4%
	             go to 21482   ! 96%
21481	call nucltransK(2.148,0.093,1.0e-1,2.9e-4,tclev,thlev,tdlev)
	return
21482	call nucltransK(1.539,0.093,1.3e-3,1.0e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2119	call beta(1.151,84.,0.,0.,t)
21190	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.27.7) go to 21191   ! 27.7%
	if(p.le.78.2) go to 21192   ! 50.5%
	if(p.le.79.1) go to 21193   !  0.9%
	if(p.le.90.0) go to 21194   ! 10.9%
	              go to 21195   ! 10.0%
21191	call nucltransK(2.119,0.093,2.9e-3,2.9e-4,tclev,thlev,tdlev)
	return
21192	call nucltransK(1.509,0.093,9.0e-3,0.9e-4,tclev,thlev,tdlev)
	go to 60900
21193	call nucltransK(0.741,0.093,5.0e-2,0.,tclev,thlev,tdlev)
	go to 13780
21194	call nucltransK(0.703,0.093,4.0e-2,0.,tclev,thlev,tdlev)
	go to 14150
21195	call nucltransK(0.389,0.093,2.6e-1,0.,tclev,thlev,tdlev)
	go to 17300
c-----------------------------------------------------------------------
2089	call beta(1.181,84.,0.,0.,t)
20890	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.48.) go to 20891   ! 48%
	             go to 20892   ! 52%
20891	call nucltransK(1.479,0.093,1.5e-3,0.9e-4,tclev,thlev,tdlev)
	go to 60900
20892	call nucltransK(0.711,0.093,5.5e-3,0.,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
2017	call beta(1.253,84.,0.,0.,t)
20170	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.0.17) go to 20171   !  0.17%
	              go to 20172   ! 99.83%
20171	call electron(1.923,tclev,thlev,tdlev)          ! only ec
	call gamma(0.093,0.,0.,tdlev)
	return
20172	call nucltransK(1.408,0.093,4.0e-3,0.2e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
2011	call beta(1.259,84.,0.,0.,t)
20110	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 3.3) go to 20111   !  3.3%
	if(p.le.96.0) go to 20112   ! 92.7%
	              go to 20113   !  4.0%
20111	call nucltransK(2.011,0.093,9.0e-4,2.4e-4,tclev,thlev,tdlev)
	return
20112	call nucltransK(1.402,0.093,1.6e-3,0.8e-4,tclev,thlev,tdlev)
	go to 60900
20113	call nucltransK(0.633,0.093,6.5e-3,0.,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
1995	call beta(1.275,84.,0.,0.,t)
19950	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.66.) go to 19951   ! 66%
	             go to 19952   ! 34%
19951	call nucltransK(1.385,0.093,1.6e-3,0.3e-4,tclev,thlev,tdlev)
	go to 60900
19952	call nucltransK(0.720,0.093,1.7e-2,0.,tclev,thlev,tdlev)
	go to 12750
c-----------------------------------------------------------------------
1890	call beta(1.380,84.,0.,0.,t)
18900	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.6.) go to 18901   !  6%
	            go to 18902   ! 94%
18901	call nucltransK(1.890,0.093,2.4e-3,2.0e-4,tclev,thlev,tdlev)
	return
18902	call nucltransK(1.281,0.093,1.0e-2,0.5e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1847	call beta(1.423,84.,0.,0.,t)
18470	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.25.5) go to 18471   ! 25.5%
	if(p.le.97.4) go to 18472   ! 71.9%
	if(p.le.98.4) go to 18473   !  1.0%
	              go to 18474   !  1.6%
18471	call nucltransK(1.847,0.093,3.4e-3,1.8e-4,tclev,thlev,tdlev)
	return
18472	call nucltransK(1.238,0.093,1.0e-2,0.4e-4,tclev,thlev,tdlev)
	go to 60900
18473	call nucltransK(0.573,0.093,8.0e-3,0.,tclev,thlev,tdlev)
	go to 12750
18474	call nucltransK(0.470,0.093,1.6e-1,0.,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
1765	call beta(1.505,84.,0.,0.,t)
17650	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.88.5) go to 17651   ! 88.5%
	if(p.le.98.0) go to 17652   !  9.5%
	              go to 17653   !  2.0%
17651	call nucltransK(1.765,0.093,4.0e-3,1.5e-4,tclev,thlev,tdlev)
	return
17652	call nucltransK(1.155,0.093,1.1e-2,0.3e-4,tclev,thlev,tdlev)
	go to 60900
17653	call nucltransK(0.387,0.093,2.8e-1,0.,tclev,thlev,tdlev)
	go to 13780
c-----------------------------------------------------------------------
1743	call beta(1.527,84.,0.,0.,t)
17430	thlev=0. 
	call nucltransK(1.134,0.093,2.2e-3,0.1e-4,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1730	call beta(1.540,84.,0.,0.,t)
17300	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.16.2) go to 17301   ! 16.2%
	if(p.le.88.3) go to 17302   ! 82.1%
	              go to 17303   !  1.7%
17301	call nucltransK(1.730,0.093,1.7e-3,0.8e-4,tclev,thlev,tdlev)
	return
17302	call nucltransK(1.120,0.093,1.3e-2,0.1e-4,tclev,thlev,tdlev)
	go to 60900
17303	call nucltransK(0.455,0.093,1.3e-2,0.,tclev,thlev,tdlev)
	go to 12750
c-----------------------------------------------------------------------
1661	call beta(1.609,84.,0.,0.,t)
16610	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.79.) go to 16611   ! 79%
	             go to 16612   ! 21%
16611	call nucltransK(1.661,0.093,2.3e-3,0.6e-4,tclev,thlev,tdlev)
	return
16612	call nucltransK(1.052,0.093,2.0e-2,0.,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1543	call beta(1.727,84.,0.,0.,t)
15430	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.10.) go to 15431   ! 10%
	             go to 15432   ! 90%
15431	call nucltransK(1.543,0.093,3.2e-3,1.0e-4,tclev,thlev,tdlev)
	return
15432	call nucltransK(0.934,0.093,1.9e-2,0.,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1415	call beta(1.855,84.,0.,0.,t)
14150	thlev=0.2e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.22.) go to 14151   ! 22%
	             go to 14152   ! 78%
14151	call electron(1.323,tclev,thlev,tdlev)      ! only ec
	call gamma(0.093,0.,0.,tdlev)
	return
14152	call nucltransK(0.806,0.093,1.1e-2,0.,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1378	call beta(1.892,84.,0.,0.,t)
13780	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.45.) go to 13781   ! 45%
	             go to 13782   ! 55%
13781	call nucltransK(1.378,0.093,3.0e-3,0.2e-4,tclev,thlev,tdlev)
	return
13782	call nucltransK(0.768,0.093,1.2e-2,0.,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
1275	call beta(1.995,84.,0.,0.,t)
12750	thlev=0. 
	call nucltransK(0.665,0.093,4.5e-3,0.,tclev,thlev,tdlev)
	go to 60900
c-----------------------------------------------------------------------
609	call beta(2.661,84.,0.,0.,t)
60900	thlev=0. 
	call nucltransK(0.609,0.093,2.1e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
20001	call beta(3.270,84.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,CA48.

	subroutine Ca48(tcnuc,tdnuc)
c Scheme of Ca48 beta decay ("Table of Isotopes", 8th ed., 1996).
c Beta decay is supposed to ground state of Sc48. For half-life, its
c limit 6.0e18 y is accepted. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 07.05.1998.
        dimension rndm(1)
        call grndm(rndm,1) 
	thnuc=1.893404e26
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	call beta(0.278,21.,0.,0.,t)
	return
	end

c***********************************************************************
+DECK,CO60.
	subroutine Co60(tcnuc,tdnuc)
c Scheme of Co60 decay ("Table of Isotopes", 7th ed., 1978).
c Four-figured labels correspond to energies of 60Ni excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 3.08.1992, 22.10.1995.
        dimension rndm(4)
        call grndm(rndm,4) 
	thnuc=0.1663356e+09
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.99.880) go to 2506   ! 99.880%
	                    go to 1333   !  0.120%
c-----------------------------------------------------------------------
2506	call beta(0.318,28.,0.,0.,t)
	thlev=3.3e-12
	p=100.*rndm(3)
	if(p.le.99.992) go to 25061   ! 99.992%
	                go to 25062   !  0.008%
25061	call nucltransK(1.173,0.008,1.5e-4,0.1e-4,tclev,thlev,tdlev)
	go to 13330
25062	call nucltransK(0.347,0.008,6.5e-3,0.,tclev,thlev,tdlev)
	go to 2159
c-----------------------------------------------------------------------
2159	thlev=0. 
	p=100.*rndm(4)
	if(p.le.13.) go to 21591      ! 13%
	             go to 21592      ! 87%
21591	call nucltransK(2.159,0.008,5.5e-5,3.5e-4,tclev,thlev,tdlev)
	return
21592	call nucltransK(0.826,0.008,3.5e-4,0.,tclev,thlev,tdlev)
	go to 13330
c-----------------------------------------------------------------------
1333	call beta(1.491,28.,0.,0.,t)
13330	thlev=0.73e-12
	call nucltransK(1.333,0.008,1.1e-4,0.3e-4,tclev,thlev,tdlev)
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,CS137.
	subroutine Cs137(tcnuc,tdnuc)
c Model for scheme of Cs137 decay (Nucl. Data Sheets 72(1994)355)
c (really it is model for (Cs137 + Ba137m)-decay but not the model of 
c Cs137 decay alone). 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 31.08.1992, 11.07.1995, 06.11.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=0.9489110E+09
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.94.4) go to 1
	                   go to 2
c-----------------------------------------------------------------------
1	call beta(0.514,56.,0.,0.,t)
	thlev=153.06
	call nucltransKL(0.662,0.037,0.9e-1,0.006,0.2e-1,0.,
     +                   tdlev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
2	call beta(1.176,56.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,EU147.
	subroutine Eu147(tcnuc,tdnuc)
c Scheme of 147Eu decay ("Table of Isotopes", 7th ed., 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 10.03.1996.
        dimension rndm(3)
        call grndm(rndm,1) 
	thnuc=1.9008e6
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le. 0.002) then
	   call alpha(2.908,0.,0.,t)
	   return
	endif
	if(pdecay.le. 0.202) go to  1646
	if(pdecay.le. 0.502) go to  1549
	if(pdecay.le. 0.552) go to  1471
	if(pdecay.le. 1.552) go to  1453
	if(pdecay.le. 2.052) go to  1318
	if(pdecay.le. 2.252) go to  1304
	if(pdecay.le.11.352) go to  1077
	if(pdecay.le.11.582) go to  1063
	if(pdecay.le.17.102) go to  1054
	if(pdecay.le.17.182) go to  1007
	if(pdecay.le.35.382) go to   799
	if(pdecay.le.57.592) go to   197
	if(pdecay.le.76.792) go to   121
	                     go to 10000
c-----------------------------------------------------------------------
1646	call gamma(0.049,0.,0.,t)
	thlev=0.
	call nucltransK(1.449,0.047,5.0e-4,0.8e-4,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
1549	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.31.) go to 15491
	             go to 15492
15491	call nucltransK(1.427,0.047,5.0e-4,0.7e-4,tclev,thlev,tdlev)
	go to 12100
15492	call nucltransK(0.750,0.047,1.8e-3,0.,tclev,thlev,tdlev)
	go to 79900
c-----------------------------------------------------------------------
1471	call gamma(0.049,0.,0.,t)
	thlev=0.
	call nucltransK(1.350,0.047,5.5e-4,0.6e-4,tclev,thlev,tdlev)
	go to 12100
c-----------------------------------------------------------------------
1453	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.24.) go to 14531
	             go to 14532
14531	call nucltransK(1.332,0.047,5.5e-4,0.5e-4,tclev,thlev,tdlev)
	go to 12100
14532	call nucltransK(1.256,0.047,6.0e-4,0.4e-4,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
1318	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.22.8) go to 13181
	if(p.le.68.3) go to 13182
	              go to 13183
13181	call nucltransK(1.318,0.047,5.5e-4,0.5e-4,tclev,thlev,tdlev)
	return
13182	call nucltransK(1.197,0.047,6.5e-4,0.3e-4,tclev,thlev,tdlev)
	go to 12100
13183	call nucltransK(1.120,0.047,7.5e-4,0.2e-4,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
1304	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.15.) go to 13041
	             go to 13042
13041	call nucltransK(1.107,0.047,7.5e-4,0.1e-4,tclev,thlev,tdlev)
	go to 19700
13042	call nucltransK(0.505,0.047,4.0e-3,0.,tclev,thlev,tdlev)
	go to 79900
c-----------------------------------------------------------------------
1077	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.62.5) go to 10771
	if(p.le.98.5) go to 10772
	              go to 10773
10771	call nucltransK(1.077,0.047,4.3e-3,0.1e-4,tclev,thlev,tdlev)
	return
10772	call nucltransK(0.956,0.047,5.5e-3,0.,tclev,thlev,tdlev)
	go to 12100
10773	call nucltransK(0.880,0.047,9.5e-3,0.,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
1063	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.40.) go to 10631
	             go to 10632
10631	call nucltransK(1.063,0.047,1.1e-3,0.1e-4,tclev,thlev,tdlev)
	return
10632	call nucltransK(0.942,0.047,1.3e-3,0.,tclev,thlev,tdlev)
	go to 12100
c-----------------------------------------------------------------------
1054	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.57.) go to 10541
	             go to 10542
10541	call nucltransK(0.933,0.047,1.3e-3,0.,tclev,thlev,tdlev)
	go to 12100
10542	call nucltransK(0.857,0.047,1.6e-3,0.,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
1007	call gamma(0.049,0.,0.,t)
	thlev=0.
	p=100.*rndm(3)
	if(p.le.45.) go to 10071
	             go to 10072
10071	call nucltransK(0.886,0.047,1.5e-3,0.,tclev,thlev,tdlev)
	go to 12100
10072	call nucltransK(0.809,0.047,9.0e-3,0.,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
799	call gamma(0.049,0.,0.,t)
79900	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.24.2) go to 79901
	if(p.le.71.7) go to 79902
	              go to 79903
79901	call nucltransK(0.799,0.047,4.5e-3,0.,tclev,thlev,tdlev)
	return
79902	call nucltransK(0.678,0.047,1.4e-2,0.,tclev,thlev,tdlev)
	go to 12100
79903	call nucltransK(0.601,0.047,1.8e-2,0.,tclev,thlev,tdlev)
	go to 19700
c-----------------------------------------------------------------------
197	p=100.*rndm(3)
	if(p.le.99.4) call gamma(0.049,0.,0.,t)
	if(p.gt.99.4) call beta(0.511,-62.,0.,0.,t)
19700	thlev=1.3e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.97.2) go to 19701
	              go to 19702
19701	call nucltransK(0.197,0.047,2.2e-1,0.,tclev,thlev,tdlev)
	return
19702	call nucltransK(0.076,0.047,3.5e-0,0.,tclev,thlev,tdlev)
	go to 12100
c-----------------------------------------------------------------------
121	p=100.*rndm(3)
	if(p.le.99.5) call gamma(0.049,0.,0.,t)
	if(p.gt.99.5) call beta(0.587,-62.,0.,0.,t)
12100	thlev=0.77e-9
	call nucltransK(0.121,0.047,1.1e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	p=100.*rndm(3)
	if(p.le.99.3) call gamma(0.049,0.,0.,t)
	if(p.gt.99.3) call beta(0.708,-62.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,EU152.

	subroutine Eu152(tcnuc,tdnuc)
c Scheme of 152Eu decay ("Table of Isotopes", 8th ed., 1996 and
c NDS 79(1996)1).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 16.11.1996.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=4.273413e8
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.72.08) go to 1      ! EC to 152Sm
	                    go to 2      ! b- to 152Gd
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
1	call gamma(0.049,0.,0.,tdlev)
	pec=100.*rndm(3)
	if(pec.le. 0.071) go to 1769
	if(pec.le. 0.118) go to 1757
	if(pec.le. 0.180) go to 1730
	if(pec.le. 1.416) go to 1650
	if(pec.le. 1.445) go to 1613
	if(pec.le. 4.292) go to 1579
	if(pec.le.38.592) go to 1530
	if(pec.le.39.883) go to 1372
	if(pec.le.40.744) go to 1293
	if(pec.le.64.629) go to 1234
	if(pec.le.94.069) go to 1086
	if(pec.le.94.152) go to 1041
	if(pec.le.94.471) go to 1023
	if(pec.le.96.179) go to  810
	if(pec.le.97.359) go to  366
	                  go to  122
c-----------------------------------------------------------------------
1769	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.15.21) go to 17691
	if(p.le.25.62) go to 17692
	if(p.le.65.65) go to 17693
	if(p.le.88.07) go to 17694
	if(p.le.99.28) go to 17695
	               go to 17696
17691	call nucltransK(1.769,0.047,8.0e-4,0.9e-4,tclev,thlev,tdlev)
	return
17692	call nucltransK(1.647,0.047,4.0e-4,0.5e-4,tclev,thlev,tdlev)
	go to 122
17693	call nucltransK(0.959,0.047,2.5e-3,0.,tclev,thlev,tdlev)
	go to 810
17694	call nucltransK(0.806,0.047,1.4e-3,0.,tclev,thlev,tdlev)
	go to 963
17695	call nucltransK(0.536,0.047,1.0e-2,0.,tclev,thlev,tdlev)
	go to 1234
17696	call nucltransK(0.239,0.047,1.0e-1,0.,tclev,thlev,tdlev)
	go to 1530
c-----------------------------------------------------------------------
1757	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.43) go to 17571
	if(p.le.14.38) go to 17572
	if(p.le.81.12) go to 17573
	if(p.le.85.46) go to 17574
	               go to 17575
17571	call nucltransK(1.635,0.047,3.5e-4,0.5e-4,tclev,thlev,tdlev)
	go to 122
17572	call nucltransK(1.390,0.047,5.0e-4,0.2e-4,tclev,thlev,tdlev)
	go to 366
17573	call nucltransK(0.671,0.047,1.1e-2,0.,tclev,thlev,tdlev)
	go to 1086
17574	call nucltransK(0.523,0.047,3.5e-3,0.,tclev,thlev,tdlev)
	go to 1234
17575	call nucltransK(0.386,0.047,7.0e-3,0.,tclev,thlev,tdlev)
	go to 1372
c-----------------------------------------------------------------------
1730	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.11.26) go to 17301
	if(p.le.66.17) go to 17302
	if(p.le.79.35) go to 17303
	               go to 17304
17301	call nucltransK(1.608,0.047,4.0e-4,0.8e-4,tclev,thlev,tdlev)
	go to 122
17302	call nucltransK(1.364,0.047,5.3e-4,0.3e-4,tclev,thlev,tdlev)
	go to 366
17303	call nucltransK(0.644,0.047,2.2e-3,0.,tclev,thlev,tdlev)
	go to 1086
17304	call nucltransK(0.496,0.047,4.0e-3,0.,tclev,thlev,tdlev)
	go to 1234
c-----------------------------------------------------------------------
1650	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.30.00) go to 16501
	if(p.le.31.85) go to 16502
	if(p.le.34.02) go to 16503
	if(p.le.86.93) go to 16504
	if(p.le.99.47) go to 16505
	               go to 16506
16501	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 122
16502	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 810
16503	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 963
16504	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 1086
16505	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 1234
16506	call nucltransK(0.769,0.047,8.0e-3,0.,tclev,thlev,tdlev)
	go to 1293
c-----------------------------------------------------------------------
1613	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.71.28) go to 16131
	if(p.le.94.09) go to 16132
	               go to 16133
16131	call nucltransK(0.906,0.047,2.8e-3,0.,tclev,thlev,tdlev)
	go to 707
16132	call nucltransK(0.572,0.047,2.8e-3,0.,tclev,thlev,tdlev)
	go to 1041
16133	call nucltransK(0.391,0.047,7.0e-3,0.,tclev,thlev,tdlev)
	go to 1222
c-----------------------------------------------------------------------
1579	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.24.04) go to 15791
	if(p.le.92.32) go to 15792
	if(p.le.96.69) go to 15793
	if(p.le.97.13) go to 15794
	if(p.le.98.06) go to 15795
	if(p.le.98.26) go to 15796
	if(p.le.99.79) go to 15797
	               go to 15798
15791	call nucltransK(1.458,0.047,4.5e-4,0.4e-4,tclev,thlev,tdlev)
	go to 122
15792	call nucltransK(1.213,0.047,6.2e-4,0.1e-4,tclev,thlev,tdlev)
	go to 366
15793	call nucltransK(0.769,0.047,1.5e-3,0.,tclev,thlev,tdlev)
	go to 810
15794	call nucltransK(0.616,0.047,7.0e-3,0.,tclev,thlev,tdlev)
	go to 963
15795	call nucltransK(0.557,0.047,3.0e-3,0.,tclev,thlev,tdlev)
	go to 1023
15796	call nucltransK(0.538,0.047,9.5e-3,0.,tclev,thlev,tdlev)
	go to 1041
15797	call nucltransK(0.494,0.047,4.0e-3,0.,tclev,thlev,tdlev)
	go to 1086
15798	call nucltransK(0.208,0.047,3.5e-2,0.,tclev,thlev,tdlev)
	go to 1372
c-----------------------------------------------------------------------
1530	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.84.56) go to 15301
	if(p.le.84.80) go to 15302
	if(p.le.85.32) go to 15303
	if(p.le.86.97) go to 15304
	if(p.le.98.22) go to 15305
	               go to 15306
15301	call nucltransK(1.408,0.047,5.0e-4,0.3e-4,tclev,thlev,tdlev)
	go to 122
15302	call nucltransK(0.719,0.047,2.0e-3,0.,tclev,thlev,tdlev)
	go to 810
15303	call nucltransK(0.566,0.047,1.4e-2,0.,tclev,thlev,tdlev)
	go to 963
15304	call nucltransK(0.489,0.047,1.4e-2,0.,tclev,thlev,tdlev)
	go to 1041
15305	call nucltransK(0.444,0.047,5.7e-3,0.,tclev,thlev,tdlev)
	go to 1086
15306	call nucltransK(0.296,0.047,1.5e-2,0.,tclev,thlev,tdlev)
	go to 1234
c-----------------------------------------------------------------------
1372	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.19.62) go to 13721
	if(p.le.88.70) go to 13722
	if(p.le.90.70) go to 13723
	if(p.le.90.81) go to 13724
	if(p.le.98.82) go to 13725
	               go to 13726
13721	call nucltransK(1.250,0.047,1.6e-3,0.1e-4,tclev,thlev,tdlev)
	go to 122
13722	call nucltransK(1.005,0.047,2.6e-3,0.,tclev,thlev,tdlev)
	go to 366
13723	call nucltransK(0.665,0.047,6.3e-3,0.,tclev,thlev,tdlev)
	go to 707
13724	call nucltransK(0.561,0.047,3.5e-3,0.,tclev,thlev,tdlev)
	go to 810
13725	call nucltransK(0.331,0.047,1.2e-2,0.,tclev,thlev,tdlev)
	go to 1041
13726	call nucltransK(0.286,0.047,6.6e-2,0.,tclev,thlev,tdlev)
	go to 1086
c-----------------------------------------------------------------------
1293	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.16.39) go to 12931
	if(p.le.22.12) go to 12932
	if(p.le.64.58) go to 12933
	if(p.le.68.91) go to 12934
	if(p.le.88.66) go to 12935
	if(p.le.89.98) go to 12936
	               go to 12937
12931	call nucltransK(1.293,0.047,1.3e-3,0.1e-4,tclev,thlev,tdlev)
	return
12932	call nucltransK(1.171,0.047,1.6e-3,0.,tclev,thlev,tdlev)
	go to 122
12933	call nucltransK(0.926,0.047,3.0e-3,0.,tclev,thlev,tdlev)
	go to 366
12934	call nucltransK(0.482,0.047,2.0e-2,0.,tclev,thlev,tdlev)
	go to 810
12935	call nucltransK(0.329,0.047,1.2e-2,0.,tclev,thlev,tdlev)
	go to 963
12936	call nucltransK(0.270,0.047,7.9e-2,0.,tclev,thlev,tdlev)
	go to 1023
12937	call nucltransK(0.252,0.047,2.3e-2,0.,tclev,thlev,tdlev)
	go to 1041
c-----------------------------------------------------------------------
1234	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.76.33) go to 12341
	if(p.le.99.76) go to 12342
	if(p.le.99.78) go to 12343
	               go to 12344
12341	call nucltransK(1.112,0.047,2.0e-3,0.2e-4,tclev,thlev,tdlev)
	go to 122
12342	call nucltransK(0.867,0.047,3.5e-3,0.,tclev,thlev,tdlev)
	go to 366
12343	call nucltransK(0.423,0.047,2.7e-2,0.,tclev,thlev,tdlev)
	go to 810
12344	call nucltransK(0.148,0.047,5.8e-1,0.,tclev,thlev,tdlev)
	go to 1086
c-----------------------------------------------------------------------
1222	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.80.65) go to 12221
	               go to 12222
12221	call nucltransK(0.855,0.047,1.6e-3,0.,tclev,thlev,tdlev)
	go to 366
12222	call nucltransK(0.515,0.047,3.7e-3,0.,tclev,thlev,tdlev)
	go to 707
c-----------------------------------------------------------------------
1086	thlev=0.85e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.40.36) go to 10861
	if(p.le.98.77) go to 10862
	if(p.le.99.86) go to 10863
	               go to 10864
10861	call nucltransK(1.086,0.047,2.1e-3,0.,tclev,thlev,tdlev)
	return
10862	call nucltransK(0.964,0.047,2.7e-3,0.,tclev,thlev,tdlev)
	go to 122
10863	call nucltransK(0.719,0.047,5.2e-3,0.,tclev,thlev,tdlev)
	go to 366
10864	call nucltransK(0.275,0.047,1.0e-1,0.,tclev,thlev,tdlev)
	go to 810
c-----------------------------------------------------------------------
1041	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.71.23) go to 10411
	               go to 10412
10411	call nucltransK(0.919,0.047,1.2e-3,0.,tclev,thlev,tdlev)
	go to 122
10412	call nucltransK(0.675,0.047,2.3e-3,0.,tclev,thlev,tdlev)
	go to 366
c-----------------------------------------------------------------------
1023	thlev=6.7e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.35.73) go to 10231
	if(p.le.91.56) go to 10232
	if(p.le.92.40) go to 10233
	               go to 10234
10231	call nucltransK(0.901,0.047,3.1e-3,0.,tclev,thlev,tdlev)
	go to 122
10232	call nucltransK(0.656,0.047,5.7e-2,0.,tclev,thlev,tdlev)
	go to 366
10233	call nucltransK(0.316,0.047,4.8e-2,0.,tclev,thlev,tdlev)
	go to 707
10234	call nucltransK(0.213,0.047,1.7e-1,0.,tclev,thlev,tdlev)
	go to 810
c-----------------------------------------------------------------------
963	thlev=28.2e-15
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.45.143) go to 96301
	if(p.le.99.994) go to 96302
	if(p.le.99.995) go to 96303
	                go to 96304
96301	call nucltransK(0.963,0.047,1.1e-3,0.,tclev,thlev,tdlev)
	return
96302	call nucltransK(0.842,0.047,1.4e-3,0.,tclev,thlev,tdlev)
	go to 122
96303	call nucltransK(0.279,0.047,1.8e-2,0.,tclev,thlev,tdlev)
	go to 685
96304	call nucltransK(0.153,0.047,8.7e-2,0.,tclev,thlev,tdlev)
	go to 810
c-----------------------------------------------------------------------
810	thlev=7.2e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.21.66) go to 81001
	if(p.le.78.06) go to 81002
	if(p.le.99.21) go to 81003
	               go to 81004
81001	call nucltransK(0.810,0.047,4.0e-3,0.,tclev,thlev,tdlev)
	return
81002	call nucltransK(0.689,0.047,4.3e-2,0.,tclev,thlev,tdlev)
	go to 122
81003	call nucltransK(0.444,0.047,1.8e-2,0.,tclev,thlev,tdlev)
	go to 366
81004	call nucltransK(0.126,0.047,1.0e-0,0.,tclev,thlev,tdlev)
	go to 685
c-----------------------------------------------------------------------
707	thlev=10.1e-12
	call nucltransK(0.340,0.047,3.8e-4,0.,tclev,thlev,tdlev)
	go to 366
c-----------------------------------------------------------------------
685	thlev=6.2e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 1.43) go to 68501
	               go to 68502
68501	call electron(0.638,tclev,thlev,tdlev)
	call gamma(0.047,0.,0.,tdlev)
	return
68502	call nucltransK(0.563,0.047,9.5e-3,0.,tclev,thlev,tdlev)
	go to 122
c-----------------------------------------------------------------------
366	thlev=57.7e-12
	call nucltransK(0.245,0.047,1.1e-1,0.,tclev,thlev,tdlev)
	go to 122
c-----------------------------------------------------------------------
122	thlev=1.428e-9
	call nucltransK(0.122,0.047,1.2e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
2	pbeta=100.*rndm(3)
	if(pbeta.le. 0.071) go to  1692
	if(pbeta.le. 6.421) go to  1643
	if(pbeta.le. 6.778) go to  1606
	if(pbeta.le.15.339) go to  1434
	if(pbeta.le.15.981) go to  1318
	if(pbeta.le.16.063) go to  1282
	if(pbeta.le.65.291) go to  1123
	if(pbeta.le.66.325) go to  1109
	if(pbeta.le.67.395) go to   931
	if(pbeta.le.70.748) go to   755
	                    go to   344
c-----------------------------------------------------------------------
1692	call beta(0.126,64.,0.,0.,t)
16920	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.84.03) go to 16921
	               go to 16922
16921	call nucltransK(1.348,0.050,1.5e-3,0.2e-4,tclev,thlev,tdlev)
	go to 34400
16922	call nucltransK(0.937,0.050,3.2e-3,0.,tclev,thlev,tdlev)
	go to 75500
c-----------------------------------------------------------------------
1643	call beta(0.175,64.,0.,0.,t)
16430	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.89.21) go to 16431
	if(p.le.94.47) go to 16432
	if(p.le.96.83) go to 16433
	if(p.le.99.75) go to 16434
	if(p.le.99.76) go to 16435
	               go to 16436
16431	call nucltransK(1.299,0.050,7.5e-4,0.3e-4,tclev,thlev,tdlev)
	go to 34400
16432	call nucltransK(0.713,0.050,2.2e-3,0.,tclev,thlev,tdlev)
	go to 93100
16433	call nucltransK(0.534,0.050,4.5e-3,0.,tclev,thlev,tdlev)
	go to 11090
16434	call nucltransK(0.520,0.050,1.8e-2,0.,tclev,thlev,tdlev)
	go to 11230
16435	call nucltransK(0.325,0.050,1.3e-2,0.,tclev,thlev,tdlev)
	go to 13180
16436	call nucltransK(0.209,0.050,4.0e-2,0.,tclev,thlev,tdlev)
	go to 14340
c-----------------------------------------------------------------------
1606	call beta(0.212,64.,0.,0.,t)
16060	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 7.64) go to 16061
	if(p.le.40.86) go to 16062
	if(p.le.72.09) go to 16063
	if(p.le.91.36) go to 16064
	if(p.le.95.35) go to 16065
	if(p.le.99.99) go to 16066
	               go to 16067
16061	call nucltransK(1.606,0.050,1.2e-3,0.5e-4,tclev,thlev,tdlev)
	return
16062	call nucltransK(1.261,0.050,2.7e-3,0.5e-4,tclev,thlev,tdlev)
	go to 34400
16063	call nucltransK(0.990,0.050,3.0e-3,0.,tclev,thlev,tdlev)
	go to 61500
16064	call nucltransK(0.675,0.050,7.6e-3,0.,tclev,thlev,tdlev)
	go to 93100
16065	call nucltransK(0.558,0.050,1.1e-2,0.,tclev,thlev,tdlev)
	go to 10480
16066	call nucltransK(0.496,0.050,9.7e-2,0.,tclev,thlev,tdlev)
	go to 11090
16067	call nucltransK(0.482,0.050,5.0e-3,0.,tclev,thlev,tdlev)
	go to 11230
c-----------------------------------------------------------------------
1434	call beta(0.384,64.,0.,0.,t)
14340	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.71.07) go to 14341
	if(p.le.90.54) go to 14342
	if(p.le.96.87) go to 14343
	if(p.le.99.99) go to 14344
	               go to 14345
14341	call nucltransK(1.090,0.050,2.3e-3,0.,tclev,thlev,tdlev)
	go to 34400
14342	call nucltransK(0.679,0.050,6.9e-3,0.,tclev,thlev,tdlev)
	go to 75500
14343	call nucltransK(0.503,0.050,1.4e-2,0.,tclev,thlev,tdlev)
	go to 93100
14344	call nucltransK(0.325,0.050,6.3e-2,0.,tclev,thlev,tdlev)
	go to 11090
14345	call nucltransK(0.115,0.050,1.4e-0,0.,tclev,thlev,tdlev)
	go to 13180
c-----------------------------------------------------------------------
1318	call beta(0.500,64.,0.,0.,t)
13180	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 6.87) go to 13181
	if(p.le.62.27) go to 13182
	if(p.le.76.12) go to 13183
	if(p.le.77.39) go to 13184
	if(p.le.84.76) go to 13185
	if(p.le.92.35) go to 13186
	if(p.le.92.79) go to 13187
	               go to 13188
13181	call nucltransK(1.318,0.050,1.6e-3,0.1e-4,tclev,thlev,tdlev)
	return
13182	call nucltransK(0.974,0.050,5.6e-3,0.,tclev,thlev,tdlev)
	go to 34400
13183	call nucltransK(0.703,0.050,6.0e-3,0.,tclev,thlev,tdlev)
	go to 61500
13184	call nucltransK(0.563,0.050,1.0e-2,0.,tclev,thlev,tdlev)
	go to 75500
13185	call nucltransK(0.388,0.050,4.5e-1,0.,tclev,thlev,tdlev)
	go to 93100
13186	call nucltransK(0.271,0.050,8.4e-2,0.,tclev,thlev,tdlev)
	go to 10480
13187	call nucltransK(0.209,0.050,5.0e-1,0.,tclev,thlev,tdlev)
	go to 11090
13188	call nucltransK(0.195,0.050,4.9e-2,0.,tclev,thlev,tdlev)
	go to 11230
c-----------------------------------------------------------------------
1282	call beta(0.536,64.,0.,0.,t)
12820	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.58.41) go to 12821
	if(p.le.98.13) go to 12822
	               go to 12823
12821	call nucltransK(0.527,0.050,9.4e-2,0.,tclev,thlev,tdlev)
	go to 75500
12822	call nucltransK(0.352,0.050,3.8e-2,0.,tclev,thlev,tdlev)
	go to 93100
12823	call nucltransK(0.172,0.050,3.7e-1,0.,tclev,thlev,tdlev)
	go to 11090
c-----------------------------------------------------------------------
1123	call beta(0.695,64.,0.,0.,t)
11230	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.93.11) go to 11231
	if(p.le.99.26) go to 11232
	               go to 11233
11231	call nucltransK(0.779,0.050,1.9e-3,0.,tclev,thlev,tdlev)
	go to 34400
11232	call nucltransK(0.368,0.050,9.7e-3,0.,tclev,thlev,tdlev)
	go to 75500
11233	call nucltransK(0.193,0.050,5.0e-2,0.,tclev,thlev,tdlev)
	go to 93100
c-----------------------------------------------------------------------
1109	call beta(0.709,64.,0.,0.,t)
11090	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.50.00) go to 11091
	if(p.le.97.50) go to 11092
	               go to 11093
11091	call nucltransK(1.109,0.050,2.2e-3,0.,tclev,thlev,tdlev)
	return
11092	call nucltransK(0.765,0.050,5.2e-3,0.,tclev,thlev,tdlev)
	go to 34400
11093	call nucltransK(0.494,0.050,1.5e-2,0.,tclev,thlev,tdlev)
	go to 61500
c-----------------------------------------------------------------------
10480	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.88) go to 10481
	if(p.le.65.79) go to 10482
	if(p.le.83.77) go to 10483
	               go to 10484
10481	call electron(0.998,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	return
10482	call nucltransK(0.703,0.050,6.0e-3,0.,tclev,thlev,tdlev)
	go to 34400
10483	call electron(0.383,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	go to 61500
10484	call nucltransK(0.117,0.050,1.4e-0,0.,tclev,thlev,tdlev)
	go to 93100
c-----------------------------------------------------------------------
931	call beta(0.887,64.,0.,0.,t)
93100	thlev=7.3e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.12.40) go to 93101
	if(p.le.90.91) go to 93102
	if(p.le.99.55) go to 93103
	               go to 93104
93101	call nucltransK(0.931,0.050,3.2e-3,0.,tclev,thlev,tdlev)
	return
93102	call nucltransK(0.586,0.050,2.4e-2,0.,tclev,thlev,tdlev)
	go to 34400
93103	call nucltransK(0.315,0.050,5.2e-2,0.,tclev,thlev,tdlev)
	go to 61500
93104	call nucltransK(0.175,0.050,3.5e-1,0.,tclev,thlev,tdlev)
	go to 75500
c-----------------------------------------------------------------------
755	call beta(1.063,64.,0.,0.,t)
75500	thlev=7.3e-12
	call nucltransK(0.411,0.050,2.4e-2,0.,tclev,thlev,tdlev)
	go to 34400
c-----------------------------------------------------------------------
61500	thlev=37.e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.11.35) go to 61501
	               go to 61502
61501	call electron(0.565,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	return
61502	call nucltransK(0.271,0.050,8.3e-2,0.,tclev,thlev,tdlev)
	go to 34400
c-----------------------------------------------------------------------
344	call beta(1.474,64.,0.,0.,t)
34400	thlev=31.9e-12
	call nucltransK(0.344,0.050,4.0e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,EU154.

	subroutine Eu154(tcnuc,tdnuc)
c Scheme of 154Eu decay ("Table of Isotopes", 8th ed., 1996 and
c NDS 69(1993)507).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 13.11.1996.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=2.711670e8
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.0.020) go to 1      !  0.020% EC to 154Sm
	                    go to 2      ! 99.980% b- to 154Gd
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
1	call gamma(0.049,0.,0.,tdlev)
	if(pdecay.le.0.005) go to 267
	                    go to  82
c-----------------------------------------------------------------------
267	thlev=172.e-12
	call nucltransK(0.185,0.047,2.7e-1,0.,tclev,thlev,tdlev)
	go to 82
c-----------------------------------------------------------------------
82	thlev=3.02e-9
	call nucltransK(0.082,0.047,4.9+0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
2	pbeta=100.*rndm(3)
	if(pbeta.le. 0.019) go to  1839
	if(pbeta.le. 0.087) go to  1797
	if(pbeta.le.28.587) go to  1720
	if(pbeta.le.29.417) go to  1661
	if(pbeta.le.29.564) go to  1646
	if(pbeta.le.31.174) go to  1617
	if(pbeta.le.31.271) go to  1560
	if(pbeta.le.31.571) go to  1531
	if(pbeta.le.31.679) go to  1418
	if(pbeta.le.67.879) go to  1398
	if(pbeta.le.68.599) go to  1264
	if(pbeta.le.68.909) go to  1252
	if(pbeta.le.85.610) go to  1128
	if(pbeta.le.89.110) go to   996
	if(pbeta.le.89.810) go to   815
	if(pbeta.le.90.000) go to   371
	                    go to   123
c-----------------------------------------------------------------------
1839	call beta(0.130,64.,0.,0.,t)
18390	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 4.0) go to 18391
	if(p.le. 6.8) go to 18392
	if(p.le.38.1) go to 18393
	if(p.le.87.8) go to 18394
	if(p.le.94.0) go to 18395
	              go to 18396
18391	call nucltransK(1.839,0.050,1.0e-3,1.0e-4,tclev,thlev,tdlev)
	return
18392	call nucltransK(1.717,0.050,1.1e-3,0.7e-4,tclev,thlev,tdlev)
	go to 12300
18393	call nucltransK(1.023,0.050,3.8e-3,0.,tclev,thlev,tdlev)
	go to 81500
18394	call nucltransK(0.790,0.050,5.0e-3,0.,tclev,thlev,tdlev)
	go to 10480
18395	call nucltransK(0.193,0.050,2.8e-1,0.,tclev,thlev,tdlev)
	go to 16460
18396	call nucltransK(0.063,0.050,1.4e+1,0.,tclev,thlev,tdlev)
	go to 17750
c-----------------------------------------------------------------------
1797	call beta(0.172,64.,0.,0.,t)
17970	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.4) go to 17971
	if(p.le. 4.0) go to 17972
	if(p.le.15.3) go to 17973
	if(p.le.58.7) go to 17974
	if(p.le.77.0) go to 17975
	if(p.le.82.0) go to 17976
	if(p.le.91.6) go to 17977
	if(p.le.99.9) go to 17978
	              go to 17979
17971	call nucltransK(1.674,0.050,5.0e-4,0.9e-4,tclev,thlev,tdlev)
	go to 12300
17972	call nucltransK(1.426,0.050,6.0e-4,0.4e-4,tclev,thlev,tdlev)
	go to 37100
17973	call nucltransK(0.982,0.050,1.2e-3,0.,tclev,thlev,tdlev)
	go to 81500
17974	call nucltransK(0.801,0.050,1.8e-3,0.,tclev,thlev,tdlev)
	go to 99600
17975	call nucltransK(0.669,0.050,2.5e-3,0.,tclev,thlev,tdlev)
	go to 11280
17976	call nucltransK(0.556,0.050,1.1e-2,0.,tclev,thlev,tdlev)
	go to 12410
17977	call nucltransK(0.533,0.050,4.0e-3,0.,tclev,thlev,tdlev)
	go to 12640
17978	call nucltransK(0.393,0.050,3.0e-2,0.,tclev,thlev,tdlev)
	go to 14040
17979	call nucltransK(0.266,0.050,2.0e-2,0.,tclev,thlev,tdlev)
	go to 15310
c-----------------------------------------------------------------------
17750	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.19.6) go to 17751
	if(p.le.62.3) go to 17752
	if(p.le.79.4) go to 17753
	if(p.le.88.4) go to 17754
	if(p.le.92.2) go to 17755
	if(p.le.98.7) go to 17756
	              go to 17757
17751	call nucltransK(1.776,0.050,1.0e-3,0.8e-4,tclev,thlev,tdlev)
	return
17752	call nucltransK(1.652,0.050,1.6e-3,0.6e-4,tclev,thlev,tdlev)
	go to 12300
17753	call nucltransK(1.405,0.050,1.4e-3,0.2e-4,tclev,thlev,tdlev)
	go to 37100
17754	call nucltransK(1.095,0.050,2.3e-3,0.,tclev,thlev,tdlev)
	go to 68100
17755	call nucltransK(0.960,0.050,3.0e-3,0.,tclev,thlev,tdlev)
	go to 81500
17756	call nucltransK(0.728,0.050,6.0e-3,0.,tclev,thlev,tdlev)
	go to 10480
17757	call nucltransK(0.648,0.050,1.4e-2,0.,tclev,thlev,tdlev)
	go to 11280
c-----------------------------------------------------------------------
1720	call beta(0.249,64.,0.,0.,t)
17200	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 6.272) go to 17201
	if(p.le. 9.404) go to 17202
	if(p.le.79.950) go to 17203
	if(p.le.97.361) go to 17204
	if(p.le.98.150) go to 17205
	if(p.le.98.362) go to 17206
	if(p.le.98.594) go to 17207
	if(p.le.98.629) go to 17208
	if(p.le.98.665) go to 17209
	if(p.le.98.674) go to 17210
	if(p.le.99.513) go to 17211
	if(p.le.99.986) go to 17212
	                go to 17213
17201	call nucltransK(1.596,0.050,5.0e-4,0.7e-4,tclev,thlev,tdlev)
	go to 12300
17202	call nucltransK(0.904,0.050,1.4e-3,0.,tclev,thlev,tdlev)
	go to 81500
17203	call nucltransK(0.723,0.050,2.2e-3,0.,tclev,thlev,tdlev)
	go to 99600
17204	call nucltransK(0.592,0.050,3.3e-3,0.,tclev,thlev,tdlev)
	go to 11280
17205	call nucltransK(0.478,0.050,1.6e-2,0.,tclev,thlev,tdlev)
	go to 12410
17206	call nucltransK(0.468,0.050,3.5e-2,0.,tclev,thlev,tdlev)
	go to 12520
17207	call nucltransK(0.322,0.050,9.0e-2,0.,tclev,thlev,tdlev)
	go to 13980
17208	call nucltransK(0.305,0.050,9.5e-2,0.,tclev,thlev,tdlev)
	go to 14140
17209	call nucltransK(0.301,0.050,1.6e-2,0.,tclev,thlev,tdlev)
	go to 14180
17210	call nucltransK(0.209,0.050,3.0e-1,0.,tclev,thlev,tdlev)
	go to 15100
17211	call nucltransK(0.188,0.050,5.5e-2,0.,tclev,thlev,tdlev)
	go to 15310
17212	call nucltransK(0.160,0.050,4.5e-1,0.,tclev,thlev,tdlev)
	go to 15600
17213	call nucltransK(0.058,0.050,1.2e-0,0.,tclev,thlev,tdlev)
	go to 16610
c-----------------------------------------------------------------------
1661	call beta(0.308,64.,0.,0.,t)
16610	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 6.03) go to 16611
	if(p.le. 8.84) go to 16612
	if(p.le.75.84) go to 16613
	if(p.le.79.11) go to 16614
	if(p.le.89.76) go to 16615
	if(p.le.94.78) go to 16616
	if(p.le.95.18) go to 16617
	if(p.le.98.45) go to 16618
	               go to 16619
16611	call nucltransK(1.538,0.050,1.2e-3,0.4e-4,tclev,thlev,tdlev)
	go to 12300
16612	call nucltransK(1.290,0.050,1.8e-3,0.1e-4,tclev,thlev,tdlev)
	go to 37100
16613	call nucltransK(0.845,0.050,4.0e-3,0.,tclev,thlev,tdlev)
	go to 81500
16614	call nucltransK(0.665,0.050,7.0e-3,0.,tclev,thlev,tdlev)
	go to 99600
16615	call nucltransK(0.613,0.050,1.2e-2,0.,tclev,thlev,tdlev)
	go to 10480
16616	call nucltransK(0.533,0.050,1.2e-2,0.,tclev,thlev,tdlev)
	go to 11280
16617	call nucltransK(0.420,0.050,1.4e-1,0.,tclev,thlev,tdlev)
	go to 12410
16618	call nucltransK(0.397,0.050,3.5e-2,0.,tclev,thlev,tdlev)
	go to 12640
16619	call nucltransK(0.130,0.050,1.0e-0,0.,tclev,thlev,tdlev)
	go to 15310
c-----------------------------------------------------------------------
1646	call beta(0.323,64.,0.,0.,t)
16460	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 1.26) go to 16461
	if(p.le. 2.57) go to 16462
	if(p.le. 3.97) go to 16463
	if(p.le. 6.77) go to 16464
	if(p.le.51.79) go to 16465
	if(p.le.56.52) go to 16466
	if(p.le.82.63) go to 16467
	if(p.le.84.79) go to 16468
	if(p.le.89.70) go to 16469
	if(p.le.91.41) go to 16470
	if(p.le.95.37) go to 16471
	if(p.le.99.02) go to 16472
	               go to 16473
16461	call nucltransK(1.523,0.050,1.2e-3,0.4e-4,tclev,thlev,tdlev)
	go to 12300
16462	call nucltransK(1.275,0.050,1.8e-3,0.1e-4,tclev,thlev,tdlev)
	go to 37100
16463	call nucltransK(0.928,0.050,3.5e-3,0.,tclev,thlev,tdlev)
	go to 71800
16464	call nucltransK(0.830,0.050,5.7e-3,0.,tclev,thlev,tdlev)
	go to 81500
16465	call nucltransK(0.650,0.050,7.3e-3,0.,tclev,thlev,tdlev)
	go to 99600
16466	call nucltransK(0.598,0.050,1.4e-2,0.,tclev,thlev,tdlev)
	go to 10480
16467	call nucltransK(0.518,0.050,1.3e-2,0.,tclev,thlev,tdlev)
	go to 11280
16468	call nucltransK(0.394,0.050,8.5e-3,0.,tclev,thlev,tdlev)
	go to 12520
16469	call nucltransK(0.382,0.050,3.4e-2,0.,tclev,thlev,tdlev)
	go to 12640
16470	call nucltransK(0.368,0.050,9.0e-3,0.,tclev,thlev,tdlev)
	go to 12770
16471	call nucltransK(0.352,0.050,3.5e-2,0.,tclev,thlev,tdlev)
	go to 12940
16472	call nucltransK(0.242,0.050,3.5e-2,0.,tclev,thlev,tdlev)
	go to 14040
16473	call nucltransK(0.228,0.050,1.4e-1,0.,tclev,thlev,tdlev)
	go to 14180
c-----------------------------------------------------------------------
1617	call beta(0.352,64.,0.,0.,t)
16170	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.43.76) go to 16171
	if(p.le.97.79) go to 16172
	if(p.le.97.80) go to 16173
	if(p.le.98.37) go to 16174
	if(p.le.99.00) go to 16175
	if(p.le.99.43) go to 16176
	if(p.le.99.73) go to 16177
	if(p.le.99.85) go to 16178
	               go to 16179
16171	call nucltransK(1.494,0.050,5.6e-4,0.5e-4,tclev,thlev,tdlev)
	go to 12300
16172	call nucltransK(1.246,0.050,7.6e-4,0.2e-4,tclev,thlev,tdlev)
	go to 37100
16173	call nucltransK(0.801,0.050,1.8e-3,0.,tclev,thlev,tdlev)
	go to 81500
16174	call nucltransK(0.621,0.050,2.8e-3,0.,tclev,thlev,tdlev)
	go to 99600
16175	call nucltransK(0.569,0.050,3.5e-3,0.,tclev,thlev,tdlev)
	go to 10480
16176	call nucltransK(0.488,0.050,5.0e-3,0.,tclev,thlev,tdlev)
	go to 11280
16177	call nucltransK(0.481,0.050,5.0e-3,0.,tclev,thlev,tdlev)
	go to 11360
16178	call nucltransK(0.375,0.050,4.0e-2,0.,tclev,thlev,tdlev)
	go to 12410
16179	call nucltransK(0.219,0.050,2.0e-1,0.,tclev,thlev,tdlev)
	go to 13980
c-----------------------------------------------------------------------
1560	call beta(0.409,64.,0.,0.,t)
15600	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.90.61) go to 15601
	if(p.le.90.62) go to 15602
	if(p.le.92.94) go to 15603
	if(p.le.98.83) go to 15604
	               go to 15605
15601	call nucltransK(1.189,0.050,1.1e-3,0.1e-4,tclev,thlev,tdlev)
	go to 37100
15602	call nucltransK(0.563,0.050,6.0e-2,0.,tclev,thlev,tdlev)
	go to 99600
15603	call nucltransK(0.296,0.050,1.6e-2,0.,tclev,thlev,tdlev)
	go to 12640
15604	call nucltransK(0.283,0.050,1.7e-2,0.,tclev,thlev,tdlev)
	go to 12770
15605	call nucltransK(0.163,0.050,5.0e-1,0.,tclev,thlev,tdlev)
	go to 13980
c-----------------------------------------------------------------------
1531	call beta(0.438,64.,0.,0.,t)
15310	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.99) go to 15311
	if(p.le. 4.80) go to 15312
	if(p.le.12.06) go to 15313
	if(p.le.52.17) go to 15314
	if(p.le.82.25) go to 15315
	if(p.le.90.87) go to 15316
	if(p.le.91.69) go to 15317
	if(p.le.95.70) go to 15318
	if(p.le.96.26) go to 15319
	if(p.le.96.75) go to 15320
	if(p.le.98.55) go to 15321
	if(p.le.99.59) go to 15322
	               go to 15323
15311	call nucltransK(1.531,0.050,1.1e-3,0.4e-4,tclev,thlev,tdlev)
	return
15312	call nucltransK(1.408,0.050,3.7e-3,0.2e-4,tclev,thlev,tdlev)
	go to 12300
15313	call nucltransK(1.161,0.050,2.2e-3,0.1e-4,tclev,thlev,tdlev)
	go to 37100
15314	call nucltransK(0.851,0.050,3.9e-3,0.,tclev,thlev,tdlev)
	go to 68100
15315	call nucltransK(0.716,0.050,1.3e-2,0.,tclev,thlev,tdlev)
	go to 81500
15316	call nucltransK(0.535,0.050,2.5e-2,0.,tclev,thlev,tdlev)
	go to 99600
15317	call nucltransK(0.484,0.050,1.6e-2,0.,tclev,thlev,tdlev)
	go to 10480
15318	call nucltransK(0.404,0.050,2.8e-2,0.,tclev,thlev,tdlev)
	go to 11280
15319	call nucltransK(0.290,0.050,1.8e-2,0.,tclev,thlev,tdlev)
	go to 12410
15320	call nucltransK(0.280,0.050,1.9e-2,0.,tclev,thlev,tdlev)
	go to 12520
15321	call nucltransK(0.267,0.050,8.0e-2,0.,tclev,thlev,tdlev)
	go to 12640
15322	call nucltransK(0.238,0.050,1.2e-1,0.,tclev,thlev,tdlev)
	go to 12940
15323	call nucltransK(0.117,0.050,2.0e-1,0.,tclev,thlev,tdlev)
	go to 14140
c-----------------------------------------------------------------------
15100	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.20.) go to 15101
	             go to 15102
15101	call nucltransK(1.510,0.050,6.0e-4,0.5e-4,tclev,thlev,tdlev)
	return
15102	call nucltransK(1.387,0.050,6.5e-4,0.3e-4,tclev,thlev,tdlev)
	go to 12300
c-----------------------------------------------------------------------
1418	call beta(0.551,64.,0.,0.,t)
14180	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.11.51) go to 14181
	if(p.le.20.34) go to 14182
	if(p.le.68.31) go to 14183
	if(p.le.69.27) go to 14184
	if(p.le.90.86) go to 14185
	if(p.le.91.87) go to 14186
	if(p.le.95.71) go to 14187
	if(p.le.96.56) go to 14188
	if(p.le.97.71) go to 14189
	if(p.le.98.30) go to 14190
	if(p.le.98.94) go to 14191
	if(p.le.99.45) go to 14192
	               go to 14193
14181	call nucltransK(1.418,0.050,1.4e-3,0.2e-4,tclev,thlev,tdlev)
	return
14182	call nucltransK(1.295,0.050,1.6e-3,0.1e-4,tclev,thlev,tdlev)
	go to 12300
14183	call nucltransK(1.047,0.050,2.5e-3,0.,tclev,thlev,tdlev)
	go to 37100
14184	call nucltransK(0.737,0.050,5.5e-3,0.,tclev,thlev,tdlev)
	go to 68100
14185	call nucltransK(0.603,0.050,3.8e-2,0.,tclev,thlev,tdlev)
	go to 81500
14186	call nucltransK(0.422,0.050,1.4e-1,0.,tclev,thlev,tdlev)
	go to 99600
14187	call nucltransK(0.371,0.050,3.2e-2,0.,tclev,thlev,tdlev)
	go to 10480
14188	call nucltransK(0.290,0.050,6.5e-2,0.,tclev,thlev,tdlev)
	go to 11280
14189	call nucltransK(0.236,0.050,1.2e-1,0.,tclev,thlev,tdlev)
	go to 11820
14190	call nucltransK(0.177,0.050,6.0e-2,0.,tclev,thlev,tdlev)
	go to 12410
14191	call nucltransK(0.167,0.050,7.0e-2,0.,tclev,thlev,tdlev)
	go to 12520
14192	call nucltransK(0.124,0.050,1.2e-0,0.,tclev,thlev,tdlev)
	go to 12940
14193	call nucltransK(0.123,0.050,1.2e-0,0.,tclev,thlev,tdlev)
	go to 12960
c-----------------------------------------------------------------------
14140	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.21.22) go to 14141
	if(p.le.97.01) go to 14142
	if(p.le.99.68) go to 14143
	if(p.le.99.79) go to 14144
	               go to 14145
14141	call nucltransK(1.414,0.050,6.1e-4,0.4e-4,tclev,thlev,tdlev)
	return
14142	call nucltransK(1.291,0.050,7.2e-4,0.2e-4,tclev,thlev,tdlev)
	go to 12300
14143	call nucltransK(0.599,0.050,3.5e-3,0.,tclev,thlev,tdlev)
	go to 81500
14144	call nucltransK(0.167,0.050,4.0e-1,0.,tclev,thlev,tdlev)
	go to 12520
14145	call nucltransK(0.120,0.050,1.8e-1,0.,tclev,thlev,tdlev)
	go to 12940
c-----------------------------------------------------------------------
14040	thlev=0. 
	call nucltransK(1.033,0.050,1.1e-3,0.,tclev,thlev,tdlev)
	go to 37100
c-----------------------------------------------------------------------
1398	call beta(0.571,64.,0.,0.,t)
13980	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.96.877) go to 13981
	if(p.le.99.338) go to 13982
	if(p.le.99.876) go to 13983
	if(p.le.99.896) go to 13984
	if(p.le.99.902) go to 13985
	if(p.le.99.929) go to 13986
	                go to 13987
13981	call nucltransK(1.274,0.050,7.4e-4,0.2e-4,tclev,thlev,tdlev)
	go to 12300
13982	call nucltransK(0.582,0.050,3.4e-3,0.,tclev,thlev,tdlev)
	go to 81500
13983	call nucltransK(0.401,0.050,7.0e-2,0.,tclev,thlev,tdlev)
	go to 99600
13984	call nucltransK(0.270,0.050,2.2e-2,0.,tclev,thlev,tdlev)
	go to 11280
13985	call nucltransK(0.260,0.050,2.3e-2,0.,tclev,thlev,tdlev)
	go to 11360
13986	call nucltransK(0.156,0.050,9.0e-2,0.,tclev,thlev,tdlev)
	go to 12410
13987	call nucltransK(0.146,0.050,9.5e-2,0.,tclev,thlev,tdlev)
	go to 12520
c-----------------------------------------------------------------------
12960	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.73) go to 12961
	if(p.le.73.72) go to 12962
	if(p.le.74.45) go to 12963
	if(p.le.78.83) go to 12964
	               go to 12965
12961	call electron(1.245,tclev,thlev,tdlev)         ! only ec
	call gamma(0.050,0.,0.,tdlev)
	return
12962	call nucltransK(1.173,0.050,2.2e-3,0.,tclev,thlev,tdlev)
	go to 12300
12963	call electron(0.565,tclev,thlev,tdlev)         ! only ec
	call gamma(0.050,0.,0.,tdlev)
	go to 68100
12964	call nucltransK(0.480,0.050,1.6e-2,0.,tclev,thlev,tdlev)
	go to 81500
12965	call nucltransK(0.299,0.050,6.0e-2,0.,tclev,thlev,tdlev)
	go to 99600
c-----------------------------------------------------------------------
12940	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.51) go to 12941
	if(p.le.47.79) go to 12942
	if(p.le.83.25) go to 12943
	               go to 12944
12941	call nucltransK(1.294,0.050,1.8e-3,0.1e-4,tclev,thlev,tdlev)
	return
12942	call nucltransK(1.171,0.050,2.2e-3,0.1e-4,tclev,thlev,tdlev)
	go to 12300
12943	call nucltransK(0.923,0.050,3.5e-3,0.,tclev,thlev,tdlev)
	go to 37100
12944	call nucltransK(0.112,0.050,1.7e-0,0.,tclev,thlev,tdlev)
	go to 11820
c-----------------------------------------------------------------------
12770	thlev=0. 
	call nucltransK(0.906,0.050,1.4e-3,0.,tclev,thlev,tdlev)
	go to 37100
c-----------------------------------------------------------------------
1264	call beta(0.705,64.,0.,0.,t)
12640	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.30.09) go to 12641
	if(p.le.95.92) go to 12642
	if(p.le.97.76) go to 12643
	               go to 12644
12641	call nucltransK(1.141,0.050,2.1e-3,0.,tclev,thlev,tdlev)
	go to 12300
12642	call nucltransK(0.893,0.050,3.7e-3,0.,tclev,thlev,tdlev)
	go to 37100
12643	call nucltransK(0.546,0.050,1.2e-2,0.,tclev,thlev,tdlev)
	go to 71800
12644	call nucltransK(0.267,0.050,9.5e-2,0.,tclev,thlev,tdlev)
	go to 99600
c-----------------------------------------------------------------------
1252	call beta(0.717,64.,0.,0.,t)
12520	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 3.76) go to 12521
	if(p.le.80.51) go to 12522
	               go to 12523
12521	call nucltransK(1.252,0.050,3.5e-3,0.,tclev,thlev,tdlev)
	return
12522	call nucltransK(1.129,0.050,9.1e-4,0.1e-4,tclev,thlev,tdlev)
	go to 12300
12523	call nucltransK(0.881,0.050,1.5e-3,0.,tclev,thlev,tdlev)
	go to 37100
c-----------------------------------------------------------------------
12410	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.54.62) go to 12411
	if(p.le.99.02) go to 12412
	if(p.le.99.68) go to 12413
	               go to 12414
12411	call nucltransK(1.241,0.050,7.7e-4,0.2e-4,tclev,thlev,tdlev)
	return
12412	call nucltransK(1.118,0.050,9.3e-4,0.1e-4,tclev,thlev,tdlev)
	go to 12300
12413	call nucltransK(0.561,0.050,4.0e-3,0.,tclev,thlev,tdlev)
	go to 68100
12414	call nucltransK(0.426,0.050,7.0e-3,0.,tclev,thlev,tdlev)
	go to 81500
c-----------------------------------------------------------------------
11820	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.21) go to 11821
	if(p.le.84.00) go to 11822
	if(p.le.84.84) go to 11823
	               go to 11824
11821	call electron(1.132,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	return
11822	call nucltransK(1.059,0.050,2.5e-3,0.,tclev,thlev,tdlev)
	go to 12300
11823	call electron(0.451,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	go to 68100
11824	call nucltransK(0.367,0.050,3.3e-2,0.,tclev,thlev,tdlev)
	go to 81500
c-----------------------------------------------------------------------
11360	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.71.94) go to 11361
	               go to 11362
11361	call nucltransK(1.136,0.050,2.2e-3,0.,tclev,thlev,tdlev)
	return
11362	call nucltransK(1.013,0.050,2.8e-3,0.,tclev,thlev,tdlev)
	go to 12300
c-----------------------------------------------------------------------
1128	call beta(0.841,64.,0.,0.,t)
11280	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.79.629) go to 11281
	if(p.le.99.855) go to 11282
	if(p.le.99.938) go to 11283
	if(p.le.99.987) go to 11284
	                go to 11285
11281	call nucltransK(1.005,0.050,2.8e-3,0.,tclev,thlev,tdlev)
	go to 12300
11282	call nucltransK(0.757,0.050,5.2e-3,0.,tclev,thlev,tdlev)
	go to 37100
11283	call nucltransK(0.312,0.050,5.5e-2,0.,tclev,thlev,tdlev)
	go to 81500
11284	call nucltransK(0.132,0.050,9.5e-1,0.,tclev,thlev,tdlev)
	go to 99600
11285	call nucltransK(0.080,0.050,6.0e-0,0.,tclev,thlev,tdlev)
	go to 10480
c-----------------------------------------------------------------------
10480	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.23.98) go to 10481
	if(p.le.86.75) go to 10482
	if(p.le.90.58) go to 10483
	               go to 10484
10481	call nucltransK(0.925,0.050,3.3e-3,0.,tclev,thlev,tdlev)
	go to 12300
10482	call nucltransK(0.677,0.050,5.1e-2,0.,tclev,thlev,tdlev)
	go to 37100
10483	call nucltransK(0.330,0.050,4.5e-2,0.,tclev,thlev,tdlev)
	go to 71800
10484	call nucltransK(0.232,0.050,1.4e-1,0.,tclev,thlev,tdlev)
	go to 81500
c-----------------------------------------------------------------------
996	call beta(0.973,64.,0.,0.,t)
99600	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.46.43) go to 99601
	if(p.le.98.59) go to 99602
	if(p.le.99.95) go to 99603
	if(p.le.99.98) go to 99604
	               go to 99605
99601	call nucltransK(0.996,0.050,2.8e-3,0.,tclev,thlev,tdlev)
	return
99602	call nucltransK(0.873,0.050,3.7e-3,0.,tclev,thlev,tdlev)
	go to 12300
99603	call nucltransK(0.625,0.050,8.0e-3,0.,tclev,thlev,tdlev)
	go to 37100
99604	call nucltransK(0.315,0.050,5.2e-2,0.,tclev,thlev,tdlev)
	go to 68100
99605	call nucltransK(0.181,0.050,3.5e-1,0.,tclev,thlev,tdlev)
	go to 81500
c-----------------------------------------------------------------------
815	call beta(1.154,64.,0.,0.,t)
81500	thlev=6.9e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.17.86) go to 81501
	if(p.le.80.18) go to 81502
	if(p.le.99.75) go to 81503
	               go to 81504
81501	call nucltransK(0.816,0.050,4.3e-3,0.,tclev,thlev,tdlev)
	return
81502	call nucltransK(0.692,0.050,4.6e-2,0.,tclev,thlev,tdlev)
	go to 12300
81503	call nucltransK(0.444,0.050,1.9e-2,0.,tclev,thlev,tdlev)
	go to 37100
81504	call nucltransK(0.135,0.050,8.7e-1,0.,tclev,thlev,tdlev)
	go to 68100
c-----------------------------------------------------------------------
71800	thlev=7.8e-12
	call nucltransK(0.347,0.050,3.9e-2,0.,tclev,thlev,tdlev)
	go to 37100
c-----------------------------------------------------------------------
68100	thlev=4.0e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.06) go to 68101
	               go to 68102
68101	call electron(0.631,tclev,thlev,tdlev)
	call gamma(0.050,0.,0.,tdlev)
	return
68102	call nucltransK(0.558,0.050,1.1e-2,0.,tclev,thlev,tdlev)
	go to 12300
c-----------------------------------------------------------------------
371	call beta(1.598,64.,0.,0.,t)
37100	thlev=45.2e-12
	call nucltransK(0.248,0.050,1.1e-1,0.,tclev,thlev,tdlev)
	go to 12300
c-----------------------------------------------------------------------
123	call beta(1.846,64.,0.,0.,t)
12300	thlev=1.186e-9
	call nucltransK(0.123,0.050,1.2e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,GD146.

	subroutine Gd146(tcnuc,tdnuc)
c Scheme of 146Gd decay ("Table of Isotopes", 7th ed., 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 10.03.1996.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=4.173e6
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le. 0.3) go to 806
	if(pdecay.le. 0.8) go to 743
	if(pdecay.le.77.2) go to 385
	                   go to 230
c-----------------------------------------------------------------------
806	call gamma(0.049,0.,0.,t)
80600	thlev=0.
	p=100.*rndm(3)
	if(p.le.36.) go to 80601
	             go to 80602
80601	call nucltransK(0.576,0.049,1.8e-2,0.,tclev,thlev,tdlev)
	go to 23000
80602	call nucltransK(0.421,0.049,4.5e-2,0.,tclev,thlev,tdlev)
	go to 38500
c-----------------------------------------------------------------------
743	call gamma(0.049,0.,0.,t)
74300	thlev=0.
	call nucltransK(0.743,0.049,1.0e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
385	p=100.*rndm(3)
	if(p.le.99.91) call gamma(0.049,0.,0.,t)
	if(p.gt.99.91) call beta(0.343,-63.,0.,0.,t)
38500	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.0.4) go to 38501
	             go to 38502
38501	call nucltransK(0.269,0.049,8.0e-2,0.,tclev,thlev,tdlev)
	go to 11500
38502	call nucltransK(0.155,0.049,6.5e-1,0.,tclev,thlev,tdlev)
	go to 23000
c-----------------------------------------------------------------------
230	call gamma(0.049,0.,0.,t)
23000	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.0.2) go to 23001
	             go to 23002
23001	call nucltransK(0.230,0.049,1.4e-1,0.,tclev,thlev,tdlev)
	return
23002	call nucltransK(0.115,0.049,1.5e-0,0.,tclev,thlev,tdlev)
	go to 11500
c-----------------------------------------------------------------------
11500	thlev=0.
	call nucltransK(0.115,0.049,1.5e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,HF182

	subroutine Hf182(tcnuc,tdnuc)
c Scheme of 182Hf decay ("Table of Isotopes", 7th ed., 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 5.03.1996.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=2.84011e14
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	go to 270
c-----------------------------------------------------------------------
270	call beta(0.160,73.,0.,0.,t)
	thlev=1.2e-9
	p=100.*rndm(2)
	if(p.le.91.77) go to 27001
	if(p.le.92.00) go to 27002
	               go to 27003
27001	call nucltransK(0.270,0.067,3.1e-1,0.,tclev,thlev,tdlev)
	return
27002	call nucltransK(0.173,0.067,9.5e-2,0.,tclev,thlev,tdlev)
	go to 98000
27003	call nucltransK(0.156,0.067,1.5e-1,0.,tclev,thlev,tdlev)
	go to 11400
c-----------------------------------------------------------------------
11400	thlev=0. 
	call nucltransK(0.114,0.067,4.5e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
98000	thlev=0. 
	call nucltransK(0.098,0.067,5.0e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,K40

	subroutine K40(tcnuc,tdnuc)
c Scheme of K40 decay ("Table of Isotopes", 7th ed., 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 3.08.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=0.4039262e+17
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.89.300) then
	 call beta(1.312,+20.,0.,0.,t)                       ! 89.300% b- 40Ca(gs)
	elseif(pdecay.le.99.999) then                      ! 10.699% ec 40Ar(1461)
	 thlev=1.1e-12
	 call nucltransK(1.461,0.003,3.0e-5,7.0e-5,tclev,thlev,tdlev)
	else
         call beta(0.483,-18.,0.,0.,t)                       !  0.001% b+ 40Ar(gs)
	end if
	return
	end

c***********************************************************************
+DECK,MN54.

	subroutine Mn54(tcnuc,tdnuc)
c Scheme of Mn54 decay ("Table of Isotopes", 8th ed., 1996 + NDS 50(1987)255).
c Accuracy in description of: decay branches       - 0.001%,
c                           : deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 16.04.1998.
        call grndm(rndm,1) 
	thnuc=2.696717E+07
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm)
	tclev=0.
c 100% EC to Cr54
	call gamma(0.007,0.,0.,t)
	thlev=7.9e-12
	call nucltransK(0.835,0.007,2.4e-4,0.,tclev,thlev,tdlev)
	return
	end

c***********************************************************************
+DECK,NA22

	subroutine Na22(tcnuc,tdnuc)
c Scheme of Na22 decay ("Table of Isotopes", 7th ed., 1978).
c Accuracy in description of: decay branches       - 0.001%,
c                           : deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 26.07.1993, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=0.8211062e+08
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.99.94) go to  1275
	                    go to 10000
c-----------------------------------------------------------------------
1275	thlev=3.7e-12
	if(pdecay.le.9.5) call gamma(0.001,0.,0.,t)
	if(pdecay.gt.9.5) call beta(0.545,-10.,0.,0.,t)
	call nucltransK(1.275,0.001,6.8e-6,3.5e-5,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(1.820,-10.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,NB96.

	subroutine Nb96(tcnuc,tdnuc)
c Scheme of Nb96 decay ("Table of Isotopes", 8 ed., 1996 + NDS 68(1993)165).
c Three-figured labels correspond to energies of 96Mo excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 7.05.1998.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=8.406e4
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 0.024) go to 2975
	if(pbeta.le. 0.524) go to 2876
	if(pbeta.le. 1.014) go to 2755
	if(pbeta.le. 3.314) go to 2441
	                    go to 2439
c-----------------------------------------------------------------------
2975	call beta(0.212,42.,0.,0.,t)
29750	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.25.80) go to 29751
	if(p.le.47.74) go to 29752
	if(p.le.72.00) go to 29753
	if(p.le.93.94) go to 29754
	               go to 29755
29751	call nucltransK(1.347,0.020,3.5e-4,0.6e-4,tclev,thlev,tdlev)
	go to 16280
29752	call nucltransK(0.997,0.020,7.5e-4,0.,tclev,thlev,tdlev)
	go to 19780
29753	call nucltransK(0.756,0.020,1.2e-3,0.,tclev,thlev,tdlev)
	go to 22190
29754	call nucltransK(0.741,0.020,3.5e-3,0.,tclev,thlev,tdlev)
	go to 22350
29755	call nucltransK(0.435,0.020,7.0e-3,0.,tclev,thlev,tdlev)
	go to 25400
c-----------------------------------------------------------------------
2876	call beta(0.311,42.,0.,0.,t)
28760	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.95.05) go to 28761
	               go to 28762
28761	call nucltransK(0.435,0.020,5.7e-3,0.,tclev,thlev,tdlev)
	go to 24410
28762	call nucltransK(0.120,0.020,1.5e-1,0.,tclev,thlev,tdlev)
	go to 27550
c-----------------------------------------------------------------------
2755	call beta(0.432,42.,0.,0.,t)
27550	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.73.96) go to 27551
	if(p.le.74.48) go to 27552
	if(p.le.76.48) go to 27553
	if(p.le.87.06) go to 27554
	               go to 27555
27551	call nucltransK(1.127,0.020,5.2e-4,0.1e-4,tclev,thlev,tdlev)
	go to 16280
27552	call nucltransK(0.885,0.020,9.0e-4,0.,tclev,thlev,tdlev)
	go to 18700
27553	call nucltransK(0.536,0.020,3.6e-3,0.,tclev,thlev,tdlev)
	go to 22190
27554	call nucltransK(0.316,0.020,1.2e-2,0.,tclev,thlev,tdlev)
	go to 24390
27555	call nucltransK(0.314,0.020,1.3e-2,0.,tclev,thlev,tdlev)
	go to 24410
c-----------------------------------------------------------------------
25400	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.62.27) go to 25401
	if(p.le.87.80) go to 25402
	               go to 25403
25401	call nucltransK(1.762,0.020,2.4e-4,1.6e-4,tclev,thlev,tdlev)
	go to 77800
25402	call nucltransK(1.043,0.020,6.0e-4,0.,tclev,thlev,tdlev)
	go to 14980
25403	call nucltransK(0.915,0.020,8.0e-4,0.,tclev,thlev,tdlev)
	go to 16260
c-----------------------------------------------------------------------
2441	call beta(0.746,42.,0.,0.,t)
24410	thlev=0. 
	call nucltransK(0.813,0.020,1.3e-3,0.,tclev,thlev,tdlev)
	go to 16280
c-----------------------------------------------------------------------
2439	call beta(0.748,42.,0.,0.,t)
24390	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.16.19) go to 24391
	if(p.le.70.16) go to 24392
	if(p.le.96.44) go to 24393
	               go to 24394
24391	call nucltransK(0.811,0.020,1.3e-3,0.,tclev,thlev,tdlev)
	go to 16280
24392	call nucltransK(0.569,0.020,2.9e-3,0.,tclev,thlev,tdlev)
	go to 18700
24393	call nucltransK(0.460,0.020,6.2e-3,0.,tclev,thlev,tdlev)
	go to 19780
24394	call nucltransK(0.219,0.020,3.8e-2,0.,tclev,thlev,tdlev)
	go to 22190
c-----------------------------------------------------------------------
22350	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 4.27) go to 22351
	if(p.le.49.26) go to 22352
	if(p.le.95.64) go to 22353
	               go to 22354
22351	call nucltransK(1.456,0.020,1.4e-4,0.4e-4,tclev,thlev,tdlev)
	go to 77800
22352	call nucltransK(0.737,0.020,1.1e-3,0.,tclev,thlev,tdlev)
	go to 14980
22353	call nucltransK(0.609,0.020,1.7e-3,0.,tclev,thlev,tdlev)
	go to 16260
22354	call nucltransK(0.365,0.020,2.8e-3,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
22190	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 8.12) go to 22191
	if(p.le.26.61) go to 22192
	if(p.le.35.29) go to 22193
	if(p.le.52.38) go to 22194
	if(p.le.80.39) go to 22195
	               go to 22196
22191	call nucltransK(1.441,0.020,3.0e-4,0.2e-4,tclev,thlev,tdlev)
	go to 77800
22192	call nucltransK(0.722,0.020,1.7e-3,0.,tclev,thlev,tdlev)
	go to 14980
22193	call nucltransK(0.593,0.020,8.5e-4,0.,tclev,thlev,tdlev)
	go to 16260
22194	call nucltransK(0.591,0.020,2.8e-3,0.,tclev,thlev,tdlev)
	go to 16280
22195	call nucltransK(0.350,0.020,1.2e-2,0.,tclev,thlev,tdlev)
	go to 18700
22196	call nucltransK(0.241,0.020,2.0e-2,0.,tclev,thlev,tdlev)
	go to 19780
c-----------------------------------------------------------------------
19780	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.70.76) go to 19781
	if(p.le.91.42) go to 19782
	if(p.le.94.39) go to 19783
	if(p.le.99.84) go to 19784
	               go to 19785
19781	call nucltransK(1.200,0.020,4.6e-4,0.3e-4,tclev,thlev,tdlev)
	go to 77800
19782	call nucltransK(0.481,0.020,4.5e-3,0.,tclev,thlev,tdlev)
	go to 14980
19783	call nucltransK(0.353,0.020,1.2e-2,0.,tclev,thlev,tdlev)
	go to 16260
19784	call nucltransK(0.350,0.020,1.2e-2,0.,tclev,thlev,tdlev)
	go to 16280
19785	call nucltransK(0.109,0.020,1.6e-1,0.,tclev,thlev,tdlev)
	go to 18700
c-----------------------------------------------------------------------
18700	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 7.18) go to 18701
	if(p.le.44.75) go to 18702
	               go to 18703
18701	call nucltransK(1.091,0.020,5.6e-4,0.,tclev,thlev,tdlev)
	go to 77800
18702	call nucltransK(0.372,0.020,1.2e-2,0.,tclev,thlev,tdlev)
	go to 14980
18703	call nucltransK(0.241,0.020,2.4e-2,0.,tclev,thlev,tdlev)
	go to 16280
c-----------------------------------------------------------------------
16280	thlev=1.2e-12
	call nucltransK(0.850,0.020,1.2e-3,0.,tclev,thlev,tdlev)
	go to 77800
c-----------------------------------------------------------------------
16260	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.11.83) go to 16261
	if(p.le.98.78) go to 16262
	               go to 16263
16261	call nucltransK(1.626,0.020,2.6e-4,0.5e-4,tclev,thlev,tdlev)
	return
16262	call nucltransK(0.848,0.020,1.2e-3,0.,tclev,thlev,tdlev)
	go to 77800
16263	call nucltransK(0.128,0.020,1.0e-1,0.,tclev,thlev,tdlev)
	go to 14980
c-----------------------------------------------------------------------
14980	thlev=0.7e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.32.43) go to 14981
	               go to 14982
14981	call nucltransK(1.498,0.020,2.8e-4,0.5e-4,tclev,thlev,tdlev)
	return
14982	call nucltransK(0.720,0.020,1.7e-3,0.,tclev,thlev,tdlev)
	go to 77800
c-----------------------------------------------------------------------
77800	thlev=3.66e-12
	call nucltransK(0.778,0.020,1.4e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,PA234M.

	subroutine Pa234m(tcnuc,tdnuc)
c Model (not the exact) scheme of Pa234m decay ("Table of Isotopes",
c 7th ed., 1978):
c 1) isomeric transition Pa234m to Pa234 is not considered (p=0.13%
c    and scheme of Pa234 further decay to U234 is not very well
c    determined);
c 2) decays of Pa234m to excited levels of U234 with energies
c    greater than 1.045 MeV are not considered (p=0.17%).
c Three- and four-figured labels correspond to energies of
c U234 excited levels in keV. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 18.08.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=70.5
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.0.70) go to  1045   !  0.70%
	if(pbeta.le.1.30) go to   810   !  0.60%
	if(pbeta.le.1.32) go to   786   !  0.02%
	                  go to 10000   ! 98.68%
c-----------------------------------------------------------------------
1045	call beta(1.242,92.,0.,0.,t)
10450	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.80.13) go to 10451   ! 80.13%
	if(p.le.87.93) go to 10452   !  7.80%
	if(p.le.99.93) go to 10453   ! 12.00%
	               go to 10454   !  0.07%
10451	call nucltransK(1.001,0.116,1.0e-2,0.,tclev,thlev,tdlev)
	go to 43000
10452	call nucltransK(0.258,0.116,5.0e-2,0.,tclev,thlev,tdlev)
	go to 78600
10453	call electron(0.119,tclev,thlev,tdlev)      ! only ec
	call gamma(0.116,0.,0.,tdlev)
	go to 81000
10454	call nucltransK(0.193,0.116,7.0e-1,0.,tclev,thlev,tdlev)
	go to 85200
c-----------------------------------------------------------------------
85200	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.56.) go to 85201   ! 56%
	if(p.le.89.) go to 85202   ! 33%
	             go to 85203   ! 11%
85201	call nucltransK(0.852,0.116,1.4e-2,0.,tclev,thlev,tdlev)
	return
85202	call nucltransK(0.808,0.116,2.0e-2,0.,tclev,thlev,tdlev)
	go to 43000
85203	call nucltransK(0.708,0.116,2.0e-2,0.,tclev,thlev,tdlev)
	go to 14300
c-----------------------------------------------------------------------
810	call beta(1.477,92.,0.,0.,t)
81000	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.67.) go to 81001   ! 67%
	             go to 81002   ! 33%
81001	call electron(0.694,tclev,thlev,tdlev)      ! only ec
	call gamma(0.116,0.,0.,tdlev)
	return
81002	call nucltransK(0.766,0.116,1.5e-2,0.,tclev,thlev,tdlev)
	go to 43000
c-----------------------------------------------------------------------
786	call beta(1.501,92.,0.,0.,t)
78600	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.38.) go to 78601   ! 38%
	             go to 78602   ! 62%
78601	call nucltransK(0.786,0.116,5.5e-3,0.,tclev,thlev,tdlev)
	return
78602	call nucltransK(0.743,0.116,6.0e-3,0.,tclev,thlev,tdlev)
	go to 43000
c-----------------------------------------------------------------------
14300	thlev=0. 
	call nucltransK(0.100,0.022,1.2e+1,0.,tclev,thlev,tdlev)
	go to 43000
c-----------------------------------------------------------------------
43000	thlev=0.25e-9
	call electron(0.021,tclev,thlev,tdlev)      ! only ec
	call gamma(0.022,0.,0.,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(2.287,92.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,PB211.

	subroutine Pb211(tcnuc,tdnuc)
c Scheme of Pb211 decay ("Table of Isotopes", 7th ed., 1978).
c Three- and four-figured labels correspond to energies of Bi211
c excited levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 14.08.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=2166.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.0.01) go to  1270  !  0.01%
	if(pbeta.le.0.03) go to  1196  !  0.02%
	if(pbeta.le.0.63) go to  1109  !  0.60%
	if(pbeta.le.0.67) go to  1080  !  0.04%
	if(pbeta.le.5.97) go to   832  !  5.30%
	if(pbeta.le.6.27) go to   766  !  0.30%
	if(pbeta.le.8.07) go to   405  !  1.80%
	                  go to 10000  ! 91.93%
c-----------------------------------------------------------------------
1270	call beta(0.103,83.,0.,0.,t)
12700	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.50.) go to 12701   ! 50%
	if(p.le.95.) go to 12702   ! 45%
	             go to 12703   !  5%
12701	call nucltransK(1.270,0.091,8.7e-3,0.5e-4,tclev,thlev,tdlev)
	return
12702	call nucltransK(0.866,0.091,2.3e-2,0.,tclev,thlev,tdlev)
	go to 40500
12703	call nucltransK(0.504,0.091,9.3e-2,0.,tclev,thlev,tdlev)
	go to 76600
c-----------------------------------------------------------------------
1196	call beta(0.177,83.,0.,0.,t)
11960	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.15.) go to 11961   ! 15%
	if(p.le.27.) go to 11962   ! 12%
	             go to 11963   ! 73%
11961	call nucltransK(1.196,0.091,1.0e-2,0.2e-4,tclev,thlev,tdlev)
	return
11962	call nucltransK(0.429,0.091,1.5e-1,0.,tclev,thlev,tdlev)
	go to 76600
11963	call nucltransK(0.244,0.091,6.7e-1,0.,tclev,thlev,tdlev)
	go to 95100
c-----------------------------------------------------------------------
1109	call beta(0.264,83.,0.,0.,t)
11090	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.15.9) go to 11091   ! 15.9%
	if(p.le.87.2) go to 11092   ! 71.3%
	if(p.le.90.2) go to 11093   !  3.0%
	if(p.le.98.1) go to 11094   !  7.9%
	              go to 11095   !  1.9%
11091	call nucltransK(1.109,0.091,1.2e-2,0.1e-4,tclev,thlev,tdlev)
	return
11092	call nucltransK(0.705,0.091,3.9e-2,0.,tclev,thlev,tdlev)
	go to 40500
11093	call nucltransK(0.343,0.091,2.6e-1,0.,tclev,thlev,tdlev)
	go to 76600
11094	call nucltransK(0.274,0.091,5.0e-1,0.,tclev,thlev,tdlev)
	go to 83200
11095	call nucltransK(0.095,0.016,4.0e+0,0.,tclev,thlev,tdlev)
	go to 10140
c-----------------------------------------------------------------------
1080	call beta(0.293,83.,0.,0.,t)
10800	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.10.) go to 10801   ! 10%
	if(p.le.23.) go to 10802   ! 13%
	if(p.le.48.) go to 10803   ! 25%
	             go to 10804   ! 52%
10801	call nucltransK(1.080,0.091,1.3e-2,0.1e-4,tclev,thlev,tdlev)
	return
10802	call nucltransK(0.675,0.091,4.3e-2,0.,tclev,thlev,tdlev)
	go to 40500
10803	call nucltransK(0.314,0.091,3.5e-1,0.,tclev,thlev,tdlev)
	go to 76600
10804	call nucltransK(0.244,0.091,6.7e-1,0.,tclev,thlev,tdlev)
	go to 83200
c-----------------------------------------------------------------------
10140	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.37.) go to 10141   ! 37%
	             go to 10142   ! 63%
10141	call nucltransK(1.014,0.091,1.7e-2,0.,tclev,thlev,tdlev)
	return
10142	call nucltransK(0.609,0.091,5.7e-2,0.,tclev,thlev,tdlev)
	go to 40500
c-----------------------------------------------------------------------
95100	thlev=0. 
	call nucltransK(0.951,0.091,1.8e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
832	call beta(0.541,83.,0.,0.,t)
83200	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.65.8) go to 83201   ! 65.8%
	if(p.le.98.8) go to 83202   ! 33.0%
	              go to 83203   !  1.2%
83201	call nucltransK(0.832,0.091,2.8e-2,0.,tclev,thlev,tdlev)
	return
83202	call nucltransK(0.427,0.091,1.6e-1,0.,tclev,thlev,tdlev)
	go to 40500
83203	call nucltransK(0.066,0.016,5.3e+0,0.,tclev,thlev,tdlev)
	go to 76600
c-----------------------------------------------------------------------
766	call beta(0.607,83.,0.,0.,t)
76600	thlev=0. 
	call nucltransK(0.766,0.091,3.9e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
405	call beta(0.968,83.,0.,0.,t)
40500	thlev=0.32e-9
	call nucltransK(0.405,0.091,1.0e-1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(1.373,83.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,PB212.

	subroutine Pb212(tcnuc,tdnuc)
c Scheme of Pb212 decay ("Table of Isotopes", 7th ed., 1978).
c Three-figured labels correspond to energies of 212Bi excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 5.08.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=38304.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 5.) go to   415         !  5%
	if(pbeta.le.88.) go to   239         ! 83%
	                 go to 10000         ! 12%
c-----------------------------------------------------------------------
415	call beta(0.158,83.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.5) go to 41501          !  0.5%
	if(p.le.98.5) go to 41502          ! 98.0%
	              go to 41503          !  1.5%
41501	call nucltransK(0.415,0.091,0.24,0.,tclev,thlev,tdlev)
	return
41502	call nucltransK(0.300,0.091,0.55,0.,tclev,thlev,tdlev)
	go to 115
41503	call nucltransK(0.177,0.091,2.4,0.,tclev,thlev,tdlev)
	go to 23900
c-----------------------------------------------------------------------
239	call beta(0.334,83.,0.,0.,t)
23900	thlev=1.e-12
	call nucltransK(0.239,0.091,1.1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
115	thlev=8.e-12
	call nucltransK(0.115,0.091,8.0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(0.573,83.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,PB214.

	subroutine Pb214(tcnuc,tdnuc)
c Scheme of 214Pb decay ("Table of Isotopes", 7th ed., 1978).
c Three-figured labels correspond to energies of 214Bi
c excited levels in keV. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 11.08.1992, 22.10.1995.
        real rndm(2)
        call grndm(rndm,2) 
	thnuc=1608.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 2.5) go to   839   !  2.5%
	if(pbeta.le. 3.5) go to   534   !  1.0%
	if(pbeta.le.51.6) go to   352   ! 48.1%
	if(pbeta.le.93.7) go to   295   ! 42.1%
	                  go to 10000   !  6.3%
c-----------------------------------------------------------------------
839	call beta(0.185,83.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.25.9) go to 83901   ! 25.9%
	if(p.le.64.7) go to 83902   ! 38.8%
	if(p.le.80.7) go to 83903   ! 16.0%
	if(p.le.83.7) go to 83904   !  3.0%
	if(p.le.98.7) go to 83905   ! 15.0%
	              go to 83906   !  1.3%
83901	call nucltransK(0.839,0.091,4.0e-3,0.,tclev,thlev,tdlev)
	return
83902	call nucltransK(0.786,0.091,4.5e-3,0.,tclev,thlev,tdlev)
	go to 53000
83903	call nucltransK(0.580,0.091,8.0e-3,0.,tclev,thlev,tdlev)
	go to 25900
83904	call nucltransK(0.544,0.091,9.0e-3,0.,tclev,thlev,tdlev)
	go to 29500
83905	call nucltransK(0.487,0.091,1.8e-2,0.,tclev,thlev,tdlev)
	go to 35200
83906	call nucltransK(0.305,0.091,3.0e-2,0.,tclev,thlev,tdlev)
	go to 53400
c-----------------------------------------------------------------------
534	call beta(0.490,83.,0.,0.,t)
53400	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.14.0) go to 53401   ! 14%
	if(p.le.42.0) go to 53402   ! 28%
	if(p.le.99.0) go to 53403   ! 57%
	              go to 53404   !  1%
53401	call nucltransK(0.534,0.091,9.0e-3,0.,tclev,thlev,tdlev)
	return
53402	call nucltransK(0.481,0.091,1.8e-2,0.,tclev,thlev,tdlev)
	go to 53000
53403	call nucltransK(0.275,0.091,4.0e-2,0.,tclev,thlev,tdlev)
	go to 25900
53404	call nucltransK(0.238,0.091,6.5e-2,0.,tclev,thlev,tdlev)
	go to 29500
c-----------------------------------------------------------------------
352	call beta(0.672,83.,0.,0.,t)
35200	thlev=0. 
	call nucltransK(0.352,0.091,2.1e-1,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
295	call beta(0.729,83.,0.,0.,t)
29500	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.71.0) go to 29501   ! 71%
	              go to 29502   ! 29%
29501	call nucltransK(0.295,0.091,3.5e-1,0.,tclev,thlev,tdlev)
	return
29502	call nucltransK(0.242,0.091,7.5e-1,0.,tclev,thlev,tdlev)
	go to 53000
c-----------------------------------------------------------------------
25900	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.98.0) go to 25901   ! 98%
	              go to 25902   !  2%
25901	call nucltransK(0.259,0.091,5.8e-1,0.,tclev,thlev,tdlev)
	return
25902	call nucltransK(0.206,0.091,9.2e-1,0.,tclev,thlev,tdlev)
	go to 53000
c-----------------------------------------------------------------------
53000	thlev=0. 
	call nucltransK(0.053,0.016,9.2e+0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(1.024,83.,0.,0.,t)
	return
	end

c***********************************************************************
+DECK,PBATSHELL.

	subroutine PbAtShell(KLMenergy,tclev,thlev,tdlev)
c Subroutine describes in some approximation the deexcitation process in 
c atomic shell of Pb after creation of electron vacation in K, L or M shell.
c Call  : call PbAtShell(KLMenergy,tclev,thlev,tdlev)
c Input : KLMenergy - binding energy of electron on atomic shell [integer 
c                     in keV] where the hole was created;
c         tclev     - time of hole creation (sec);
c         thlev     - hole halflife (sec).
c Output: tdlev     - time of decay of hole (sec).
c It is supposed electron binding energy on Pb K-shell = 88 keV, on L-shell = 
c 15 keV, on M-shell = 3 keV. So, following values of KLMenergy are allowed: 
c 88 (hole in K-shell), 15 (in L-shell) and 3 (in M-shell).
c VIT, 7.07.1995, 22.10.1995.
	Lhole=0
	Mhole=0
	if(KLMenergy.eq.88) go to 88
	if(KLMenergy.eq.15) then
	   Lhole=1
	   go to 15
	endif
	if(KLMenergy.eq.3) then
	   Mhole=1
	   go to 3
	endif
	go to 20000
c----------------------------------------------------------------------- 
c K-shell
88      call grndm(rndm,1) 
        p=100.*rndm
	if(p.le.22.) go to 88001
	             go to 88002
88001	call gamma(0.085,tclev,thlev,tdlev)          ! X ray K-M
	Mhole=Mhole+1
	go to 3
88002   call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.96.) then
	   call gamma(0.073,tclev,thlev,tdlev)       ! X ray K-L
	else
	   call electron(0.058,tclev,thlev,tdlev)    ! Auger electron K-LL
	   Lhole=Lhole+1
	end if
	Lhole=Lhole+1
c----------------------------------------------------------------------- 
c L-shell
15	do i=1,Lhole
           call grndm(rndm,1) 
	   p=100.*rndm
	   if(p.le.40.) then
	      call gamma(0.012,tclev,thlev,tdlev)    ! X ray L-M
	   else
	      call electron(0.009,tclev,thlev,tdlev) ! Auger electron L-MM
	      Mhole=Mhole+1
	   end if
	   Mhole=Mhole+1
	enddo
c----------------------------------------------------------------------- 
c M-shell
3	do i=1,Mhole
	   call gamma(0.003,tclev,thlev,tdlev)       ! X ray M-inf
	enddo
	return
c-----------------------------------------------------------------------
20000	print *,'Pb_At_Shell: wrong hole level [keV] ',KLMenergy
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,PO212.

	subroutine Po212(tcnuc,tdnuc)
c Scheme of Po212 decay (Nucl. Data Sheets 66(1992)171).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 14.07.1995, 22.10.1995.
	thnuc=0.299e-6
        call grndm(rndm,1) 
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm)
	call alpha(8.785,0.,0.,t) 
	return
	end

c***********************************************************************
+DECK,PO214.

	subroutine Po214(tcnuc,tdnuc)
c Scheme of Po214 decay (Nucl. Data Sheets 55(1988)665).
c Alpha decays to excited levels of Pb210 are neglected:
c    1) 0.00006% to level 1097.7 keV with 2 gammas after (298.0 and
c       799.7 keV);
c    2) 0.0107% to level 799.7 keV with gamma 799.7 keV after.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 14.07.1995, 22.10.1995.
	thnuc=164.3e-6
        call grndm(rndm,1) 
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm)
	call alpha(7.687,0.,0.,t) 
	return
	end

c***********************************************************************
+DECK,RH106.

	subroutine Rh106(tcnuc,tdnuc)
c Approximate scheme of 106Rh decay ("Table of Isotopes", 7th ed., 1978)
c (beta decays to excited levels of 106Pd not higher 2.002 MeV, 
c 99.32% of decay).
c Three-figured labels correspond to energies of 106Pd excited levels 
c in keV. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 17.12.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=29.80
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 0.45) go to  2002
	if(pbeta.le. 0.52) go to  1707
	if(pbeta.le. 2.32) go to  1562
	if(pbeta.le.12.32) go to  1134
	if(pbeta.le.19.32) go to   512
	                   go to 10000
c-----------------------------------------------------------------------
2002	call beta(1.539,46.,0.,0.,t)
20020	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.4) go to 20021
	if(p.le.98.6) go to 20022
	              go to 20023
20021	call nucltransK(1.490,0.024,4.0e-4,0.3e-4,tclev,thlev,tdlev)
	go to 51200
20022	call nucltransK(0.874,0.024,1.3e-3,0.,tclev,thlev,tdlev)
	go to 11280
20023	call nucltransK(0.440,0.024,8.5e-3,0.,tclev,thlev,tdlev)
	go to 15620
c-----------------------------------------------------------------------
1707	call beta(1.834,46.,0.,0.,t)
17070	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.89.0) go to 17071
	              go to 17072
17071	call nucltransK(1.195,0.024,7.5e-4,0.,tclev,thlev,tdlev)
	go to 51200
17072	call nucltransK(0.578,0.024,3.7e-3,0.,tclev,thlev,tdlev)
	go to 11280
c-----------------------------------------------------------------------
1562	call beta(1.979,46.,0.,0.,t)
15620	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 9.1) go to 15621
	if(p.le.95.6) go to 15622
	if(p.le.96.8) go to 15623
	              go to 15624
15621	call nucltransK(1.562,0.024,3.5e-4,0.4e-4,tclev,thlev,tdlev)
	return
15622	call nucltransK(1.051,0.024,8.5e-4,0.,tclev,thlev,tdlev)
	go to 51200
15623	call nucltransK(0.434,0.024,8.5e-3,0.,tclev,thlev,tdlev)
	go to 11280
15624	call nucltransK(0.428,0.024,8.5e-3,0.,tclev,thlev,tdlev)
	go to 11340
c-----------------------------------------------------------------------
1134	call beta(2.407,46.,0.,0.,t)
11340	thlev=7.0e-12
	call nucltransK(0.622,0.024,3.3e-3,0.,tclev,thlev,tdlev)
	go to 51200
c-----------------------------------------------------------------------
11280	thlev=3.2e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.34.) go to 11281
	             go to 11282
11281	call nucltransK(1.128,0.024,7.0e-4,0.,tclev,thlev,tdlev)
	return
11282	call nucltransK(0.616,0.024,3.0e-3,0.,tclev,thlev,tdlev)
	go to 51200
c-----------------------------------------------------------------------
512	call beta(3.029,46.,0.,0.,t)
51200	thlev=11.0e-12
	call nucltransK(0.512,0.024,5.5e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(3.541,46.,0.,0.,t)
	return
	end

c***********************************************************************
+DECK,SC48.

	subroutine Sc48(tcnuc,tdnuc)
c Scheme of Sc48 decay ("Table of Isotopes", 8 ed., 1996 + NDS 68(1993)1).
c Three-figured labels correspond to energies of 48Ti excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 7.05.1998.
        dimension rndm(3)
        call grndm(rndm,3) 
	thnuc=1.57212e5
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.10.02) go to 3509
	                   go to 3333
c-----------------------------------------------------------------------
3509	call beta(0.485,22.,0.,0.,t)
35090	thlev=0. 
	p=100.*rndm(3)
	if(p.le.24.18) go to 35091
	               go to 35092
35091	call nucltransK(1.213,0.004,1.0e-4,0.1e-4,tclev,thlev,tdlev)
	go to 22960
35092	call nucltransK(0.175,0.004,4.6e-3,0.,tclev,thlev,tdlev)
	go to 33330
c-----------------------------------------------------------------------
3333	call beta(0.661,22.,0.,0.,t)
33330	thlev=0.
	call nucltransK(1.038,0.004,1.1e-4,0.,tclev,thlev,tdlev)
	go to 22960
c-----------------------------------------------------------------------
22960	thlev=1.25e-12
	call nucltransK(1.312,0.004,6.9e-5,0.1e-4,tclev,thlev,tdlev)
	go to 98400
c-----------------------------------------------------------------------
98400	thlev=4.27e-12
	call nucltransK(0.984,0.004,1.2e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,SR90.

	subroutine Sr90(tcnuc,tdnuc)
c Scheme of Sr90 decay ("Table of Isotopes", 7th ed., 1978).
c Accuracy in description of: decay branches       - 0.001%,
c                           : deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 9.08.1993, 22.10.1995.
	thnuc=0.9088340E+09
        call grndm(rndm,1) 
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm)
	call beta(0.546,39.,0.,0.,t)
	return
	end

c***********************************************************************
+DECK,TA182.

	subroutine Ta182(tcnuc,tdnuc)
c Scheme of 182Ta decay ("Table of Isotopes", 7th ed., 1978).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 6.03.1996.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=9.936e6
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.28.586) go to 1553
	if(pbeta.le.28.716) go to 1510
	if(pbeta.le.31.416) go to 1488
	if(pbeta.le.32.076) go to 1443
	if(pbeta.le.52.066) go to 1374
	if(pbeta.le.54.366) go to 1331
	if(pbeta.le.94.346) go to 1289
	if(pbeta.le.94.846) go to 1257
	if(pbeta.le.99.846) go to 1221
	if(pbeta.le.99.942) go to  329
	                    go to  100
c-----------------------------------------------------------------------
1553	call beta(0.258,74.,0.,0.,t)
15530	thlev=1.23e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 0.25) go to 15531
	if(p.le. 1.45) go to 15532
	if(p.le.22.47) go to 15533
	if(p.le.65.50) go to 15534
	if(p.le.83.50) go to 15535
	if(p.le.84.00) go to 15536
	               go to 15537
15531	call nucltransK(1.453,0.070,4.5e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
15532	call nucltransK(1.223,0.070,2.5e-3,0.1e-4,tclev,thlev,tdlev)
	go to 32900
15533	call nucltransK(0.264,0.070,1.4e-1,0.,tclev,thlev,tdlev)
	go to 12890
15534	call nucltransK(0.222,0.070,5.0e-2,0.,tclev,thlev,tdlev)
	go to 13310
15535	call nucltransK(0.179,0.070,7.5e-1,0.,tclev,thlev,tdlev)
	go to 13740
15536	call nucltransK(0.110,0.070,3.0e-1,0.,tclev,thlev,tdlev)
	go to 14430
15537	call nucltransK(0.066,0.012,3.0e-0,0.,tclev,thlev,tdlev)
	go to 14880
c-----------------------------------------------------------------------
1510	call beta(0.301,74.,0.,0.,t)
15100	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.34.) go to 15101
	             go to 15102
15101	call nucltransK(1.410,0.070,2.4e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
15102	call nucltransK(1.181,0.070,1.4e-3,0.1e-4,tclev,thlev,tdlev)
	go to 32900
c-----------------------------------------------------------------------
1488	call beta(0.323,74.,0.,0.,t)
14880	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 1.1) go to 14881
	if(p.le. 6.1) go to 14882
	if(p.le.29.3) go to 14883
	if(p.le.70.8) go to 14884
	              go to 14885
14881	call nucltransK(1.387,0.070,5.0e-3,0.5e-5,tclev,thlev,tdlev)
	go to 10000
14882	call nucltransK(1.158,0.070,1.5e-3,0.5e-5,tclev,thlev,tdlev)
	go to 32900
14883	call nucltransK(0.198,0.070,3.2e-1,0.,tclev,thlev,tdlev)
	go to 12890
14884	call nucltransK(0.156,0.070,1.2e-1,0.,tclev,thlev,tdlev)
	go to 13310
14885	call nucltransK(0.114,0.070,3.8e-0,0.,tclev,thlev,tdlev)
	go to 13740
c-----------------------------------------------------------------------
1443	call beta(0.368,74.,0.,0.,t)
14430	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.40.) go to 14431
	             go to 14432
14431	call nucltransK(1.343,0.070,2.8e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
14432	call nucltransK(1.113,0.070,6.0e-3,0.,tclev,thlev,tdlev)
	go to 32900
c-----------------------------------------------------------------------
1374	call beta(0.437,74.,0.,0.,t)
13740	thlev=0.08e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.0) go to 13741
	if(p.le. 7.7) go to 13742
	if(p.le. 9.8) go to 13743
	if(p.le.71.3) go to 13744
	if(p.le.75.1) go to 13745
	if(p.le.97.9) go to 13746
	              go to 13747
13741	call nucltransK(1.374,0.070,5.5e-3,0.5e-5,tclev,thlev,tdlev)
	return
13742	call nucltransK(1.274,0.070,3.0e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
13743	call nucltransK(1.044,0.070,6.6e-3,0.,tclev,thlev,tdlev)
	go to 32900
13744	call nucltransK(0.152,0.070,1.2e-1,0.,tclev,thlev,tdlev)
	go to 12210
13745	call nucltransK(0.116,0.070,2.6e-1,0.,tclev,thlev,tdlev)
	go to 12570
13746	call nucltransK(0.085,0.070,8.5e-0,0.,tclev,thlev,tdlev)
	go to 12890
13747	call nucltransK(0.043,0.012,7.0e-1,0.,tclev,thlev,tdlev)
	go to 13310
c-----------------------------------------------------------------------
1331	call beta(0.480,74.,0.,0.,t)
13310	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.85.) go to 13311
	             go to 13312
13311	call nucltransK(1.231,0.070,3.0e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
13312	call nucltransK(1.002,0.070,4.7e-3,0.,tclev,thlev,tdlev)
	go to 32900
c-----------------------------------------------------------------------
1289	call beta(0.522,74.,0.,0.,t)
12890	thlev=1.12e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 2.35) go to 12891
	if(p.le.29.75) go to 12892
	if(p.le.30.34) go to 12893
	if(p.le.99.00) go to 12894
	               go to 12895
12891	call nucltransK(1.289,0.070,1.3e-2,0.3e-4,tclev,thlev,tdlev)
	return
12892	call nucltransK(1.189,0.070,5.3e-3,0.1e-4,tclev,thlev,tdlev)
	go to 10000
12893	call nucltransK(0.960,0.070,1.3e-2,0.,tclev,thlev,tdlev)
	go to 32900
12894	call nucltransK(0.068,0.012,2.0e-1,0.,tclev,thlev,tdlev)
	go to 12210
12895	call nucltransK(0.032,0.012,1.6e-0,0.,tclev,thlev,tdlev)
	go to 12570
c-----------------------------------------------------------------------
1257	call beta(0.554,74.,0.,0.,t)
12570	thlev=1.7e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.54.5) go to 12571
	if(p.le.77.8) go to 12572
	              go to 12573
12571	call nucltransK(1.257,0.070,3.0e-3,0.1e-4,tclev,thlev,tdlev)
	return
12572	call nucltransK(1.157,0.070,5.3e-3,0.,tclev,thlev,tdlev)
	go to 10000
12573	call nucltransK(0.928,0.070,5.5e-3,0.,tclev,thlev,tdlev)
	go to 32900
c-----------------------------------------------------------------------
1221	call beta(0.590,74.,0.,0.,t)
12210	thlev=0.37e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.44.00) go to 12211
	if(p.le.99.92) go to 12212
	               go to 12213
12211	call nucltransK(1.221,0.070,3.0e-3,0.1e-4,tclev,thlev,tdlev)
	return
12212	call nucltransK(1.121,0.070,3.5e-3,0.1e-5,tclev,thlev,tdlev)
	go to 10000
12213	call nucltransK(0.892,0.070,6.0e-3,0.,tclev,thlev,tdlev)
	go to 32900
c-----------------------------------------------------------------------
329	call beta(1.482,74.,0.,0.,t)
32900	thlev=64.e-12
	call nucltransK(0.229,0.070,2.4e-1,0.,tclev,thlev,tdlev)
	go to 10000
c-----------------------------------------------------------------------
100	call beta(1.711,74.,0.,0.,t)
10000	thlev=1.38e-9
	call nucltransK(0.100,0.012,4.0e-0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,TL207.

	subroutine Tl207(tcnuc,tdnuc)
c Scheme of Tl207 decay ("Table of Isotopes", 7th ed., 1978).
c Three-figured labels correspond to energies of Pb207
c excited levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 14.08.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=286.2
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.0.24) go to   898  !  0.24%
	                  go to 10000  ! 99.76%
c-----------------------------------------------------------------------
898	call beta(0.524,82.,0.,0.,t)
	thlev=0.11e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.99.4) go to 89801   ! 99.4%
	              go to 89802   !  0.6%
89801	call nucltransK(0.898,0.088,2.0e-2,0.,tclev,thlev,tdlev)
	return
89802	call nucltransK(0.328,0.088,2.8e-1,0.,tclev,thlev,tdlev)
	go to 57000
c-----------------------------------------------------------------------
57000	thlev=131.e-12
	call nucltransK(0.570,0.088,2.0e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(1.422,82.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,TL208.

	subroutine Tl208(tcnuc,tdnuc)
c Scheme of Tl208 decay ("Table of Isotopes", 7th ed., 1978).
c Four-figured labels correspond to energies of 208Pb excited
c levels in keV.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 27.07.1992, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=183.18
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 0.052) go to 4481   !  0.052%
	if(pbeta.le. 0.069) go to 4383   !  0.017%
	if(pbeta.le. 0.112) go to 4358   !  0.043%
	if(pbeta.le. 0.194) go to 4296   !  0.082%
	if(pbeta.le. 0.414) go to 4180   !  0.220%
	if(pbeta.le. 0.574) go to 4125   !  0.160%
	if(pbeta.le. 0.581) go to 3996   !  0.007%
	if(pbeta.le. 3.681) go to 3961   !  3.100%
	if(pbeta.le. 3.721) go to 3946   !  0.040%
	if(pbeta.le. 4.291) go to 3920   !  0.570%
	if(pbeta.le.27.091) go to 3709   ! 22.800%
	if(pbeta.le.48.791) go to 3475   ! 21.700%
	if(pbeta.le.99.970) go to 3198   ! 51.179%
	                    go to 2615   !  0.030%
c-----------------------------------------------------------------------
4481	call beta(0.511,82.,0.,0.,t)
	thlev=0. 
	call nucltransK(1.283,0.088,8.5e-3,0.5e-4,tclev,thlev,tdlev)
	go to 31980
c-----------------------------------------------------------------------
4383	call beta(0.609,82.,0.,0.,t)
	thlev=0. 
	call nucltransK(1.185,0.088,1.1e-2,0.3e-4,tclev,thlev,tdlev)
	go to 31980
c-----------------------------------------------------------------------
4358	call beta(0.634,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 5.) go to 43581   !  5%
	if(p.le.30.) go to 43582   ! 25%
	             go to 43583   ! 70%
43581	call nucltransK(1.744,0.088,4.0e-3,1.5e-4,tclev,thlev,tdlev)
	go to 26150
43582	call nucltransK(1.161,0.088,1.1e-2,0.3e-4,tclev,thlev,tdlev)
	go to 31980
43583	call nucltransK(0.883,0.088,2.2e-2,0.,tclev,thlev,tdlev)
	go to 34750
c-----------------------------------------------------------------------
4296	call beta(0.696,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.50.) go to 42961   ! 50%
	             go to 42962   ! 50%
42961	call nucltransK(0.821,0.088,2.6e-2,0.,tclev,thlev,tdlev)
	go to 34750
42962	call nucltransK(0.589,0.088,6.5e-2,0.,tclev,thlev,tdlev)
	go to 37090
c-----------------------------------------------------------------------
4180	call beta(0.812,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.90.) go to 41801   ! 90%
                     go to 41802   ! 10%
41801	call nucltransK(0.983,0.088,1.7e-2,0.,tclev,thlev,tdlev)
	go to 31980
41802	call nucltransK(0.705,0.088,4.0e-2,0.,tclev,thlev,tdlev)
	go to 34750
c-----------------------------------------------------------------------
4125	call beta(0.867,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.78.) go to 41251   ! 78%
	             go to 41252   ! 22%
41251	call nucltransK(0.928,0.088,1.9e-2,0.,tclev,thlev,tdlev)
	go to 31980
41252	call nucltransK(0.650,0.088,5.0e-2,0.,tclev,thlev,tdlev)
	go to 34750
c-----------------------------------------------------------------------
3996	call beta(0.996,82.,0.,0.,t)
	thlev=0. 
	call nucltransK(1.381,0.088,8.0e-3,0.6e-4,tclev,thlev,tdlev)
	go to 26150
c-----------------------------------------------------------------------
3961	call beta(1.031,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.66.) go to 39611   ! 66%
	if(p.le.68.) go to 39612   !  2%
                     go to 39613   ! 32%
39611	call nucltransK(0.763,0.088,3.1e-2,0.,tclev,thlev,tdlev)
	go to 31980
39612	call nucltransK(0.486,0.088,0.21,0.,tclev,thlev,tdlev)
	go to 34750
39613	call nucltransK(0.253,0.088,0.69,0.,tclev,thlev,tdlev)
	go to 37090
c-----------------------------------------------------------------------
3946	call beta(1.046,82.,0.,0.,t)
	thlev=0. 
	call nucltransK(0.749,0.088,3.5e-2,0.,tclev,thlev,tdlev)
	go to 31980
c-----------------------------------------------------------------------
3920	call beta(1.072,82.,0.,0.,t)
	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.54.) go to 39201   ! 54%
                     go to 39202   ! 46%
39201	call nucltransK(0.722,0.088,3.6e-2,0.,tclev,thlev,tdlev)
	go to 31980
39202	call nucltransK(0.211,0.088,1.,0.,tclev,thlev,tdlev)
	go to 37090
c-----------------------------------------------------------------------
3709	call beta(1.283,82.,0.,0.,t)
37090	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le. 1.7) go to 37091   !  1.7%
	if(p.le.98.6) go to 37092   ! 96.9%
	              go to 37093   !  1.4%
37091	call nucltransK(1.094,0.088,0.5e-2,0.,tclev,thlev,tdlev)
	go to 26150
37092	call nucltransK(0.511,0.088,0.1,0.,tclev,thlev,tdlev)
	go to 31980
37093	call nucltransK(0.233,0.088,0.8,0.,tclev,thlev,tdlev)
	go to 34750
c-----------------------------------------------------------------------
3475	call beta(1.517,82.,0.,0.,t)
34750	thlev=4.e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.64.) go to 34751   ! 64%
	             go to 34752   ! 36%
34751	call nucltransK(0.860,0.088,2.9e-2,0.,tclev,thlev,tdlev)
	go to 26150
34752	call nucltransK(0.277,0.088,0.45,0.,tclev,thlev,tdlev)
	go to 31980
c-----------------------------------------------------------------------
3198	call beta(1.794,82.,0.,0.,t)
31980	thlev=0.29e-9
	call nucltransK(0.583,0.088,2.0e-2,0.,tclev,thlev,tdlev)
	go to 26150
c-----------------------------------------------------------------------
2615	call beta(2.377,82.,0.,0.,t)
26150	thlev=17.e-12
	call nucltransK(2.615,0.088,2.4e-3,4.3e-4,tclev,thlev,tdlev)
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,XE133.

	subroutine Xe133(tcnuc,tdnuc)
c Scheme of Xe133 decay ("Table of Isotopes", 8th ed., 1996).
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 18.08.1997.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=452995.2
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le. 0.008) go to 384
	if(pbeta.le. 0.818) go to 161
	                    go to  81
c-----------------------------------------------------------------------
384	call beta(0.044,55.,0.,0.,t)
38400	thlev=21.e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.32.787) go to 38401
	if(p.le.98.361) go to 38402
	                go to 38403 
38401	call nucltransK(0.384,0.036,2.0e-2,0.,tclev,thlev,tdlev)
	return
38402	call nucltransK(0.303,0.036,4.5e-2,0.,tclev,thlev,tdlev)
	go to 81000
38403	call nucltransK(0.223,0.036,1.0e-1,0.,tclev,thlev,tdlev)
	go to 16100
c-----------------------------------------------------------------------
161	call beta(0.267,55.,0.,0.,t)
16100	thlev=190.e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.19.643) go to 16101
	                go to 16102
16101	call nucltransK(0.161,0.036,2.4e-1,0.,tclev,thlev,tdlev)
	return
16102	call nucltransK(0.080,0.036,1.6e+0,0.,tclev,thlev,tdlev)
	go to 81000
c-----------------------------------------------------------------------
81	call beta(0.346,55.,0.,0.,t)
81000	thlev=6.27e-9
	call nucltransK(0.081,0.036,1.6e+0,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,Y88.

	subroutine Y88(tcnuc,tdnuc)
c Scheme of Y88 decay ("Table of Isotopes", 7th ed., 1978).
c Accuracy in description of: decay branches       - 0.001%,
c                           : deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 20.07.1993, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=9210240.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pdecay=100.*rndm(2)
	if(pdecay.le.99.79) go to 1
	                    go to 2
c----------------------------------------------------------------------- 
c EC to Sr88
1	call gamma(0.016,0.,0.,t)
	pec=pdecay
	if(pec.le. 0.07) go to 35850
	if(pec.le. 0.10) go to 32190
	if(pec.le.91.89) go to 27340
	                 go to 18360
c----------------------------------------------------------------------- 
c b+ to Sr88
2	call beta(0.755,-38.,0.,0.,t)
	go to 18360
c-----------------------------------------------------------------------
35850	thlev=0. 
	call nucltransK(0.851,0.016,1.0e-3,0.,tclev,thlev,tdlev)
	go to 27340
c-----------------------------------------------------------------------
32190	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.22.) go to 32191
	if(p.le.97.) go to 32192
	             go to 32193 
32191	call nucltransK(3.219,0.016,8.0e-5,8.7e-4,tclev,thlev,tdlev)
	return
32192	call nucltransK(1.382,0.016,3.2e-4,0.1e-4,tclev,thlev,tdlev)
	go to 18360
32193	call nucltransK(0.485,0.016,1.4e-3,0.,tclev,thlev,tdlev)
	go to 27340
c-----------------------------------------------------------------------
27340	thlev=0.7e-12
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.0.7) go to 27341
	             go to 27342
27341	call nucltransK(2.734,0.016,1.6e-4,4.5e-4,tclev,thlev,tdlev)
	return
27342	call nucltransK(0.898,0.016,3.0e-4,0.,tclev,thlev,tdlev)
	go to 18360
c-----------------------------------------------------------------------
18360	thlev=0.16e-12
	call nucltransK(1.836,0.016,1.4e-4,1.1e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,Y90.

	subroutine Y90(tcnuc,tdnuc)
c Scheme of Y90 decay ("Table of Isotopes", 7th ed., 1978).
c Accuracy in description of: decay branches       - 0.001%,
c                           : deexcitation process - 0.001%.
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 9.08.1993, 22.10.1995.
        dimension rndm(2)
        call grndm(rndm,2) 
	thnuc=230760.
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm(1))
	tclev=0.
	pbeta=100.*rndm(2)
	if(pbeta.le.0.011) go to  1761
	                   go to 10000
c-----------------------------------------------------------------------
1761	call beta(0.523,40.,0.,0.,t)
17610	thlev=61.e-9
        call grndm(rndm,1) 
	p=100.*rndm(1)
	if(p.le.25.) go to 17611
	             go to 17612
17611	call pair(0.739,tclev,thlev,tdlev)
	return
17612	call electron(1.743,tclev,thlev,tdlev)
	call gamma(0.018,0.,0.,tdlev)
	return
c-----------------------------------------------------------------------
10000	call beta(2.284,40.,0.,0.,t)
	return
c-----------------------------------------------------------------------
	end

c***********************************************************************
+DECK,ZR96.

	subroutine Zr96(tcnuc,tdnuc)
c Scheme of Zr96 beta decay ("Table of Isotopes", 8th ed., 1996).
c Beta decay is supposed to ground state of Nb96. For half-life, its
c limit 3.8e19 y is accepted. 
c Input : tcnuc - time of creation of nucleus (sec);
c Output: tdnuc - time of decay of nucleus (sec);
c         common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 07.05.1998.
	thnuc=1.199156e27
        call grndm(rndm,1) 
	tdnuc=tcnuc-thnuc/alog(2.)*alog(rndm)
	call beta(0.164,41.,0.,0.,t)
	return
	end

c***********************************************************************

c***********************************************************************
c***************** Section of daughter 2b isotopes *********************
c***********************************************************************

c***********************************************************************
+DECK,TI48LOW.

	subroutine Ti48low(levelkeV)
c Subroutine describes the deexcitation process in Ti48 nucleus
c after 2b-decay of Ca48 to ground and excited 0+ and 2+ levels
c of Ti48 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Ti48low(levelkeV)
c Input : levelkeV - energy of Ti48 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  984 keV,
c                    2+(2)  - 2421 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 19.07.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.2421) go to  2421
	if(levelkev.eq. 984) go to   984
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
2421	thlev=24.e-15
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.8.) go to 24211
	            go to 24212
24211	call nucltransK(2.421,0.005,1.5e-5,5.0e-4,tclev,thlev,tdlev)
	return
24212	call nucltransK(1.437,0.005,3.1e-5,1.8e-4,tclev,thlev,tdlev)
	go to 984
c-----------------------------------------------------------------------
984	thlev=4.3e-12
	call nucltransK(0.984,0.005,1.2e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Ti48: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,FE58LOW.

	subroutine Fe58low(levelkeV)
c Subroutine describes the deexcitation process in Fe58 nucleus
c after 2b-decay of Ni58 to ground and excited 0+ and 2+ levels
c of Fe58 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Fe58low(levelkeV)
c Input : levelkeV - energy of Fe58 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  811 keV,
c                    2+(2)  - 1675 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.1675) go to  1675
	if(levelkev.eq. 811) go to   811
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1675	thlev=0.
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.43.) go to 16751
	             go to 16752
16751	call nucltransK(1.675,0.007,1.0e-4,0.6e-4,tclev,thlev,tdlev)
	return
16752	call nucltransK(0.864,0.007,3.0e-4,0.,tclev,thlev,tdlev)
	go to 811
c-----------------------------------------------------------------------
811	thlev=9.0e-12
	call nucltransK(0.811,0.007,5.0e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Fe58: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,SE76LOW.

	subroutine Se76low(levelkeV)
c Subroutine describes the deexcitation process in Se76 nucleus
c after 2b-decay of Ge76 to ground and excited 0+ and 2+ levels
c of Se76 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Se76low(levelkeV)
c Input : levelkeV - energy of Se76 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  559 keV,
c                    0+(1)  - 1122 keV,
c                    2+(2)  - 1216 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 19.07.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1216) go to  1216
	if(levelkev.eq.1122) go to  1122
	if(levelkev.eq. 559) go to   559
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1216	thlev=3.4e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.36.) go to 12161
	             go to 12162
12161	call nucltransK(1.216,0.013,4.3e-4,0.1e-4,tclev,thlev,tdlev)
	return
12162	call nucltransK(0.657,0.013,2.1e-3,0.,tclev,thlev,tdlev)
	go to 559
c-----------------------------------------------------------------------
1122	thlev=11.e-12
	call nucltransK(0.563,0.013,2.0e-3,0.,tclev,thlev,tdlev)
	go to 559
c-----------------------------------------------------------------------
559	thlev=12.3e-12
	call nucltransK(0.559,0.013,2.0e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Se76: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,GE74LOW.

	subroutine Ge74low(levelkeV)
c Subroutine describes the deexcitation process in Ge74 nucleus
c after 2b-decay of Se74 to ground and excited 0+ and 2+ levels
c of Ge74 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Ge74low(levelkeV)
c Input : levelkeV - energy of Ge74 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  596 keV,
c                    2+(2)  - 1204 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.1204) go to  1204
	if(levelkev.eq. 596) go to   596
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1204	thlev=6.0e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.34.) go to 12041
	             go to 12042
12041	call nucltransK(1.204,0.011,1.9e-4,0.1e-4,tclev,thlev,tdlev)
	return
12042	call nucltransK(0.608,0.011,1.1e-3,0.,tclev,thlev,tdlev)
	go to 596
c-----------------------------------------------------------------------
596	thlev=12.0e-12
	call nucltransK(0.596,0.011,1.1e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Ge74: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,KR82LOW.

	subroutine Kr82low(levelkeV)
c Subroutine describes the deexcitation process in Kr82 nucleus
c after 2b-decay of Se82 to ground and excited 0+ and 2+ levels
c of Kr82 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Kr82low(levelkeV)
c Input : levelkeV - energy of Kr82 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  776 keV,
c                    2+(2)  - 1475 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1475) go to  1475
	if(levelkev.eq. 776) go to   776
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1475	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.36.7) go to 14751
	              go to 14752
14751	call nucltransK(1.475,0.014,2.0e-4,0.5e-4,tclev,thlev,tdlev)
	return
14752	call nucltransK(0.698,0.014,1.3e-3,0.,tclev,thlev,tdlev)
	go to 776
c-----------------------------------------------------------------------
776	thlev=5.e-12
	call nucltransK(0.776,0.014,9.3e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Kr82: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,MO94LOW.

	subroutine Mo94low(levelkeV)
c Subroutine describes the deexcitation process in Mo94 nucleus
c after 2b-decay of Zr94 to ground and excited 0+ and 2+ levels
c of Mo94 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Mo94low(levelkeV)
c Input : levelkeV - energy of Mo94 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  871 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq. 871) go to   871
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
871	thlev=2.9e-12
	call nucltransK(0.871,0.020,9.5e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Mo94: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,MO96LOW.

	subroutine Mo96low(levelkeV)
c Subroutine describes the deexcitation process in Mo96 nucleus
c after 2b-decay of Zr96 to ground and excited 0+ and 2+ levels
c of Mo96 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Mo96low(levelkeV)
c Input : levelkeV - energy of Mo96 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  778 keV,
c                    0+(1)  - 1148 keV,
c                    2+(2)  - 1498 keV,
c                    2+(3)  - 1626 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1626) go to  1626
	if(levelkev.eq.1498) go to  1498
	if(levelkev.eq.1148) go to  1148
	if(levelkev.eq. 778) go to   778
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1626	thlev=1.4e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le. 4.0) go to 16261
	if(p.le.98.8) go to 16262
	if(p.le.99.0) go to 16263
	              go to 16264
16261	call nucltransK(1.626,0.020,2.5e-4,0.6e-4,tclev,thlev,tdlev)
	return
16262	call nucltransK(0.848,0.020,1.0e-3,0.,tclev,thlev,tdlev)
	go to 778
16263	call nucltransK(0.478,0.020,4.7e-3,0.,tclev,thlev,tdlev)
	go to 1148
16264	call nucltransK(0.128,0.020,8.0e-2,0.,tclev,thlev,tdlev)
	go to 1498
c-----------------------------------------------------------------------
1498	thlev=0.7e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.29.) go to 14981
	             go to 14982
14981	call nucltransK(1.498,0.020,3.1e-4,0.5e-4,tclev,thlev,tdlev)
	return
14982	call nucltransK(0.720,0.020,1.3e-3,0.,tclev,thlev,tdlev)
	go to 778
c-----------------------------------------------------------------------
1148	thlev=0.06e-9
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.0.16) go to 11481
	              go to 11482
11481	call electron(1.148-0.020,tclev,thlev,tdlev) ! only ec
	call gamma(0.020,0.,0.,tdlev)
	return
11482	call nucltransK(0.370,0.020,1.1e-2,0.,tclev,thlev,tdlev)
	go to 778
c-----------------------------------------------------------------------
778	thlev=3.7e-12
	call nucltransK(0.778,0.020,1.2e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Mo96: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,ZR92LOW.

	subroutine Zr92low(levelkeV)
c Subroutine describes the deexcitation process in Zr92 nucleus
c after 2b-decay of Mo92 to ground and excited 0+ and 2+ levels
c of Zr92 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Zr92low(levelkeV)
c Input : levelkeV - energy of Zr92 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  934 keV,
c                    2+(2)  - 1383 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.1383) go to  1383
	if(levelkev.eq. 934) go to   934
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1383	thlev=0.17e-9
	call nucltransK(0.449,0.018,5.5e-3,0.,tclev,thlev,tdlev)
	go to 934
c-----------------------------------------------------------------------
934	thlev=5.0e-12
	call nucltransK(0.934,0.018,8.0e-4,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Zr92: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,RU100LOW.

	subroutine Ru100low(levelkeV)
c Subroutine describes the deexcitation process in Ru100 nucleus
c after 2b-decay of Mo100 to ground and excited 0+ and 2+ levels
c of Ru100 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Ru100low(levelkeV)
c Input : levelkeV - energy of Ru100 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  540 keV,
c                    0+(1)  - 1130 keV,
c                    2+(2)  - 1362 keV,
c                    0+(2)  - 1741 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1741) go to  1741
	if(levelkev.eq.1362) go to  1362
	if(levelkev.eq.1130) go to  1130
	if(levelkev.eq. 540) go to   540
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1741	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le. 0.05) go to 17411
	if(p.le.59.00) go to 17412
	if(p.le.59.03) go to 17413
	               go to 17414
17411	call electron(1.741-0.022,tclev,thlev,tdlev)    ! only ec
	call gamma(0.022,0.,0.,tdlev)
	return
17412	call nucltransK(1.201,0.022,6.2e-4,0.1e-4,tclev,thlev,tdlev)
	go to 540
17413	call electron(0.611-0.022,tclev,thlev,tdlev)    ! only ec
	call gamma(0.022,0.,0.,tdlev)
	go to 1130
17414	call nucltransK(0.379,0.022,1.3e-2,0.,tclev,thlev,tdlev)
	go to 1362
c-----------------------------------------------------------------------
1362	thlev=1.2e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.43.) go to 13621
	             go to 13622
13621	call nucltransK(1.362,0.022,4.2e-4,0.2e-4,tclev,thlev,tdlev)
	return
13622	call nucltransK(0.822,0.022,1.7e-3,0.,tclev,thlev,tdlev)
	go to 540
c-----------------------------------------------------------------------
1130	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.0.02) go to 11301
	              go to 11302
11301	call electron(1.130-0.022,tclev,thlev,tdlev) ! only ec
	call gamma(0.022,0.,0.,tdlev)
	return
11302	call nucltransK(0.591,0.022,3.3e-3,0.,tclev,thlev,tdlev)
	go to 540
c-----------------------------------------------------------------------
540	thlev=11.e-12
	call nucltransK(0.540,0.022,4.4e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Ru100: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,PD106LOW.

	subroutine Pd106low(levelkeV)
c Subroutine describes the deexcitation process in Pd106 nucleus
c after 2b-decay of Cd106 to ground and excited 0+ and 2+ levels
c of Pd106 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Pd106low(levelkeV)
c Input : levelkeV - energy of Pd106 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  512 keV,
c                    2+(2)  - 1128 keV,
c                    0+(1)  - 1134 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.1134) go to  1134
	if(levelkev.eq.1128) go to  1128
	if(levelkev.eq. 512) go to   512
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1134	thlev=7.0e-12
	call nucltransK(0.622,0.024,3.3e-3,0.,tclev,thlev,tdlev)
	go to 512
c-----------------------------------------------------------------------
1128	thlev=3.2e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.34.) go to 11281
	             go to 11282
11281	call nucltransK(1.128,0.024,7.0e-4,0.,tclev,thlev,tdlev)
	return
11282	call nucltransK(0.616,0.024,3.0e-3,0.,tclev,thlev,tdlev)
	go to 512
c-----------------------------------------------------------------------
512	thlev=11.0e-12
	call nucltransK(0.512,0.024,5.5e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Pd106: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,SN114LOW.

	subroutine Sn114low(levelkeV)
c Subroutine describes the deexcitation process in Sn114 nucleus
c after 2b-decay of Cd114 to ground and excited 0+ and 2+ levels
c of Sn114 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Sn114low(levelkeV)
c Input : levelkeV - energy of Sn114 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Sn114: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,SN116LOW.

	subroutine Sn116low(levelkeV)
c Subroutine describes the deexcitation process in Sn116 nucleus
c after 2b-decay of Cd116 to ground and excited 0+ and 2+ levels
c of Sn116 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Sn116low(levelkeV)
c Input : levelkeV - energy of Sn116 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  - 1294 keV,
c                    0+(1)  - 1757 keV,
c                    0+(2)  - 2027 keV,
c                    2+(2)  - 2112 keV,
c                    2+(3)  - 2225 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.2225) go to  2225
	if(levelkev.eq.2112) go to  2112
	if(levelkev.eq.2027) go to  2027
	if(levelkev.eq.1757) go to  1757
	if(levelkev.eq.1294) go to  1294
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
2225	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.37.) go to 22251
	             go to 22252
22251	call nucltransK(2.225,0.029,2.7e-4,3.4e-4,tclev,thlev,tdlev)
	return
22252	call nucltransK(0.932,0.029,1.5e-3,0.,tclev,thlev,tdlev)
	go to 1294
c-----------------------------------------------------------------------
2112	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.54.9) go to 21121
	if(p.le.96.9) go to 21122
	              go to 21123
21121	call nucltransK(2.112,0.029,3.1e-4,2.7e-4,tclev,thlev,tdlev)
	return
21122	call nucltransK(0.819,0.029,2.6e-3,0.,tclev,thlev,tdlev)
	go to 1294
21123	call nucltransK(0.355,0.029,1.8e-2,0.,tclev,thlev,tdlev)
	go to 1757
c-----------------------------------------------------------------------
2027	thlev=0. 
	call nucltransK(0.733,0.029,2.7e-3,0.,tclev,thlev,tdlev)
	go to 1294
c-----------------------------------------------------------------------
1757	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.0.29) go to 17571
	              go to 17572
17571	call electron(1.757-0.029,tclev,thlev,tdlev) ! only ec
	call gamma(0.029,0.,0.,tdlev)
	return
17572	call nucltransK(0.463,0.029,9.0e-3,0.,tclev,thlev,tdlev)
	go to 1294
c-----------------------------------------------------------------------
1294	thlev=0.36e-12
	call nucltransK(1.294,0.029,7.5e-4,0.5e-4,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Sn116: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,XE130LOW.

	subroutine Xe130low(levelkeV)
c Subroutine describes the deexcitation process in Xe130 nucleus
c after 2b-decay of Te130 to ground 0+ and excited 2+ levels
c of Xe130 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Xe130low(levelkeV)
c Input : levelkeV - energy of Xe130 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  536 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 20.06.1996.
	tclev=0.
	if(levelkev.eq. 536) go to   536
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
536	thlev=7.0e-12
	call nucltransK(0.536,0.035,8.0e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Xe130: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,BA136LOW.

	subroutine Ba136low(levelkeV)
c Subroutine describes the deexcitation process in Ba136 nucleus
c after 2b-decay of Xe136 to ground and excited 0+ and 2+ levels
c of Ba136 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Ba136low(levelkeV)
c Input : levelkeV - energy of Ba136 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  819 keV,
c                    2+(2)  - 1551 keV,
c                    0+(1)  - 1579 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1579) go to  1579
	if(levelkev.eq.1551) go to  1551
	if(levelkev.eq. 819) go to   819
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1579	thlev=0. 
	call nucltransK(0.761,0.037,3.2e-3,0.,tclev,thlev,tdlev)
	go to 819
c-----------------------------------------------------------------------
1551	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.50.) go to 15511
	             go to 15512
15511	call nucltransK(1.551,0.037,7.5e-4,0.5e-4,tclev,thlev,tdlev)
	return
15512	call nucltransK(0.733,0.037,3.5e-3,0.,tclev,thlev,tdlev)
	go to 819
c-----------------------------------------------------------------------
819	thlev=1.9e-12
	call nucltransK(0.819,0.037,2.6e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Ba136: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,SM148LOW.

	subroutine Sm148low(levelkeV)
c Subroutine describes the deexcitation process in Sm148 nucleus
c after 2b-decay of Nd148 to ground and excited 0+ and 2+ levels
c of Sm148 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Sm148low(levelkeV)
c Input : levelkeV - energy of Sm148 level (integer in keV) occupied 
c                    initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  550 keV,
c                    2+(2)  - 1455 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 30.11.1995.
	tclev=0.
	if(levelkev.eq.1455) go to  1455
	if(levelkev.eq. 550) go to   550
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1455	thlev=0.6e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.42.) go to 14551
	             go to 14552
14551	call nucltransK(1.455,0.047,1.1e-3,0.3e-4,tclev,thlev,tdlev)
	return
14552	call nucltransK(0.904,0.047,2.8e-3,0.,tclev,thlev,tdlev)
	go to 550
c-----------------------------------------------------------------------
550	thlev=7.3e-12
	call nucltransK(0.550,0.047,9.0e-3,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Sm148: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************
+DECK,SM150LOW.

	subroutine Sm150low(levelkeV)
c Subroutine describes the deexcitation process in Sm150 nucleus
c after 2b-decay of Nd150 to ground and excited 0+ and 2+ levels
c of Sm150 ("Table of Isotopes", 7th ed., 1978).
c Call  : call Sm150low(levelkeV)
c Input : levelkeV - energy of Sm150 level (integer in keV) occupied 
c	             initially; following levels can be occupied:
c                    0+(gs) -    0 keV,
c                    2+(1)  -  334 keV,
c                    0+(1)  -  740 keV,
c                    2+(2)  - 1046 keV,
c                    2+(3)  - 1194 keV,
c                    0+(2)  - 1256 keV.
c Output: common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100).
c VIT, 28.06.1993, 22.10.1995.
	tclev=0.
	if(levelkev.eq.1256) go to  1256
	if(levelkev.eq.1194) go to  1194
	if(levelkev.eq.1046) go to  1046
	if(levelkev.eq. 740) go to   740
	if(levelkev.eq. 334) go to   334
	if(levelkev.eq.   0) go to 10000
	                     go to 20000
c-----------------------------------------------------------------------
1256	thlev=0. 
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.93.) go to 12561
	             go to 12562
12561	call nucltransK(0.922,0.047,2.6e-3,0.,tclev,thlev,tdlev)
	go to 334
12562	call nucltransK(0.210,0.047,1.7e-1,0.,tclev,thlev,tdlev)
	go to 1046
c-----------------------------------------------------------------------
1194	thlev=1.3e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.55.9) go to 11941
	if(p.le.96.9) go to 11942
	if(p.le.98.7) go to 11943
	              go to 11944
11941	call nucltransK(1.194,0.047,1.6e-3,0.1e-4,tclev,thlev,tdlev)
	return
11942	call nucltransK(0.860,0.047,3.2e-3,0.,tclev,thlev,tdlev)
	go to 334
11943	call nucltransK(0.453,0.047,1.5e-2,0.,tclev,thlev,tdlev)
	go to 740
11944	call nucltransK(0.420,0.047,1.9e-2,0.,tclev,thlev,tdlev)
	go to 773
c-----------------------------------------------------------------------
1046	thlev=0.7e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le. 7.0) go to 10461
	if(p.le.94.3) go to 10462
	if(p.le.97.0) go to 10463
	              go to 10464
10461	call nucltransK(1.046,0.047,2.0e-3,0.,tclev,thlev,tdlev)
	return
10462	call nucltransK(0.712,0.047,7.6e-3,0.,tclev,thlev,tdlev)
	go to 334
10463	call nucltransK(0.306,0.047,4.9e-2,0.,tclev,thlev,tdlev)
	go to 740
10464	call nucltransK(0.273,0.047,7.0e-2,0.,tclev,thlev,tdlev)
	go to 773
c-----------------------------------------------------------------------
773	thlev=6.6e-12
	call nucltransK(0.439,0.047,1.7e-2,0.,tclev,thlev,tdlev)
	go to 334
c-----------------------------------------------------------------------
740	thlev=20.e-12
        call grndm(rndm,1) 
	p=100.*rndm
	if(p.le.92.) go to 74001
	             go to 74002
74001	call electron(0.740-0.047,tclev,thlev,tdlev) ! only ec
	call gamma(0.047,0.,0.,tdlev)
	return
74002	call nucltransK(0.407,0.047,2.0e-2,0.,tclev,thlev,tdlev)
	go to 334
c-----------------------------------------------------------------------
334	thlev=48.5e-12
	call nucltransK(0.334,0.047,3.7e-2,0.,tclev,thlev,tdlev)
	return
c-----------------------------------------------------------------------
10000	return
c-----------------------------------------------------------------------
20000	print *,'Sm150: wrong level [keV] ',levelkev
c-----------------------------------------------------------------------
	return
	end

c***********************************************************************

c***********************************************************************
c***************** Section of working subroutines **********************
c***********************************************************************

c***********************************************************************

	block data
+SEQ,GENCONST.
c Particle masses (MeV) - in accordance with GEANT 3.21 manual of October, 
c 1994:
c        1 - gamma         2 - positron     3 - electron
c        4 - neutrino      5 - muon+        6 - muon-
c        7 - pion0         8 - pion+        9 - pion-
c       10 - kaon0 long   11 - kaon+       12 - kaon-
c       13 - neutron      14 - proton      15 - antiproton
c       16 - kaon0 short  17 - eta         18 - lambda
c       19 - sigma+       20 - sigma0      21 - sigma-
c       22 - xi0          23 - xi-         24 - omega
c       25 - antineutron  26 - antilambda  27 - antisigma-
c       28 - antisigma0   29 - antisigma+  30 - antixi0
c       31 - antixi+      32 - antiomega+  45 - deuteron
c       46 - tritium      47 - alpha       48 - geantino
c       49 - He3          50 - Cerenkov

	data pi/3.1415927/
	data emass/0.51099906/
	data datamass/
     +     0.,         0.51099906,   0.51099906, 0.,      105.658389, !  1 -  5
     +   105.658389, 134.9764,     139.5700,   139.5700,  497.672,    !  6 - 10
     +   493.677,    493.677,      939.56563,  938.27231, 938.27231,  ! 11 - 15
     +   497.672,    547.45,      1115.684,   1189.37,   1192.55,     ! 16 - 20
     +  1197.436,   1314.9,       1321.32,    1672.45,    939.56563,  ! 21 - 25
     +  1115.684,   1189.37,      1192.55,    1197.436,  1314.9,      ! 26 - 30
     +  1321.32,    1672.45,         0.,         0.,        0.,       ! 31 - 35
     +     0.,         0.,           0.,         0.,        0.,       ! 35 - 40
     +     0.,         0.,           0.,         0.,     1875.613,    ! 41 - 45
     +  2809.25,    3727.417,        0.,      2809.23,      0./       ! 46 - 50
	end

c***********************************************************************
+DECK,GENGAMMA.
	subroutine gamma(E,tclev,thlev,tdlev)
c Generation of emission of gamma quantum with fixed energy 
c isotropically in the whole space.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call gamma(E,tclev,thlev,tdlev)
c Input : E     - kinetic energy of particle (MeV);
c         tclev - time of creation of level from which particle will be 
c                 emitted (sec);
c         thlev - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification (=1);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 15.10.1995.
+SEQ,GENCONST.
	call particle(1,E,E,0.,pi,0.,2.*pi,tclev,thlev,tdlev)
	return
	end

c***********************************************************************
+DECK,GENPOSITRON.
	subroutine positron(E,tclev,thlev,tdlev)
c Generation of emission of positron with fixed energy 
c isotropically in the whole space.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call positron(E,tclev,thlev,tdlev)
c Input : E     - kinetic energy of particle (MeV);
c         tclev - time of creation of level from which particle will be 
c                 emitted (sec);
c         thlev - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification (=2);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 15.10.1995.
+SEQ,GENCONST.
	call particle(2,E,E,0.,pi,0.,2.*pi,tclev,thlev,tdlev)
	return
	end

c***********************************************************************
+DECK,GENELECTRON.
	subroutine electron(E,tclev,thlev,tdlev)
c Generation of emission of electron with fixed energy 
c isotropically in the whole space.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call electron(E,tclev,thlev,tdlev)
c Input : E     - kinetic energy of particle (MeV);
c         tclev - time of creation of level from which particle will be 
c                 emitted (sec);
c         thlev - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification (=3);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 15.10.1995.
+SEQ,GENCONST.
	call particle(3,E,E,0.,pi,0.,2.*pi,tclev,thlev,tdlev)
	return
	end

c***********************************************************************
+DECK,GENALPHA.
	subroutine alpha(E,tclev,thlev,tdlev)
c Generation of emission of alpha particle with fixed energy 
c isotropically in the whole space.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call alpha(E,tclev,thlev,tdlev)
c Input : E     - kinetic energy of particle (MeV);
c         tclev - time of creation of level from which particle will be 
c                 emitted (sec);
c         thlev - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification (=47);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 15.10.1995.
+SEQ,GENCONST.
	call particle(47,E,E,0.,pi,0.,2.*pi,tclev,thlev,tdlev)
	return
	end

c***********************************************************************
+DECK,GENPARTICLE.
	subroutine particle(np,E1,E2,teta1,teta2,phi1,phi2,tclev,
     +                      thlev,tdlev)
c Generation of isotropical emission of particle in the range of
c energies and angles.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call particle(np,E1,E2,teta1,teta2,phi1,phi2,tclev,thlev,tdlev)
c Input : np          - GEANT number for particle identification:
c                        1 - gamma         2 - positron     3 - electron
c                        4 - neutrino      5 - muon+        6 - muon-
c                        7 - pion0         8 - pion+        9 - pion-
c                       10 - kaon0 long   11 - kaon+       12 - kaon-
c                       13 - neutron      14 - proton      15 - antiproton
c                       16 - kaon0 short  17 - eta         18 - lambda
c                       19 - sigma+       20 - sigma0      21 - sigma-
c                       22 - xi0          23 - xi-         24 - omega
c                       25 - antineutron  26 - antilambda  27 - antisigma-
c                       28 - antisigma0   29 - antisigma+  30 - antixi0
c                       31 - antixi+      32 - antiomega+  45 - deuteron
c                       46 - tritium      47 - alpha       48 - geantino
c                       49 - He3          50 - Cerenkov;
c         E1,E2       - range of kinetic energy of particle (MeV);
c         teta1,teta2 - range of teta angle (radians);
c         phi1,phi2   - range of phi  angle (radians);
c         tclev       - time of creation of level from which particle will be 
c                       emitted (sec);
c         thlev       - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (=np of input);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 15.10.1995.
+SEQ,GENCONST.
+SEQ,GENEVENT.
        dimension rndm(4)
        call grndm(rndm,4) 
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +    'PARTICLE: in event more than 100 particles ',npfull
d	if(np.lt.1.or.np.gt.50.or.(np.gt.32.and.np.lt.45)) print *,
d    1     'PARTICLE: unknown particle number ',np
	npgeant(npfull)=np
	pmass=datamass(np)
	phi=phi1+(phi2-phi1)*rndm(1)
	ctet1=1.
	if(teta1.ne.0.) ctet1=cos(teta1)
	ctet2=-1.
	if(teta2.ne.pi) ctet2=cos(teta2)
	ctet=ctet1+(ctet2-ctet1)*rndm(2)
	stet=sqrt(1.-ctet*ctet)
	E=E1
	if(E1.ne.E2) E=E1+(E2-E1)*rndm(3)
	p=sqrt(E*(E+2.*pmass))
	pmoment(1,npfull)=p*stet*cos(phi)
	pmoment(2,npfull)=p*stet*sin(phi)
	pmoment(3,npfull)=p*ctet
	tdlev=tclev
	if(thlev.gt.0.) tdlev=tclev-thlev/alog(2.)*alog(rndm(4))
	ptime(npfull)=tdlev
	return
	end

c***********************************************************************
+DECK,GENBETA.
	subroutine beta(Qbeta,Zdtr,tcnuc,thnuc,tdnuc)
c Subroutine beta simulates the angles and energy of beta particles
c emitted in beta decay of nucleus. The decay is considered as allowed.
c Only Coulomb correction to the shape of energy spectrum is taken 
c into consideration.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call beta(Qbeta,Zdtr,tcnuc,thnuc,tdnuc)
c Input : Qbeta    - beta energy endpoint (MeV; Qbeta>50 eV);
c         Zdtr     - atomic number of daughter nucleus (Zdtr>0 for e- and 
c                    Zdtr<0 for e+ particles);
c         tcnuc - time of creation of nucleus (sec);
c         thnuc - nucleus halflife (sec).
c Output: tdnuc               - time of decay of nucleus (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (2 for beta+ and 3 for beta- decay);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 30.07.1992; 15.10.1995.
	external funbeta
+SEQ,GENCONST.
+SEQ,GENPARBETA.
        dimension rndm(2)
	z=Zdtr
	q=Qbeta
	call tgold(50.e-6,Qbeta,funbeta,0.001*Qbeta,2,em,fm)
1       call grndm(rndm,2) 
	E=50.e-6+(Qbeta-50.e-6)*rndm(1)
	fe=funbeta(E)
	f=fm*rndm(2)
	if(f.gt.fe) go to 1
	if(Zdtr.ge.0.) np=3
	if(Zdtr.lt.0.) np=2
c isotropical emission of beta particle is supposed
	call particle(np,E,E,0.,pi,0.,2.*pi,tcnuc,thnuc,tdnuc)
	return
	end

c***********************************************************************
+DECK,FUNBETA.
	function funbeta(E)
c Function to search the maximum of beta spectrum curve by tgold 
c subroutine.
c VIT, 30.07.1992; 15.10.1995.
+SEQ,GENCONST.
+SEQ,GENPARBETA.
        Zdtr=z
        Qbeta=q
	funbeta=sqrt(E*(E+2.*emass))*(E+emass)*(Qbeta-E)**2
     +         *fermi(Zdtr,E)
	return
	end

C***********************************************************************
+DECK,FERMI.
	real*4 function fermi(Z,E)
c Function fermi calculates the traditional function of Fermi in
c theory of beta decay to take into account the Coulomb correction
c to the shape of electron/positron energy spectrum.
c Call  : corr=fermi(Z,E)
c Input : Z - atomic number of daughter nuclei (>0 for e-, <0 for e+);
c         E - kinetic energy of particle (MeV; E>50 eV).
c Output: corr - value of correction factor (without normalization -
c                constant factors are removed - for MC simulation).
c V.I.Tretyak, 15.07.1992.
	complex carg,cgamma
	if(E.lt.50.e-6) E=50.e-6
	alfaz=Z/137.036
	w=E/0.511+1.
	p=sqrt(w*w-1.)
	y=alfaz*w/p
	g=sqrt(1.-alfaz**2)
	carg=cmplx(g,y)
	fermi=p**(2.*g-2.)*exp(3.1415927*y+2.*alog(cabs(cgamma(carg))))
	return
	end

c***********************************************************************
+DECK,TGOLD.
	subroutine tgold(a,b,f,eps,minmax,xextr,fextr)
c Subroutine tgold determines maximum or minimum of the function f(x) in
c the interval [a,b] by the gold section method.
c Call : 	external f
c		call tgold(a,b,f,eps,minmax,xextr,fextr)
c Input:	a,b    - beginning and the end of the interval [a,b];
c 		f      - name of the external function; should be as
c                        function f(x), and additional parameters have
c                        to be transmitted with help of common blocks;
c		eps    - desired uncertainty of xextr determination;
c		minmax - if minmax = 1 minimum of f(x) is searched,
c		                   = 2 maximum of f(x) is searched.
c Output:	xextr  - x-point of extremum;
c		fextr  - f(xextr).
c V.Tretyak, 25.09.1985.
	qc=0.61803395
	al=a
	bl=b
	xp=al+(bl-al)*qc
	xl=bl-(bl-al)*qc
	yp=f(xp)
	yl=f(xl)
3	goto (4,5) minmax
4	if(yp.lt.yl) goto 1
	goto 6
5	if(yp.gt.yl) goto 1
6	bl=xp
	xp=xl
	yp=yl
	xl=bl-(bl-al)*qc
	yl=f(xl)
	goto 2
1	al=xl
	xl=xp
	yl=yp
	xp=al+(bl-al)*qc
	yp=f(xp)
2	if((bl-al).gt.eps) goto 3
	xextr=0.5*(al+bl)
	fextr=f(xextr)
	return
	end

c***********************************************************************
+DECK,GENPAIR.
	subroutine pair(Epair,tclev,thlev,tdlev)
c Generation of e+e- pair in zero-approximation to real subroutine for 
c INTERNAL pair creation:
c    1) energy of e+ is equal to the energy of e-;
c    2) e+ and e- are emitted in the same direction.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call pair(Epair,tclev,thlev,tdlev)
c Input:  Epair - kinetic energy of e+e- pair (MeV);
c         tclev - time of creation of level from which pair will be 
c                 emitted (sec);
c         thlev - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of last particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (2 for e+ and 3 for e-);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 3.08.1992; 15.10.1995.
+SEQ,GENCONST.
        dimension rndm(2)
        call grndm(rndm,2) 
	phi=2.*pi*rndm(1)
	ctet=-1.+2.*rndm(2)
	teta=acos(ctet)
	E=0.5*Epair
	call particle(2,E,E,teta,teta,phi,phi,tclev,thlev,tdlev)
c	call particle(3,E,E,teta,teta,phi,phi,tdlev,0.,tdlev)  ! for real time
	call particle(3,E,E,teta,teta,phi,phi,0.,0.,tdlev)     ! for time shift
	return
	end

c***********************************************************************
+DECK,NUCLTRANSK.
	subroutine nucltransK(Egamma,Ebinde,conve,convp,tclev,
     +                        thlev,tdlev)
c Subroutine nucltransK choise one of the three concurent processes
c by which the transition from one nuclear state to another is 
c occured: gamma-ray emission, internal conversion and internal
c pair creation. Conversion electrons are emitted only with one fixed energy 
c (usually with Egamma-E(K)_binding_energy).
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call nucltransK(Egamma,Ebinde,conve,convp,tclev,thlev,tdlev)
c Input : Egamma - gamma-ray energy (MeV) [=difference in state energies];
c         Ebinde - binding energy of electron (MeV);
c         conve  - internal electron conversion coefficient [=Nelectron/Ngamma];
c         convp  - pair conversion coefficient [=Npair/Ngamma];
c         tclev  - time of creation of level from which particle will be 
c                  emitted (sec);
c         thlev  - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of last particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (1 for gamma, 2 for e+ and 3 for e-);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 27.07.1992; 15.10.1995.
+SEQ,GENCONST.

        call grndm(rndm,1) 
	p=(1.+conve+convp)*rndm
	if(p.le.1.) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.1.+conve) then
	   call electron(Egamma-Ebinde,tclev,thlev,tdlev)
c	   call gamma(Ebinde,tdlev,0.,tdlev)                ! for real time
	   call gamma(Ebinde,0.,0.,tdlev)                   ! for time shift
	else
	   call pair(Egamma-2.*emass,tclev,thlev,tdlev)
	end if
	return
	end

c***********************************************************************
+DECK,NUCLTRANSKL.
	subroutine nucltransKL(Egamma,EbindeK,conveK,EbindeL,conveL,
     +                         convp,tclev,thlev,tdlev)
c Subroutine nucltransKL choise one of the three concurent processes
c by which the transition from one nuclear state to another is 
c occured: gamma-ray emission, internal conversion and internal
c pair creation. Conversion electrons are emitted with two fixed energies
c (Egamma-E(K)_binding_energy and Egamma-E(L)_binding_energy).
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call nucltransKL(Egamma,EbindeK,conveK,EbindeL,conveL,convp,
c                          tclev,thlev,tdlev)
c Input:  Egamma  - gamma-ray energy (MeV) [=difference in state energies];
c         EbindeK - binding energy of electron (MeV) on K-shell;
c         conveK  - internal conversion coefficient [=Nelectron/Ngamma] from
c                   K-shell;
c         EbindeL - binding energy of electron (MeV) on L-shell;
c         conveL  - internal conversion coefficient [=Nelectron/Ngamma] from
c                   L-shell;
c         convp   - pair conversion coefficient [=Npair/Ngamma];
c         tclev   - time of creation of level from which particle will be 
c                   emitted (sec);
c         thlev   - level halflife (sec).
c Output: tdlev               - time of decay of level (sec);
c         tevst               - time of event's start (sec);
c         npfull              - current number of last particle in event;
c         npgeant(npfull)     - GEANT number for particle identification
c                               (1 for gamma, 2 for e+ and 3 for e-);
c         pmoment(1-3,npfull) - x,y,z components of particle momentum (MeV);
c         ptime(npfull)       - time shift from previous time to calculate
c                               when particle was emitted (sec).
c VIT, 5.07.1995.
+SEQ,GENCONST.
        call grndm(rndm,1) 
	p=(1.+conveK+conveL+convp)*rndm
	if(p.le.1.) then
	   call gamma(Egamma,tclev,thlev,tdlev)
	else if(p.le.1.+conveK) then
	   call electron(Egamma-EbindeK,tclev,thlev,tdlev)
c	   call gamma(EbindeK,tdlev,0.,tdlev)                ! for real time
	   call gamma(EbindeK,0.,0.,tdlev)                   ! for time shift
	else if(p.le.1.+conveK+conveL) then
	   call electron(Egamma-EbindeL,tclev,thlev,tdlev)
c	   call gamma(EbindeL,tdlev,0.,tdlev)                ! for real time
	   call gamma(EbindeL,0.,0.,tdlev)                   ! for time shift
	else
	   call pair(Egamma-2.*emass,tclev,thlev,tdlev)
	end if
	return
	end

c***********************************************************************
+DECK,TSIMPR.
	function tsimpr(f,a,b,h)
c Function tsimpr calculates the value of integral of function f from a to b
c with step h using Simpson's formula.
c (b-a)/h must be equal 2*m where m is integer.
c Function f must be decribed as external in main program.
c VIT, DLP KINR, 20.11.1984.
	n=(b-a)/h-1
	fi=f(a)-f(b)
	x1=a
	x2=a
	ni=1
1	x1=x2+h
	x2=x1+h
	fi=fi+4.*f(x1)+2.*f(x2)
	ni=ni+2
	if(ni.lt.n) go to 1
	tsimpr=fi*h/3.
	return
	end

c***********************************************************************
+DECK,COMPTON.
	subroutine compton(E1,E2,teta1,teta2,phi1,phi2)
c
c To sample the momentum of initial gamma quantum for COMPTON1 subroutine
c and store the momenta of scattered gamma and electron in common/genevent/.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call compton(E1,E2,teta1,teta2,phi1,phi2)
c Input : E1,E2       - range of kinetic energy of gamma (MeV);
c         teta1,teta2 - range of teta angle (radians);
c         phi1,phi2   - range of phi  angle (radians);
c Output: see description of common/genevent/. Times emission of scattered 
c         gamma quantum and electron are supposed to be 0.
c VIT, 11.12.1995.
c
+SEQ,GENEVENT.
+SEQ,GENCONST.
	dimension pg0(3),pg1(3),pe1(3)
        dimension rndm(3)
        call grndm(rndm,3) 
	phi=phi1+(phi2-phi1)*rndm(1)
	ctet1=1.
	if(teta1.ne.0.) ctet1=cos(teta1)
	ctet2=-1.
	if(teta2.ne.pi) ctet2=cos(teta2)
	ctet=ctet1+(ctet2-ctet1)*rndm(2)
	stet=sqrt(1.-ctet*ctet)
	E=E1
	if(E1.ne.E2) E=E1+(E2-E1)*rndm(3)
	p=E
	pg0(1)=p*stet*cos(phi)
	pg0(2)=p*stet*sin(phi)
	pg0(3)=p*ctet
	call compton1(pg0,pg1,pe1)
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'COMPTON: in event more than 100 particles',npfull
	npgeant(npfull)=1
	pmoment(1,npfull)=pg1(1)
	pmoment(2,npfull)=pg1(2)
	pmoment(3,npfull)=pg1(3)
	ptime(npfull)=0.
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'COMPTON: in event more than 100 particles',npfull
	npgeant(npfull)=3
	pmoment(1,npfull)=pe1(1)
	pmoment(2,npfull)=pe1(2)
	pmoment(3,npfull)=pe1(3)
	ptime(npfull)=0.
	return
	end

c***********************************************************************
+DECK,MOLLER.
	subroutine moller(E1,E2,teta1,teta2,phi1,phi2,dcute)
c
c To sample the momentum of initial electron for MOLLER1 subroutine and
c store the momenta of scattered electron and delta ray in common/genevent/.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call moller(E1,E2,teta1,teta2,phi1,phi2,dcute)
c Input : E1,E2       - range of kinetic energy of gamma (MeV);
c         teta1,teta2 - range of teta angle (radians);
c         phi1,phi2   - range of phi  angle (radians);
c         dcute       - lower energy threshold for emitted delta ray (MeV);
c Output: see description of common/genevent/. Times emission of scattered 
c         electron and delta ray are supposed to be 0.
c VIT, 11.12.1995.
c
+SEQ,GENEVENT.
+SEQ,GENCONST.
	dimension pe0(3),pe1(3),pe2(3)
        dimension rndm(3)
        call grndm(rndm,3) 
	phi=phi1+(phi2-phi1)*rndm(1)
	ctet1=1.
	if(teta1.ne.0.) ctet1=cos(teta1)
	ctet2=-1.
	if(teta2.ne.pi) ctet2=cos(teta2)
	ctet=ctet1+(ctet2-ctet1)*rndm(2)
	stet=sqrt(1.-ctet*ctet)
	E=E1
	if(E1.ne.E2) E=E1+(E2-E1)*rndm(3)
	p=sqrt(e*(e+2.*emass))
	pe0(1)=p*stet*cos(phi)
	pe0(2)=p*stet*sin(phi)
	pe0(3)=p*ctet
	call moller1(dcute,pe0,pe1,pe2)
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'MOLLER: in event more than 100 particles',npfull
	npgeant(npfull)=3
	pmoment(1,npfull)=pe1(1)
	pmoment(2,npfull)=pe1(2)
	pmoment(3,npfull)=pe1(3)
	ptime(npfull)=0.
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'MOLLER: in event more than 100 particles',npfull
	npgeant(npfull)=3
	pmoment(1,npfull)=pe2(1)
	pmoment(2,npfull)=pe2(2)
	pmoment(3,npfull)=pe2(3)
	ptime(npfull)=0.
	return
	end

c***********************************************************************
+DECK,PAIREXT.
	subroutine pairext(E1,E2,teta1,teta2,phi1,phi2,Z)
c
c To sample the momentum of initial gamma quantum for PAIREXT1 subroutine
c and store the momenta of created positron and electron in common/genevent/.
c Call  : common/genevent/tevst,npfull,npgeant(100),pmoment(3,100),ptime(100)
c         call pairext(E1,E2,teta1,teta2,phi1,phi2,Z)
c Input : E1,E2       - range of kinetic energy of gamma (MeV);
c         teta1,teta2 - range of teta angle (radians);
c         phi1,phi2   - range of phi  angle (radians);
c         Z           - atomic number of target nuclei;
c Output: see description of common/genevent/. Times emission of scattered 
c         e+ and e- are supposed to be 0.
c VIT, 12.03.1998.
c
+SEQ,GENEVENT.
+SEQ,GENCONST.
	dimension pg0(3),pe1(3),pe2(3)
        dimension rndm(4)
        call grndm(rndm,4) 
	phi=phi1+(phi2-phi1)*rndm(1)
	ctet1=1.
	if(teta1.ne.0.) ctet1=cos(teta1)
	ctet2=-1.
	if(teta2.ne.pi) ctet2=cos(teta2)
	ctet=ctet1+(ctet2-ctet1)*rndm(2)
	stet=sqrt(1.-ctet*ctet)
	E=E1
	if(E1.ne.E2) E=E1+(E2-E1)*rndm(3)
	p=E
	pg0(1)=p*stet*cos(phi)
	pg0(2)=p*stet*sin(phi)
	pg0(3)=p*ctet
	call pairext1(Z,pg0,pe1,pe2)
c to fix GEANT numbers of emitted particles but to select the momentum
c randomly
	if(rndm(4).lt.0.5) then
	   x1=pe1(1)
	   x2=pe1(2)
	   x3=pe1(3)
	   pe1(1)=pe2(1)
	   pe1(2)=pe2(2)
	   pe1(3)=pe2(3)
	   pe2(1)=x1
	   pe2(2)=x2
	   pe2(3)=x3
	endif
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'PAIREXT: in event more than 100 particles',npfull
	npgeant(npfull)=2
	pmoment(1,npfull)=pe1(1)
	pmoment(2,npfull)=pe1(2)
	pmoment(3,npfull)=pe1(3)
	ptime(npfull)=0.
	npfull=npfull+1
	if(npfull.gt.100) print *,
     +     'PAIREXT: in event more than 100 particles',npfull
	npgeant(npfull)=3
	pmoment(1,npfull)=pe2(1)
	pmoment(2,npfull)=pe2(2)
	pmoment(3,npfull)=pe2(3)
	ptime(npfull)=0.
	return
	end

c***********************************************************************
+DECK,COMPTON.
c***********************************************************************
c Section of subroutines in GEANT style (for Compton and Moller effects)
c***********************************************************************

c***********************************************************************
	subroutine compton1(pg0,pg1,pe1)
c
c Simulates photon-electron Compton scattering.
c Call  : common/const/pi,emass
c         dimension pg0(3),pg1(3),pe1(3)
c         call compton1(pg0,pg1,pe1)
c Input : pg0 - momentum of initial gamma quantum (in MRS);
c Output: pg1 - momentum of scattered gamma quantum (in MRS);
c         pe1 - momentum of recoil electron (in MRS).
c
c VIT, 07.12.1995 from GEANT subroutine GCOMP by G.Patrick, L.Urban.
c 
	dimension pg0(3),pg1(3),pe1(3)
	logical rotate
+SEQ,GENCONST.
        dimension rndm(5)
	egam0=sqrt(pg0(1)**2+pg0(2)**2+pg0(3)**2)
	ezero=egam0/emass
	emini=1.+2.*ezero
	emin=1./emini
	dsig1=log(emini)
	dsig2=0.5*(1.-emin*emin)
	dsigt=dsig1+dsig2
c Decide which part of f(e)=1/e+e to sample from
1       call grndm(rndm,5) 
	if(dsig1.lt.dsigt*rndm(1)) then
c Sample from f2(e) distribution
	   brd=rndm(2)
	   if(ezero.ge.(ezero+1.)*rndm(3)) then
	      brd=max(brd,rndm(4))
	   endif
	   br=emin+(1.-emin)*brd
	else
	   br=emin*exp(dsig1*rndm(2))
	endif
c Scattered photon energy
	egam1=br*egam0
c Calculate rejection function g(e)
	t=emass*(1.-br)/egam1
	sinth=max(0.,t*(2.-t))
	rej=1.0-(br*sinth)/(1.+br*br)
	if(rndm(5).gt.rej) go to 1
c Generate photon angles with respect to a Z-axis defined 
c along the parent photon; phi is generated isotropically
	sinth=sqrt(sinth)
	costh=1.-t
        call grndm(rndm,1) 
	phi=2.*pi*rndm(1)
	cosphi=cos(phi)
	sinphi=sin(phi)
c Polar co-ordinates to momentum components
	pg1(1)=egam1*sinth*cosphi
	pg1(2)=egam1*sinth*sinphi
	pg1(3)=egam1*costh
c Momentum vector of recoil electron
	pe1(1)=-pg1(1)
	pe1(2)=-pg1(2)
	pe1(3)=egam0-pg1(3)
c Rotate electron and scattered photon into MRS system
	call gfang(pg0,costh,sinth,cosph,sinph,rotate)
	if(rotate) then
	   call gdrot(pg1,costh,sinth,cosph,sinph)
	   call gdrot(pe1,costh,sinth,cosph,sinph)
	endif
	return
	end

c***********************************************************************
+DECK,MOLLER1.
	subroutine moller1(dcute,pe0,pe1,pe2)
c
c Simulates electron-electron Moller scattering.
c Call  : common/const/pi,emass
c         dimension pe0(3),pe1(3),pe2(3)
c         call moller1(dcute,pe0,pe1,pe2)
c Input : pe0   - momentum of initial electron (in MRS);
c         dcute - minimal energy of delta ray to be borned;
c                 if energy of initial electron < dcute/2
c                 delta rays are not produced;
c Output: pe1   - momentum of 1 scattered electron (in MRS);
c         pe2   - momentum of 2 scattered electron (in MRS).
c
c VIT, 07.12.1995 from GEANT subroutine GDRAY by D.Ward, L.Urban.
c
	dimension pe0(3),pe1(3),pe2(3)
	logical rotate
+SEQ,GENCONST.
        dimension rndm(2)
	p=sqrt(pe0(1)**2+pe0(2)**2+pe0(3)**2)
	xe=sqrt(p**2+emass**2)
	te=xe-emass
	gam=xe/emass
	gam2=gam*gam
	t=gam-1.
	x=dcute/(t*emass)
	if(x.ge.0.5) then
	   do i=1,3
	      pe2(i)=pe0(i)
	      pe1(i)=0.
	   enddo
	   return
	endif
	cc=1.-2.*x
1       call grndm(rndm,2) 
	e=x/(1.-cc*rndm(1))
	b1=4./(9.*gam2-10.*gam+5.)
	b2=t*t*b1
	b3=(2.*gam2+2.*gam-1.)*b1
	e1=1.-e
	screj=b2*e*e-b3*e/e1+b1*gam2/(e1*e1)
	if(rndm(2).gt.screj) go to 1
	eel=(t*e+1.)*emass
	tel=eel-emass
	pel=sqrt(abs((eel+emass)*tel))
	costh=(xe*eel+emass*(tel-xe))/(p*pel)
	if(costh.ge.1.) then
	   costh=1.
	   sinth=0.
	elseif(costh.le.-1.) then
	   costh=-1.
	   sinth=0.
	else
	   sinth=sqrt((1.+costh)*(1.-costh))
	endif
        call grndm(rndm,1) 
	phi=2.*pi*rndm(1)
	cosphi=cos(phi)
	sinphi=sin(phi)
c Polar co-ordinates to momentum components
	pe2(1)=pel*sinth*cosphi
	pe2(2)=pel*sinth*sinphi
	pe2(3)=pel*costh
	pe1(1)=-pe2(1)
	pe1(2)=-pe2(2)
	pe1(3)=p-pe2(3)
c Rotate to MRS
	call gfang(pe0,costh,sinth,cosph,sinph,rotate)
	if(rotate) then
	   call gdrot(pe1,costh,sinth,cosph,sinph)
	   call gdrot(pe2,costh,sinth,cosph,sinph)
	endif
	return
	end

c***********************************************************************
+DECK,PAIREXT1.
      subroutine pairext1(Z,pg0,pe1,pe2)
c
c Simulates e+e- pair production by photons in a target with atomic 
c number Z.
c Call  : common/const/pi,emass
c         dimension pg0(3),pe1(3),pe2(3)
c         call pairext1(Z,pg0,pe1,pe2)
c Input : Z   - atomic number of the substance;
c         pg0 - momentum of initial gamma quantum (in MRS);
c Output: pe1 - momentum of 1 created electron (in MRS);
c         pe2 - momentum of 2 created electron (in MRS).
c Which particle is e+ and which e-, should be selected randomly.
c
c VIT, 11.03.1998 from GEANT subroutines GPAIRG of G.Patrick, L.Urban
c and GBTETH of L.Urban.
c
+SEQ,GENCONST.
	dimension pg0(3),pe1(3),pe2(3)
	logical rotate
        dimension rndm(3)

	Egam=sqrt(pg0(1)**2+pg0(2)**2+pg0(3)**2)
c If not enough energy, no pair production
	if(Egam.lt.2.*emass) go to 4
c For photons <2.1 MeV approximate the electron energy by sampling 
c from a uniform distribution in the interval [emass,Egam/2]
	if(Egam.le.2.1) then
           call grndm(rndm,1) 
	   Eel1=emass+rndm(1)*(0.5*Egam-emass)
	   x=Eel1/Egam
	   go to 2
	endif
c Calculate some constants
	z3=Z**(1./3.)
	f=8./3.*log(Z)
	if(Egam.gt.50.) then
	   aZ2=(Z/137.036)**2
	   fcoulomb=aZ2*(1./(1.+aZ2)+0.20206-0.0369*aZ2+
     +              0.0083*aZ2**2-0.002*aZ2**3)
	   f=f+8.*fcoulomb
	endif
	x0=emass/Egam
	dx=0.5-x0
	dmin=544.*x0/z3
	if(dmin.le.1.) then
	   f10=42.392-7.796*dmin+1.961*dmin**2-f
	   f20=41.405-5.828*dmin+0.8945*dmin**2-f
	else
	   f10=42.24-8.368*log(dmin+0.952)-f
	   f20=f10
	endif
c Calculate limit for screening variable, DELTA, to ensure
c that screening rejection functions always remain positive
	dmax=exp((42.24-f)/8.368)-0.952
	dsig1=dx*dx*f10/3.
	dsig2=0.5*f20
	bpar=dsig1/(dsig1+dsig2)
c Decide which screening rejection function to use and
c sample the electron/photon fractional energy
1       call grndm(rndm,2) 
	r1=rndm(1)
	r2=rndm(2)
	if(r1.lt.bpar) then
	   x=0.5-dx*r2**(1./3.)
	   irej=1
	else
	   x=x0+dx*r2
	   irej=2
	endif
c Calculate DELTA ensuring positivity
	d=0.25*dmin/(x*(1.-x))
	if(d.ge.dmax) goto 1
c Calculate F1 and F2 functions. F10 and F20 are the F1 
c and F2 functions calculated for the DELTA=DELTA minimum.
	if(d.le.1.) then
	   f1=42.392-7.796*d+1.961*d**2-f
	   f2=41.405-5.828*d+0.8945*d**2-f
	else
	   f1=42.24-8.368*log(d+0.952)-f
	   f2=f1
	endif
	if(irej.eq.1) screj=f1/f10
	if(irej.eq.2) screj=f2/f20
c Accept or reject on basis of random variate
        call grndm(rndm,1) 
	if(rndm(1).gt.screj) goto 1
	Eel1=x*Egam
c Generate electron decay angles with respect to a Z-axis defined 
c along the parent photon. PHI is generated isotropically.
2	alfa=0.625
	d=0.13*(0.8+1.3/Z)*(100.+1./Eel1)*(1.+x)
	w1=9./(9.+d)
	umax=Eel1*pi/emass
3	beta=alfa
        call grndm(rndm,3) 
	if(rndm(1).gt.w1) beta=3.*alfa
	r1=rndm(2)
	u=-(log(rndm(3)*r1))/beta
	if(u.ge.umax) goto 3
	theta=u*emass/Eel1
	sinth=sin(theta)
	costh=cos(theta)
        call grndm(rndm,1) 
	phi=2.*pi*rndm(1)
	cosphi=cos(phi)
	sinphi=sin(phi)
c Momentum components of first electron
	pel1=sqrt((Eel1+emass)*(Eel1-emass))
	pe1(1)=pel1*sinth*cosphi
	pe1(2)=pel1*sinth*sinphi
	pe1(3)=pel1*costh
c Momentum vector of second electron. Recoil momentum of
c target nucleus/electron is ignored.
	Eel2=Egam-Eel1
	pel2=sqrt((Eel2+emass)*(Eel2-emass))
c correction for conservation of x and y components of momentum 
	sinth=sinth*pel1/pel2
	costh=sqrt(max(0.,1.-sinth**2))
	pe2(1)=-pel2*sinth*cosphi
	pe2(2)=-pel2*sinth*sinphi
	pe2(3)=pel2*costh
c Rotate tracks to MRS
	call gfang(pg0,cosal,sinal,cosbt,sinbt,rotate)
	if(rotate) then
	   call gdrot(pe1,cosal,sinal,cosbt,sinbt)
	   call gdrot(pe2,cosal,sinal,cosbt,sinbt)
	endif
	return
4	print *,'e+e- pair is not created: Egamma < 1.022 MeV'
	return
	end

c***********************************************************************
+DECK,GFANG.
	subroutine gfang(p,costh,sinth,cosph,sinph,rotate)    
c
c Finds theta-phi angles for a particle with momentum P.
c The logical flag ROTATE indicates whether the director
c cosines are along the Z axis (.FALSE.) or not (.TRUE.).
c 
c F.Carminati (GEANT).
c
	dimension p(3)
	logical rotate    
	parameter (one=1) 
c additional (as compared with original GFANG) normalization
	pfull=sqrt(p(1)**2+p(2)**2+p(3)**2)
	dux=p(1)/pfull
	duy=p(2)/pfull
	duz=p(3)/pfull
	rotate=.true. 
	if(abs(duz).ge.0.85) then 
	   dsith2=dux**2+duy**2   
	   if(dsith2.gt.0.) then  
	      costh=sign(one,duz)*sqrt(one-dsith2) 
	      dsith=sqrt(dsith2)   
	      sinth=dsith  
	      cosph=dux/dsith  
	      sinph=duy/dsith  
	   elseif(duz.gt.0.) then  
	      rotate=.false.    
	      costh=1. 
	      sinth=0. 
	      cosph=1. 
	      sinph=0. 
	   else   
	      costh=-1. 
	      sinth=0. 
	      cosph=1. 
	      sinph=0. 
	   endif  
	else  
	   costh=duz   
	   dsith=sqrt((one+duz)*(one-duz)) 
	   sinth=dsith 
	   dnorm=one/sqrt(dux**2+duy**2)   
	   cosph=dux*dnorm 
	   sinph=duy*dnorm 
	endif 
	return
	end   

c***********************************************************************
+DECK,GDROT.
	subroutine gdrot(p,costh,sinth,cosph,sinph)
c
c Rotates vector from one reference system into another.
c Theta and phi are anti-clockwise Eulerian angles between the
c two systems.
c
c M.Hansroul, G.Patrick (GEANT).
c
	dimension p(3)    
	p1=p(1)   
	p2=p(2)   
	p3=p(3)   
	p(1)= p1*costh*cosph - p2*sinph + p3*sinth*cosph   
	p(2)= p1*costh*sinph + p2*cosph + p3*sinth*sinph   
	p(3)=-p1*sinth                  + p3*costh 
	return
	end   

c***********************************************************************


